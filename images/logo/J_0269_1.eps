%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: J_0269_1.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For:  
%%CreationDate: 4/1/2019
%%BoundingBox: 0 0 1121 1121
%%HiResBoundingBox: 0 0 1120.1624 1120.1624
%%CropBox: 0 0 1120.1624 1120.1624
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 26107 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFFAFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85FD40FF85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858BFD40FFAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BFD40FF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AFFD40FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BFD40FF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AFFD3FFFAFAF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD40FF85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8BFD3FFFAFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85FD14FFAFFD0BFF858B858B85FD1BFF85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858BFD14
%FFAFFFFFAFFD06FFAF85AFFFFFFFAF61AFFD19FFAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF618B85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BFD14FF858B61
%FFAFFD04FFAF85FFA98B618BA9FF85AFFD18FF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B61AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AFFD11FFAFAF8BAF
%FFFF85AFAFFFFFFF85FF8BAFFFFFFFAF85FF8BFD18FFAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF858B858B85AF8BAF85AF8BAF85
%AF858B85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BFD13FFAF
%FFFFFFAFAFFD05FFA9AFFFAF61AFFFAFA9FD19FF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B858B858B85AF858B858B6185858B
%6161618B858B85AF858B85AF858B85AF858B85AF858B85AFFD0EFFAF858B
%85FF85FFFFFF85FFAFFD06FFAF8BFF85AFFD08FFAFFD11FFAFAF8BAF85AF
%8BAF85AF8BAF858B618B618B618B618B618B85AF8BAF85AF8BAF85AF8585
%85AF8BAF85AF8BAF8561858585AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD
%0DFF8B61AFA9AF61AF61AF85FFA9AFFD07FFAF61AFFD07FF8585AF618BFD
%10FF85AF858B85AF858B85AF8585858BA9AFA9AFA9AFA9AFA9AF61AF858B
%85AF858B6185858B85AF858B85AF858B378B8561378B858B85AF858B85AF
%858B85AF858BFD0BFFAFFF85FFAFFFAFAF61FFAFFD0CFF8BAFFD04FFAF85
%8B85FFAFFF85AFFD0EFFAFAF8BAF85AF8BAF85AF8BAF618B61AFAFFFAFAF
%61FFAFAFAF8B8BAF85AF8BAF858B8BAF85AF8BAF85AF8BAF3DAF8561858B
%61AF85AF8BAF85AF8BAF85AF8BAF85FD0AFF618B85AFAFFFAFFFAFAF858B
%AFFD10FFAF85FFAFFFAFFFAFAF6167AFFD0DFF85AF858B85AF858B85AF85
%8B858BAFAFA98B3D6161AFAFAF61AF858B858B3D616161858B85AF858B85
%AF8561A96161AFA961858B85AF858B85AF858B85AF858BFD09FFAFAFAFFF
%AFFFAFFFAFFFAFA98485A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A95AA984FF
%AFFFAFFFAFFF85AFFD0DFFAF85AF8BAF85AF8BAF85AF8BAF61FFAFAF8561
%61AFAFFFAF8B85AF8B8B61FFAFAFAF6185AF85AF8BAF858B85AF858B61AF
%61AF8BAF85AF8BAF85AF8BAF85AF8BFD09FFAF618B858B858B858B84534D
%774D784D774D784D774D784D774D784D774D784D7729856185618B618585
%FD0DFF858B85AF858B85AF858B85AF8585A9AFA98B856137AFA9AF618B85
%AF3DAFA9AFA9AF856184532884858B8561A9613785A96185AF858B85AF85
%8B85AF858B85AFFD0BFFAFFFAFFFAFFFAFAF297871787778717877787178
%777871787778717877787153A8FD14FFAF85AF8BAF85AF8BAF85AF8BAF61
%FFAFAF85613DAFAFFFAF8B85AF846184A984A984A95A5453AF5A8585AF61
%8BAFAF8B6161AF8BAF85AF8BAF85AF8BAF85AF8BFD13FF7E4D774D78287E
%7D7E28534D7877297D7E7D534D78717728FD15FF858B85AF858B85AF858B
%85AF8585A9AFAFAF858BAFAFA9AF618B5A537D7E7D7E7D7E7D7E7D2F8584
%598B85AFFD05618B85AF858B85AF858B85AF858B85AFFD0DFFAFFD05FF29
%C5BEC59C53FFFFFF53BEC5BEC54DFFFFFFA278BEC5BE53A8FFAF8B61AFAF
%FD0DFFAFAF8BAF85AF8BAF85AF8BAF85AF61AFAFFFAFAF84FD0853FD08FF
%A82F532F2F53AF85AF8BAF858B85AF85AF8BAF85AF8BAF85AF8BAF85FD0B
%FFAF618B858585FFA84D9CBF9C9C53FFFFFF29BF9CBE9C29FD04FF29BE9C
%BF717E618BA9AF858B61FD0DFF85AF858B85AF858B85AF858B858BA9AF85
%AF858429FD05FFA87EFD08FF28537DA85329858B85AF858B618B858B85AF
%858B85AF858B85AF858BFD0AFFAF85FFAFFFFFAF8BA877C5BEC571A9FFFF
%FF53BEC5BEC54DFD04FF29BEC5BEC5298BAFFFAFFFAFAF85FD0BFFAFAF8B
%AF85AF8BAF85AF8BAF85AF61AF8B8BAF8B5A54FD05FFA97EFD08FF53537E
%28532F7E85AF8BAF858B85AF85AF8BAF85AF8BAF85AF8BAF85FD0AFF85FF
%A96785FFFFAF299C9CC5BE4DA8FFFFFF28C5BEBE9C53FD04FF4D9C9CC5BE
%5384FFAFFFAFFFAF8B618BAFFD09FF85AF858B85AF858B85AF858B858BAF
%AFA9AFAF842FFF7E537EFF847EA9FFAFFFA9FFA8537DFF5353287E535385
%AF858B61AF858B85AF858B85AF858B85AF858BFD09FF85AFFF8B85FFFFFF
%A853BEC5BEC528FD04FF29BEC5BEC54DFD04FF7E78C5BEC5787EAFFFAFAF
%AFFFAFFFAF8BAFFD08FFAF85AF8BAF85AF8BAF85AF8BAF61FF8B8BAF8B60
%53287829772853537E777E7E7E5353A8FF2953A8A929A8538485AF8B6185
%AF8BAF85AF8BAF85AF8BAF85AF8BFD09FFAFA9FFA98B618BFF7E71BF9CBE
%9C53FD04FF28BE9CBF9C53A8FFFFFF7E789CBE9CBE29AFA9FF85AFA9FFAF
%AF858BFD08FF858B85AF858B85AF858B85AF8585A9AFA9AFA98529BE9C4D
%969C289C789C719C78537EFFFF8428FFFFFF28AF28FD04858B85AF858B85
%AF858B85AF858B85AFFD09FF85FFFFFFAFAF85FF53534D534D5329535354
%53294D534D5328FD055329534D534D53AFFFAFAFAFFFAFFFAFFF85FD08FF
%AF85AF8BAF85AF8BAF85AF8BAF61FFAFAFAFFF8453BEC54DBF9C53BEC5BE
%C5BEC54DA9FD07FF29FF7E538B61AF85AF8BAF85AF8BAF85AF8BAF85AF8B
%FD0AFF61FFAFAF61AFFF7E4DBEB8BE4D2FA9FFA984287296BE962953FFA9
%FF532996BE969C4DFFAFFF85FF85AFAFFFAF8BFD08FF858B85AF858B85AF
%858B85AF8585A9AFAFAFA9A94DBE9C4DBE9C29C5BEBE9CC5BE53537E7D7E
%7D7E7D7E06FFFF2F5AAF858B85AF858B85AF858B85AF858B85AFFD0AFFAF
%85FD04FFAF85534D784D537E537E7E29A9287171537E5453A95953784D71
%7128AF858BFD05AFFFAFFF61FD07FFAFAF8BAF85AF8BAF85AF8BAF85AF61
%8B858B858B5A53BEC54DBF9C53BEC59C4D4DC5537DA1A7A1A7A1A7A129FF
%FFA85385AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD0BFFAF618B858585FF
%7D5353A2A9FF7E7E7DA9A9CB77787EFFA97E537EA8FFA8785353A98B858B
%85FF85AFA9FF858BFD08FF85AF858B85AF858B85AF858B85AF858B618B61
%6029BF9C4D969C29BE9CBF4D9C9C53A1C952532853A1C928FFFFFF2F7E85
%AF858B85AF858B85AF858B85AF858BFD0DFFAFFD04FF7E7EFD16FFA953FF
%AF8B858B61AFAFFFAFAFAFFD07FFAFAF8BAF85AF8BAF85AF8BAF85AF8B8B
%85AF8BAF8453BEC54DBF9C53BEC5BE789CC553A7537EA9A9A853C929FD04
%FF28AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD0FFF8B61FF7D7EFD16FF7E
%53AFFFAFFF85AFAFFFAFFF85AFFD08FF85AF858B85AF858B85AF858B858B
%AFFD04FFA829C5BE4D969C4DBE9CC5719C9C53A129A85353FF7D7D28FD04
%FF7E53AF858B85AF858B85AF858B85AF858BFD0FFF858BFF7E7EFF292F29
%2F282F292F29FFFFFFFD04532F53537E7E7E5384A9FFAF8BAFFFAFFFAFAF
%AFFD08FFAF85AF8BAF85AF8BAF85AF8BAF858B858B85FFA853BEC54DBE9C
%53BEC5BE7878C553A753FF7E53A8A97729FD05FF2F84AF8BAF85AF8BAF85
%AF8BAF85AF8BFD0BFFAFA9FFFF8B85FF597EFF7E5A8B618B618B6153FFFF
%FF29618B6161615A28537DA752297DFF85AFA9FFAFAF61AFFD08FF858B85
%AF858B85AF858B858B6185858B858B858529BE9C4D969C28BF9CBE714D9C
%537D53A85328A9537D06FFFFFFA8532F8585AF858B85AF858B85AF858B85
%AFFD0AFFAF8567AFFF85AFFF7E7EFF5A6029535354298B2FFFFFFF288560
%615A6129C9C9CFC9CFA153858B85FFAFFF85AFFD09FFAF85AF8BAF85AF8B
%AF858BAFAF8BAFAFAF8BAF8453BEC54DBF9C53BEC5BEC5775353A77D537E
%FF7E53C929FFFF7D535A8BFD046185AF8BAF85AF8BAF85AF8BFD0AFFAFAF
%85AFFF8B85FF7D7EFF7E3553AFFFA9536153FFFFFF29537E2F53537DC9A7
%5253A1C9767785AF858B61AFFD0AFF858B85AF858B85AF858B85AF618561
%8B85AFA9A94DBE9C4DBE9C29C5BEBE9CC59C53A1CEA1532E7DA7C906A829
%5AA9AFAFAF61FF3D8B85AF858B85AF858B85AFFD0BFF858B85AF61AFFF7E
%7DFF7E5A2FFFFFFF538B53FFFFFF28FFFF7EA853A7CE2853282FC9C928AF
%FD0EFFAFAF8BAF85AF8BAF85AF858B858B85FD05AF8453BEC54DBF9C53BE
%C5BEC5BEC553A7C9CFC9CEC9CFC92953FFAF8BAFFFAF8B61618BAF85AF8B
%AF85AF8BAF85FD09FFAF856185AFA98585AF597EFF7E5A53FFFFFF536153
%FFFFFF29FFFF59A953C9A7297D5328C9C92985FD0FFF85AF858B85AF858B
%858B858B858B618B85AFA98429BF9C4D969C29BE9CBF9CBE9C5328532853
%4C53285328FFFFFF61AFA9AFA9AF37AF858B85AF858B85AF858BFD09FF61
%AF85AF8BAF618B8B7E7EFF7E5A28545353288B53FFFFFF28FFFF7EA87E7D
%CF532F2853C9A753AFAFFD0DFFAFAF8BAF85AF8BAF85AF8B8BAF8B618B61
%AFAFAF8453BEC54DBF9C53BEC5BEC5BEC5BEC5BEC5BEC5BEBF28FD05FF85
%8B61AFAF618BAF85AF8BAF85AF8BAF85FD09FF8B61616167616161672F7E
%FF7E5A605A615A616153FFFF7E297D7E2F7E5353C9CE7D7DA7C9527E858B
%AFFD0DFF85AF858B85AF858B858B85AFA9AFAFAFA9AFAF8429C5BE4D969C
%4DBE9CC5BE784D9C4D9C29C5BEBE9629FD04FFA9AF8561A9AF3DAF858B85
%AF858B85AF858BFD0AFF8BAFFFAFFF858BAF7E7EFF5985608B618B8B8B2F
%FFFFA97EA9A8A984A953A7C9CFC9CEA053FFAFAFFD0EFFAF85AF8BAF85AF
%8BAF858BAFAFAFFFAFAFAFFF8453BEC54DBE9C53BEC5BEC5FD049CBE9CBE
%C5BEBE28FD04FFAF8BAFAFFFAF6185AF8BAF85AF8BAF85AF8BFD0AFF61FF
%AFAFA9FFAFAF597EFF7E5A5A5A8B618B6153FD09FFA928C9A7C9C8537EFF
%85FD0FFF858B85AF858B85AF858B85AFA9AFA9AFA9AFA98529BE9C4D969C
%28BF9CBE9CBF9CBE9CBF9CBE9CBF9629FFFFFFAF61AFA9AF8561378B85AF
%858B85AF858B85AFFD0AFF8BAFFFAFFFAFFFAF7E7EFF5A85FD068B2FFD0A
%FF7E53CFC97D53FFFFAFFD0FFFAF85AF8BAF85AF8BAF858BAFAFAFFFAFAF
%AFFF8453BE9C299C9C53BEC5BEC5BEC5BEC5BEC5BEC5BEBE288B858B85FF
%AFAFAF8BFF6185AF8BAF85AF8BAF85AF8BFD0AFF85AFAFFFAFFFAFFF597E
%FF7E5A8B618B618B6153FD0BFF537DA128FFFFFF85FD0FFF858B85AF858B
%85AF858B618B858B858B858B858528294D784D2928C5BEBE9CC5BEBE9CC5
%BEBE9CC5B829618B6185618B61613D613D8B85AF858B85AF858B85AFFD0A
%FFAF85FFAFFFAFFFAF7E7DFF5A61618B618B618B2FFD0BFFA92928FD04FF
%AFFD0EFFAFAF8BAF85AF8BAF85AF8B8B858B858B858B858B5A5396BEB8BE
%954DBEBFBEBEBEBFBEBEBEBFFD04BE288B858B858B858B858B618B8BAF85
%AF8BAF85AF8BAF85FD0AFF595A597E597E597EFD04532F542F5A2F542F53
%535A537E535A537E535A537E5353537E7D7E537E7DFD0DFF85AF858B85AF
%858B85AF858B85AF858B845A5353284D294D284D284D284D294D284D294D
%284D294D2829535A5385858B85AF858B85AF858B85AF858B85AF858BFD0A
%FFA9A8A9A8A9A8A9A8A984A9A8A984A9A8A984A9A8A984A9A8A984A9A8A9
%84A9A8A984A9A8A9A8A9A8A9FD0CFFAFAF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF5A615A5A365A365A365A365A365A365A365A365A365A365A5A615A
%6185AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD14FFA9FFFFFFA9FFFF
%FFA9FFFFFFA9FFFFFFA9FFFFFFA9FD17FF85AF858B85AF858B85AF858B85
%AF858B858B6185618B6185618B6185618B6185618B6185618B6185618B61
%8585AF858B85AF858B85AF858B85AF858B85AF858BFD40FFAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BFD40
%FF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AFFD17FF7E7E53FF7EA87DA9537E537E7E7EA8FF7E7EFD17FFAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF5A5A53AF5A8453852F5A2FFD
%045A855A5A845A5A8553AF5A5A85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BFD17FF7E53532F532959FD045306532829535953FD17FF858B85AF85
%8B85AF858B85AF858B85AF858B857E2F532F532F532F532F53065A282953
%5A5984FD042F53532F8B85AF858B85AF858B85AF858B85AF858B85AFFD17
%FF537E59FF59A853A87EA97EFF597E7EA9597EFD16FFAFAF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF535A53AF538453845A855A855A5A5A852F7E
%845A535A597E535A8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85FD40FF
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858BFD3FFFAFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85FD40FF85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858BFD40FFAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BFD40FF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8B85AFFD40FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BFD40FF858B85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AFFD3FFFAFAF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85A9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFAF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAFAFFD40FF85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF85AFFD40FFAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AFAFFD40FF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AFFD40
%FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AFAFFD40FF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AFFD40FFAF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAFAFFD40FF85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85AFFD28FFA9
%FD17FFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAFAFFD26FFAF858B61FD16FF85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF85AFFD10FFA9FF85AFA9FD
%10FFAF6161A98B61FD15FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF85AF858B858B85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AFAFFD0FFF8B8B85FF85AF61FD0FFF618B
%61AF858B61FD14FF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF8585618B618B61AF618B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AFFD0EFF61AFAFFFA9FFAFAF85AFFD0CFF6161
%85FFA9AFA9AF61FD13FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AFAF6161AFAF8B85AF8BAF85AF8BAF858B6161618B61AF85
%AF8BAF85AF8BAF85AF8BAF85AFAFFD0DFF85AFFFFFAFFFAFFFAFFF61AFFD
%0AFFAF8BAFFFAFFFAFFFAFAF61FD12FF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B6185616137613D61376161856161858B85AF856161AF
%AFAFA98B618585AF858B85AF858B85AF858B85AFFD0CFF85AFAFFF858BA9
%AF85FFAFFF61FD05FFA87E7EFF8567AFFFA98BAFFFAFFFAFAF61FD11FFAF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B61A9AFAFAF618B6161
%85FFFFFFA98B8BAF8561FFFFAFFFAFAFAFFF618B85AF8BAF85AF8BAF85AF
%8BAFAFFD0CFF8BAFFFAF67618B618BAFFFFF8BAFA953537E2F7E7E535A29
%5AAFAF61AFAFAF858BAFAF61AFFD0FFF85AF858B85AF858B85AF858B85AF
%858585AF858B85AFFD05613D376137613761376185AF856185FFA9AFA9AF
%A9AFA9AF3D8B85AF858B85AF858B85AF85AFFD0CFF61FFAFAFFD0461A9FF
%AFFFA9AF28FFA87EA8CBCAA97EFF597EAFAF85AFAFFFFFFF85AF618BAFFD
%0DFFAF8BAF85AF8BAF85AF8BAF85AF8B8561532F7E85AF8B8B61FD04FF67
%8B8BFFFFFFAF61AF8BAF61FFAFAFAFFFAFAFAFFFFF6185AF8BAF85AF8BAF
%85AF8BAFAFFD0CFF8BFFFFAFFFAF6785AFAFFF592928A8CBC5CBCBBEC5CB
%CBC4FF532F2885FD06FF8BAF858BAFFD0CFF85AF858B85AF858B85AF858B
%858B618528C9772959AF8561FD04FF61AF85FFFFFFA98585AF61AFA98B85
%85618B858B85FFA96185AF858B85AF858B85AF85AFFD0CFF61FFAFFFAF8B
%616161AF8453FFFFFFC59CC5BEBE9CC5BEBEA2FFFFFF29FD07FFA9AF618B
%61FD0BFFAF85AF8BAF85AF8BAF85AF8BAF618B8B7E28A1775384AF61FD04
%FF61858BFFFFFFAF61AF858B85FF3761618BFD0461AFAF61AF85AF8BAF85
%AF8BAF85AFAFFD0CFFAFA9FFAF8B61AF616785A97ECBBEC5BEC5BEC5BEC5
%BEC5BEC5BEC5FF2FFD07FFAFAFAF85AF61AFFD09FF858B85AF858B85AF85
%8B85AF856185AF85852F2F53298561FD04FF618B61FFFFFFA985858B61AF
%A9613D6161AF376161AFA961858B85AF858B85AF858B85AFFD0CFF858BA9
%FFA9AFA9AF842F2FFFC4BE9CBF9CBE9CBF9CBE9CBF9CBE9CCB7E2F53FD05
%FF85AFA9AF61AF618BAFFD07FFAF85AF8BAF85AF8BAF85AF8BAF618B858B
%618B8BAF2F8561FFFFFFA853295353534D532F5329532F535AFFAFAFAFFF
%AFAFAF8B85AF85AF8BAF85AF8BAF85AFAFFD0DFF85AFFFFFAFFFAF5AA8FF
%C5C5BEC5C4C5C4C5C5C5C4C5C5C5BEC5C4CBFF7E7EFFFFFFAFFFAFFFAF8B
%61AF61FD08FF858B85AF858B85AF858B85AF858537AF856185AF855A5A61
%FFFFFFA971BE9CC5BEBE9CC5BEBE9CC59C7EA9AFAFAFA9AFAFFF3DAF858B
%85AF858B85AF858B85AFFD0EFF618BAFFFAFFF53A8A2C5BEBE9CCBC4CBA2
%FFC4CB9CFFBEBE9CC5BECB53A8FFFFAFAFAFFFAFAF85AF61AFFD08FFAF8B
%AF85AF8BAF85AF8BAF858B61FF8561856185AF5A5A61FFFFFFA878BEC5BE
%C5BEC5BEC5BEC5BE9C7EFFAFFFAFAFAFFF618B85AF8BAF85AF8BAF85AF8B
%AFAFFD0FFFAF8B618B615AA8CBBEC5BEC5BEC5BEC5BEC5BEC5BEC5BEC5BE
%C5CB7E7EFF8BFD04AFFFAF8BAF67AFFD08FF85AF858B85AF858B85AF858B
%61FFFF6161FFAF618585295AA8FFFFA84DBE9CBE9CBF9CBE9CBF9CBE715A
%85FFA9FFAFAF8561858B85AF858B85AF858B85AF85AFFD12FFA95353FFBE
%BE9CBF9CBE9CBF9CBE9CBF9CBE9CBF9CBE9CC5A8535AFFAF8B618BAFAF61
%6185FD09FFAF8BAF85AF8BAF85AF8BAF85AFFD06FF858B8B537D54295353
%7796BEB8BFBEBFBEC5BEC5BE9C5A61618B8561618B858B85AF8BAF85AF8B
%AF85AF8BAFAFFD13FF2FFFC4C5BEC5CBCBBEC5CBCBBECBC5C5BEFFCBFFC4
%C5BECBFF54AFFFAFAFAFFFAF8B8BFD0AFF85AF858B85AF858B85AF858585
%AFA9AFA9AFA98585AF28FFFFFF2F7E535328294D7195BE96BEB8BE715A85
%8B618B858B858B618B85AF858B85AF858B85AF85AFFD13FF537ECBBEBECA
%FFC4C59CFFFFC5C4CBBEBEFFC5C4C49CC5CB7E59FFAFFFAFFFAF6185FD0B
%FFAF85AF8BAF85AF8BAF85AF858B85AF85AF85AF618B8553FFFFFF53A8FF
%FF7EA8A97E54294D4D78719C59AF8BAF85AF8BAF858B8BAF85AF8BAF85AF
%8BAF85AFAFFD13FF7E7ECBC5BEC5CBFFBEFD05CBC4C5BEFFFFFFC4C5BEFF
%538BAFAF85AFAF8B85FD0CFF858B85AF858B85AF858B858B85AF61613D85
%A985858B29A9FFFF2FA9FFFF59A9FFFF847EFFA953532929297E858B85AF
%858561AF858B85AF858B85AF858B85AFFD13FF53A8C59CBFCAC5CACBCBFF
%FFFFC4CB9CC5FFC59CC59CBEA87E596185FF856185AFFD0CFFAF85AF8BAF
%85AF8BAF85AF85AF858BAFAF858B858B857EA8FFFF54A8FFFF7EA8FFFFA9
%7EFFFFA953FFFFFF53AF85AF8BAF858B8BAF85AF8BAF85AF8BAF85AFAFFD
%13FF53FFC4C5BEC5CBCBC5CBBEC5CBCBCBFFCBFFCBFFC4C5BECBA953AF8B
%AF67858BFD0DFF858B85AF858B85AF858B858B8561FF6185FF3D8B858B2F
%537E7E28537EA828537EA853537DA8532953A85353858B85AF858B85AF85
%8B85AF858B85AF858B85AFFD13FF5353FF9CC5BEBE9CC5BEBE9CC5BEBE9C
%C5BEBE9CC5BEC5A8537EFFA967A9FFAFFD0DFFAF8BAF85AF8BAF85AF8BAF
%85AF61FF8561AF61618B8B84537E7E53FD087E53A87E7E53A87E7E59AF8B
%AF85AF858B85AF8BAF85AF8BAF85AF8BAFAFFD14FF7EA8CBBEC5BEC5BEC5
%BEC5BEC5BEC5BEC5BEC5BEC5CB7E5AAFFD13FF85AF858B85AF858B85AFFD
%0585AF858B618561AF5A59FFFF53A8FFFF7DA8FFFFA87EFFFFA853FFFF7E
%5A61856185618561856185618585AF858B85AF85AFFD14FF53A9C4BE9CBF
%9CC5A2CBC4CB9CCBBECB9CBF9CBE9CCB53A885AFFD12FFAF8BAF85AF8BAF
%85AF8BAF85AFAF8B616161AF618B8BAF29A97E5353A87E532FA8A85429A8
%A854287EA8535AAFFD0AFF61AF8BAF85AF8BAFAFFD14FF7EA8FFC4C5BEC5
%BEC5C4C5C4C5C5C5C4C5BEC5BECBFF7E7EFF85FD12FF85AF858B85AF858B
%85AF858585AFAFAFA9AFAF8585AF8529537E297E7D7E53847D7E597E7D7E
%7D537E7E2F60616161AFA9AFA9AFA9AFA98585AF858B85AF85AFFD10FFA8
%53537DA85329FFA2C59C9C77C5BEBE9CC5BEBE9CC5BECB7E5353FFAFAFA9
%FD11FFAF85AF8BAF85AF8BAF85AF85FD08618B85AF29FFFF53A8FFFF7EA8
%FFFFA97EFFFFA953FFFF53618B61AF618B618B858B618B61AF85AF8BAF85
%AFAFFD0FFFA953A7C928A8FFA97EA228537D7D2877BEC5BEC5BEC5BEC5FF
%2FA98B8B8B858B858BFD0FFF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B8553A8FF2FA9FFFF59A9FFFF847EFFFF8453FFFF28858561A985
%A96185AF6161A985858B85AF858B85AFFD0FFFA876C9A7A753FFA85352A7
%A7C9C9C976299CBE9CBFC4FFFFFF29FF8561858BA9FFA98BFD0EFFAF85AF
%8BAF85AF8BAF85AF8BAF858B85AF858B8BAF85AF537E84537EA9847E7EA9
%848453A984842FA9845461AF61FF85AF61AFAF8B61FF61AF85AF8BAF85AF
%AFFD0FFFA853C9CF7D7EFFA853CFC9CA537DC9CF7D53CBCBC5FF535329A9
%8B8B61AF61FFFFFF61FD0EFF858B85AF858B85AF858B85AF85613D856161
%3D8B8561842F595A537E595A537E595A537E595A537E595A5A858561A98B
%AF85A9AF8585A985858B85AF858B85AFFD10FF7D532853A9FF28C9C97D06
%292853C9CE527E7DFF7D7EFFFFFF8B858BFFFFAF8B61AF61FD0DFFAF8BAF
%85AF8BAF85AF8BAF85AF6161618B6161858B615A59AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF61AF61AF61FF8561856185AF61AF8BAF85AF8BAF
%AFFD11FFA9A9FFFFA853C9CF5329A1C9A1CEC9A7537E287EFD04FF8BAF61
%FF8B8B85AFAF8B85FD0CFF85AF858B85AF858B85AF858B85FD0461856185
%6161288585AF858B85AF858B85AF858B85AF858B85AF85618561A985A9AF
%613D3DAFA96185AF858B85AF85AFFD15FFA976C9A7A12829287DC9C9A753
%FD07FFAF858B618B856161618585A9FD0BFFAF8BAF85AF8BAF85AF8BAF85
%AF6161618B6161858B308485292829282928292829282928292829282928
%8461AF61AF61FFAFAFAFFFAFAF61AF8BAF85AF8BAFAFFD15FFA87DC9CFC9
%C97D5328A7C9CA53FFFFAF8BFFFFFF8BAFAF8BAF8B85AFAF8BAF8BFD0BFF
%85AF858B85AF858B85AF858B85FD0461856185855A298585AF858B85AF85
%8B85AF858B85AF858B858B29618561AF85A9AFAFAFA9AFAF8585AF858B85
%AF85AFFD0EFF618B618B618B618528C9C95328772829A1C9777EFFFF61AF
%85FFFFAF85FF858B61AF858B61FF61AFFD0AFFAF85AF8BAF85AF8BAF85AF
%8BAF6161618B6161858B61842F2928292F532F532F532F532F53292F2929
%2F8561AF61FF85AF85AF858B85FF61AF85AF8BAF85AFAFFD0EFF8BAFFFAF
%FFAFFFAF53A1CEC97D28537CCEC953A8FFFF8B858BFFFF85AFAFFF61AF85
%AF85AFAFAF61FD0AFF858B85AF858B85AF858B85AF858B378B858B858B85
%8B858528A928AF858B85AF858B85AF858528A9288B858585616185A9AF85
%AF85AFA985858B85AF858B85AFFD0EFF618B858B858B858B5A2FA1C9A7A1
%A0C9A75359FFFFFFA9AFA9FFFF8B85FFAFAF61AF85AFA98B61AFFD0AFFAF
%85AF8BAF85AF8BAF85AF8BAF6161618B6161858B61AF53534D535AAF85AF
%8BAF85AF8BAF535353295AAF6161858B61AFAFFFAFAFAFFF61AF85AF8BAF
%85AFAFFD0FFFAFAF85FD05AF845353CAC9C97D535AFD09FF85FD05AF8BFF
%AF8BAFFD0CFF858B85AF858B85AF858B85AF858B858B858B85AF858B8553
%4DBE4D7E858B85AF858B85AF855371BE4D5A858B61613D6161613D616161
%3D85858B85AF858B85AFFD0EFF618B618B85FFAF8B618B615A2F532F5960
%8BAFFD08FFAF85AF858B858B618BAFFD0DFFAF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85845A5A2F292829537E5A5A597E5A5A597E5329282959
%5A598B8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAFAFFD0DFFAF8BAFFFAF
%FFAFFFAFFFAFFFAFFFAFAF8BFD11FFAFFD10FF85AF858B85AF858B85AF85
%8B85AF858B85AF858B5A5B365A365B365A365B365A365B365A365B365A36
%5B365A84AF858B85AF858B85AF858B85AF858B85AF85AFFD0DFFAF618561
%8B5329062928290629282906292829062928290629282906292829062928
%FD11FFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF858B618B618B
%618B618B618B618B618B618B618B618B85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAFAFFD17FFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFD14FF85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF85AFFD40FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF85AFAFFD40FF858B85AF858B85AF858B85AF
%858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B
%85AF858B85AF858B85AF858B85AF858B85AF858B85AFFD40FFAF85AF8BAF
%85AF8BAF85AF8BAF85AF8BAF857E535A855A5A845A545A532F85537E845A
%5AAF5A5A7E5A5A547E532FAF8BAF85AF8BAF85AF8BAF85AF8BAF85AFAFFD
%17FF537E7EA953A97E7EA97EA8A97E7EA87E5353FD17FF858B85AF858B85
%AF858B85AF858B85AF858B535A2F53295353532F532F2953292853285A7E
%538453295A2F5A598485AF858B85AF858B85AF858B85AF858B85AFFD17FF
%537D537E537E53A8597E53537E53292F7EA8FD17FFAF8BAF85AF8BAF85AF
%8BAF85AF8BAF85AF8B542F538B53535A5A7E5A5A845A2F5A7E5359AF5353
%2F5A2F5A297E84AF85AF8BAF85AF8BAF85AF8BAF85AF8BAFAFFD17FF287E
%7E7E53A87E53A853A87E537E7E537DA9FD17FF85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858B85AF85AFFD40FFAF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAFAF
%FD40FF85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF85AFFD40FFAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AFAFFD40FF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF858B85AFFD40FFAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AFAFFD40
%FF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AFFD40FFAF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8B
%AF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85AF8BAF85
%AF8BAF85AF8BAF85AF8BAFAFFD40FF85AF858B85AF858B85AF858B85AF85
%8B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85AF858B85
%AF858B85AF858B85AF858B85AF858B85AF85AFFD3FFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">os0012_3</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-04-01T15:50:58+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-04-01T15:50:58+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-04-01T15:50:57+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9N6vrFppdpLcXDqixRtKzOQqhUFSzMewy3FiMy0Zs/BsN5HkGOj80/Jxkirq&#xA;9kImWsh9b4g22w2/z9sv/Jyo7G14sljYVW++7KDOk9lJIoYDiwIYUIIGY/DwyAU5BPGSO4sWeXgV&#xA;BUnkVUEU+0zBQOvic2gFvPk0gjrmneqYRcQtMpNYvUUMaVJVV6swA3GTGNFmrrZM9Jnjnmtpo68H&#xA;ZSKih65TniYggt2kkJTiR3srzVPRJVrPmKx0cGbUHWCzXiGmYmpZ2CqEUAs5qei1OXRxXG2g5Tx8&#xA;NbIfQvOGl60iS2Z5wSMYxJUji67MjqwRlYGgpTvk56ehYNtUdX6+CUeEn8fsVdf+3D8m/hk9LyLj&#xA;9o8wxdtZVR/dhn4h/TQl34sTxNFU9eJ36bdczzCINEuthDJKHGI2F9tq6T3aW31aaMyLIySMEKfu&#xA;vTLAlHYqaTr9oD8MrcrPpMmIAy24uTKtB/3nk/1/4DMHVcw5vZ/0H3orUL0WcKyEA8mC/ESoGxNd&#xA;gx7eGV4sfGab9Rn8ON+f46FLU8wTOx4xLxr8NKkEDru3AjbxXMg6UDr+PtcIdoSJ5fj419yY2GoR&#xA;3isVUo6GjKaHsDUEdRvmPlxGDm6fUDID0IYzcyiJXc70JoPE12zZQjezoZmrKAW/uFasoQDkFZAf&#xA;iFa07+ArTLziHRo8QjmmEEscpDRsGFabZRKJHNvhIE7MvzUPTILVNTjsYg7lB1ZjI4RVRRVmZjsA&#xA;PE5bix8V9zj583BQAslLbfznp1xO0MCO8kaLJJGQySBWoAwV1XkvI05VpkseET5SDDNqZY/qga/H&#xA;45o7WHV9PV0IKsykEGooQfDJacVOmGtkDjBHexq9uxaw+px5kkAKDTr9+bHHj4jTo8uThFoHTPMm&#xA;m6jLcLbTJItuVEhSp4lhX4iNvp6dR2yUsVBslGcPriYg8rZToP8AvTJ/qfxGYGq+kOw7P+o+5Ond&#xA;I0LuwVR1YmgzDAJ5O1lIAWWD2H5w+Vb3UobGOK8Q3EiwxTSQFU5O3FSxrspJFD99MvOlmOjOUTG7&#xA;2pnKsrKGUgqRUEbgg5jkMAbYjdyrEZpG+ypYn7+m+baAug85lNEljl1550WG9ex9ZUuIxycy1WOg&#xA;oSA4qpah6V/UcujjF0SxMMhhxxjYTyzu4Lu2S4gcPG4qGU1GVyFGl367Ij8xoxPok1utxJBI0dQU&#xA;px+0KBga15dCKbiozE0lizTvMmYQzQPUdOjyG99SLQzc3IuVlvEW0gtVNvKQsEFq0Bb93GzNIGjU&#xA;hR+yw/a+HNM+E+7f53bl4tdM8PDRqR+2rezeU7s3vl6O8jaVraWA+m03EO1KirBSRy23I2PvmBlk&#xA;DId7rscJRE75b+772Med+Z8tXqhTxpGS4B2/fJSjAihzPxgWHF7OjxaiESLBLzfTpL64XSrSSRri&#xA;JJYntY1ml9aJpGNWhUtwDvMwFTQV4+5AzgxlcR9n3/B6jXaMD6Y+nhvr9r2DyzNNKLUzoUnV1Ew2&#xA;3Y0YsOJYfFyrSuQ1EaB9zyGmIOQVy4maZqXoXmf5lfFoZF1LcS3GmTrdokPxiQIzhyxUnighkYuS&#xA;vwgfIHZRhE8gKl+Pvdbp8kxMgk3H9ZWflVHbJpcl+Q6evO941qIvSSOJgI4pI1bd0kWNSpAH3rhy&#xA;g1wiu5cteJxm6H4/HJmvmNwgjcioVXag9qHKdILsMO0jVH3sRgTUI76eaF0t+RspiycTSEtc/wAy&#xA;deW/QZlamY2HvH3N+hw3phxD/KGQ/wBLFItJ1XUH1q8t7q5rcWKKsTBJxG6zlGqPUknCAqi8ONAV&#xA;+W0tMBI8tvx7nG7VkYwjv1epaBX6s9evP+AzX6r6nI7P+g+9B+a7pba39eXaC2jknlkFDxRVJb4T&#xA;u2w7ZPS1u168GRjEPCdNuLTUIpJWuZo51YiVZjCCXruagPX4q982keGXJ6/TaHSZoExibHS63er/&#xA;AJUf8ciJRVgqyn1v52aYl67D+7YlKjY0qMwNby+LywjWpkK4aCTfmFq02nWkbxcOcjmOISkKnqNU&#xA;1YsyjZVY+Phmw0tAE9XU49HLUZhAeZ7uXmW/J2raHP5aFzr9/DczRXMqzCSRvU9JCOPGCBiPh+RF&#xA;O+YepnOM/Ts7yegxRAiYgmhf8SO8t3dvc3l79TVfqsNxLCpCFGASd+Ctyo1QpoeW/TLpS4sUSTZL&#xA;o8uPgzkCPDHbp+PN6RmkejYz5qtp7z1IrVDJdRCKSOIn7Zib1ePeitx4/ZO+ZUYXiIurt1+TJw5w&#xA;asx/b+PMsK8u3uo6xrxkuLua8SxLeiXSKOSSO4oIkUoifC3psz1qKqlOhyOl08oXIjh28+fx7unx&#xA;bdfqISiIRPFZ6U9Fv/8AjjwfDw2T4K1p8PStBk8X94fi0aj+4j05fc8681C2Zozf3CRafJciK4WR&#xA;HNVAFd4/j2SpULWrU2ABObKViG3NwNBEHKbF/o/F97H/ACfDZW2o6k9pdiaO6RZY45AqjjCzofT+&#xA;EP3Unf8AayWCRJIIpu7XBqJ9/N655bl9VzJSnOMGnhUjNfrBW3mz7NNknyRuvuy2FVA5F1AZgSF6&#xA;1O2/SvTKdKLm5XaEqx7d7xHyhb2895ei5i5vaaPd3luHXZZYjEYpV5BlLL26/LtmwzmjQ/nB2naO&#xA;MwnK/MvQ/wAptRvbvQopLqQyvIZS9AoXaQgGgA7bbAZjayADqdPM+JXSmvM8lullKJuVZJkigCAl&#xA;jNJIEiAp4uwGZOCfCQejq8mI5CYjm8Yjkuk1/UDdu0c0XKBEqiysTVVUsKMqpFsafapQU+0ssmSB&#xA;9Vc3fiEY44wiKrm9N8h3TTWkxImCyMGX1w1aRokVQTseRStR9564DH0gul1WS8vD3B6Nqem6NqQ4&#xA;3jll48CqXEkSkVruI3QH6c1UTOPIfY7kyxk3YYxH5If0ntZdStW0+eRfrdoov1EsPEI6EnUGXkVU&#xA;AMVIAH2Tl8spO9G/h/xLGHhxFAgBlFraabp+mmysWCwIhWKIyNJTagVebMQPADKPUZAlM5x4SAR1&#xA;Yp5i8ty6zpU1g8JHq8d5EmKfCwPxLFJA7D25jfNlDMAebp8cJxkJAGx5MXj/ACqv4hCkMsSww8SI&#xA;jFqRUMjcl4j6/wAQAadst/NDv+5zZazUygYEzMTtXSvkz/TrF4bqLhbmNPUDNROIr4nbMXLlBid7&#xA;2cPT4JRmPTW/cyN5I0pzYLXpUgfrzXAE8neSkBzKQeZNHi1GEGze2FwVkhl9eSYRtBMpEicYZI92&#xA;IXL8cpDmC1iUBuCGvLOi2+lJIZnt/UpHDAIZJmQW8KBYlImkkoV36Y5JSl0KfEgTZIROt0maL0/3&#xA;gAYNx+LrTrTLNNtd7Ov13qIrdiOreW753a40ppLa6m4rcE3F9FG0ag0AS2miXYscy+OJ+rf5OPin&#xA;OA4RYj5K2j+XntYlku42mvSKO5luZ0AVvg4C5eUrRaY+IBsDQa8olM2RfwZhoastvIGBB59xTsMw&#xA;dSdw7PQAiJvvX6pHb3dlNb84jI6lV5uygH3aMq4+g5VDiBvdyZygdiQ86i/LFYzxjs9Aji5J8Kre&#xA;D4f92f7vG4/ZzM8c/wBL7P1LHMBykPmzjyxplro+mi1paxMHYhbZn4BSainqu7DxIrSuY2WUpnqg&#xA;ThZNiykuq6Ja6lG0N5btLHU7AutagjqpFRQ9MzozDpAJA2LYlH+Xd0byP1bWz+oh6yqv1wyFak/D&#xA;WXgD07Zb4sfxTZxz75Wy7TNGt9OjENpbtHHUGh5sfDqxJyozDXUybNszZ1UcmIUeJNBmrAt6AkDm&#xA;lHmGO7u7JYtOntVm9QF/rLScDHQ1p6LoeVaUrluK4myC1TlCQokMc0Dyre6bdrWPRoLGWb17yK1F&#xA;wru5B+IcpOJO/wC0OmXzyk8uK2sjGefCWU6u8cloEiYOQw+FSCaUPYZXgBEt2rWSEoVHfdhXmbyh&#xA;b61br6lsJLiNg0XqtOsYNaMSsTpU8SaHNhDNXVwME54jcbB9yW+Xfy/FhLzurSBVjJaAWrXYoxJJ&#xA;5epIwNa77b4ZZhdjn8E55zyfVxG+9n+hxutxIWUgcO4p3GYWpIoORoIkSN9yO1C3069hNvdvVK7q&#xA;srRMDSnVGVu+Y0DOO4c/J4ctpUxI+QtMsdUF3oa2dmrKkcshluluGjL8pV9SOZdqKOIIO+ZHjSI9&#xA;VlMskSbMvtZNp+m6Pp8kkttI3OXeQyXMstT40kdx92USM5CiPsQJYwbsX70g1bSLfUoZrS8gM1tI&#xA;wZk+IA8WDLupB2IBzYQmAHSkSEiRbF18k6tHes0KQpbA8IqSXwlEIaoUsJaVoflXLY5Yjl+hlMyk&#xA;KlxFk1lpMVlH6dvE4U7kuXkb/gnLHISy8XMtAxEch9ihquqQ6bbfWJYpZV5AFIV5vQmhbjUVA703&#xA;wxiTyQKurpAt5otIb2S1uTwdfSC8FkcfvkSRKsqld1kU5b4YIsFvhotSYmfAeAdU80+QyXMdVKlZ&#xA;VUhgVPUHodx1yjKKB9zXgNzHvCd63q36Ng9d9olFWNKk70oB3+XU9BmBhxiTus2SYkIxG5Y0fP8A&#xA;cTTwqbX6lbO4C3LMZK16cwUVVT+Yqxp8t8yRpBEEndztX2dqYY+IGIr6t7+fl3stsdQjuw4A4yxU&#xA;EqdQOQqCGHUHMTLiMPcXC0+oGS+8c0Jr/wBiH5t/DLtL1cXtHkGA655vtdLuI47h+KT8Pq8cXptO&#xA;wcsocrK8aCMtG45EinHfNnwAR75Osw4MuU7bQ76/H4Ctovmqx1J0SGT1OQfmrGMSxmOQxEOsbuKV&#xA;oQwJBBBrg8O43yPcubFkxSqQuPfX2M40D7E3zX+Oa3Vcw7Ps7kULf+aYLIzG5V0WMsY1jCsWSMBn&#xA;kZmIRUUEEkkdQOuVZYxgASebk4Mk8spACuFF6T5i03UYElgmDpI3GNwrKHrToD0603/VgOE1Y5JG&#xA;oiJGEvqBr8fNNMqchiOozei08vEvxc/CoqTVqbDNthjdB5vUS4TI+aCl1MRLyeBwPhNdqUanX78v&#xA;GG+RceWauYKvb3dtcAmGVJKAFgjKxFfHiTlc8co8w2RnGXIsnv8AUo7NI6rzZyARUCgPfufuGazH&#xA;hM7d/n1Ix15sdh/MCOTzI2im1o9G9NuZBIiMpkchlBpxgYAUryG/wkNkBEH8e79bkkEC2WQyrKgZ&#xA;aV6OtQSrDqppXcYJRosYTEhaF1j/AHgf5r+vLNP9bja3+7LC7vWTDcLBHA00jtwiiT7bnepoaAAc&#xA;W3YgbdRUV2WUwxw45mg6XBCeWfBAWllv5yVr17We2aBhLJDG0hVUZ43KceStJQnj328DlmOEZxEh&#xA;yItzdV2XqcGPxZAGHl097NPL0gknEgFA8XKh6itD2zD1YoV5o7ONzvyU/OPmx9D0m4u7aNZ5Yo5O&#xA;IetPVCFkWg48q05UBqQNsqwabj5mnPlqf3kYjle57kh8h/mPe6v9ag1RInngYGOa2HEOrAMVVSzh&#xA;zHVSxVujL3625tEByPzb9bkGCYjz23qiR3e++b0IGoB8c17NimrTpBcTyOCVDmtKfxpm1wR4gA87&#xA;qpcM5HzSJvNWmrdpC7okb1Cyu6qGZaBgrE8DxJHL4tq75bwxo+oWGvgy7HglwlG2Or2N7I0cE0ck&#xA;iAMyxur7E07YDEdCtSH1AhmktytvbJIwqCY0FPFyFH4nNVGHFKve9BLIIQBPkPnskA/MDQzqy6aC&#xA;TK8wt0mDRcPVbYKVLib7Xw/3f4AnAY1Kv0fp5fa2RJMeIcmQWl0twjOoK8TxINQegPQgHvjOHCWG&#xA;LKJiwwjV5xBCrnnTcERgEkEdPlm6wRsvMZpUHjiwLLbRSRtLArqLeOdNLuIh6/1moVpo4OLED4K8&#xA;jv8AD0yQBB/a9F+blGJjZqtxY5fN7PoM0sl1CTw4SMGolBupVdgCaDIaqIES6DRyJnHzP6k0/ME3&#xA;reXnitI45Wd1eZJCwPpQ/vT6fH7T8kXbvmq098V9z1HjjHIG6N7fBgmlXeseZra5ikVRbR8lnuOC&#xA;orLzaigqteThQ6noVYH/ACTl4coPSj+Pu5FzdZ2lGGKQEfUQa3Nd33cnqGhyQyWCtGhQ8iJKksSw&#xA;puWbc1FMxdSCJ7um0EonHYFd/vUPMal4I0BoW5ivhUDLNIaJae0hcR8XkfnSz1W51yxm01Z4lFtB&#xA;BdGOCSYckku2KjirDl8QPH39s2kNrvvv4bO07C1mOGIDj4Dxi/lL8V+pD+V9M8ww60WvluV5pLCp&#xA;lgeIem8kZB/eKv2/SqabLTtlsZRIJ7nE9otV4kIRE+M8cv8AS9Px0exaOrtbXSx0DkUUt0qQaVp2&#xA;zTagjiFuLogTCQHN5z+bd3BFcaa6gPJGss8yrI4VULR/vXjFOS80+AE9gTsMtxYTL4eX6fvc/SYp&#xA;GMpRG3Wj+ju/Ym35U3NqNBii4CKb60RLb09UxuEjBUyOBsT+8FNxWhoRjmxSF2f0d/8AY06mPh5h&#xA;GQqW3n3dem70nNc5bz3zUUb64s0yQ2qRTNOZJOClWDChrt229+mbrFQx8nnDEy1AAPKV/a8dnuYb&#xA;bzA08lwX0eK9JKpGHie1ScArG4lEklYyBsBv374RiiY8t6+13pygdC9N8m3SXFvAkUnKGJJVR1bm&#xA;GUTNQVau3xdqdMmYCOMPP6mROoI7gz3X7dpVjaLgsqRuxeRgiFVKkhj8gc1umnw3fK3aa3DxkVzo&#xA;/oeKN5qnbz+0t7wgmkuhBFNHOqUjLvEedE9SVW6Dk1QAAdhmdHDCIHX4OXqcN4OLjq43T2/y5IWt&#xA;JBUMofkrDuGAOYGrHqDi9mn0EeaJ1j/eB/mv68q0/wBbdrf7svIPOWqahZ3kcNm7LPqBmtg8PppL&#xA;HEShkdGkZI1NAKszL23HUbHU6WOURJ5R3+PRwuyZyHiV5IO28rXun8BcPCLq6MUsMFnJEzQiGTkZ&#xA;LpFMkavwp8UZ4swpWpFb8WYSNDk5WXWZsGEwBBhPmDv8nqflRQrBA3IKjqGJrWj0r3zD1xtweyxU&#xA;vgfvYn55u9cXUrC70y7XSg0/pXVz6QnCo8iRtHQpIA5FW5UG1RX4t7IwAhR3psxZOKc9qMh921e9&#xA;JNFgh1mTytLpcEllDoN5dCCCIspmQTL60jwq8vFCvMGSrBmPGg5UAyAgys/U5Qy3Dvlt9w/HJ7NZ&#xA;GtnAfGNOu37IzW5PqPvcnB9EfcGI+ZpYIVupZ39OKNy7vRiAF3341NNs2ukuhXc6HVx4pkd8njE7&#xA;MsdzPBJLpThCtrcszg3FuXWT0jJbtLLG/wAC8WVKEni1Btlow0eVh6qWg1EMYMo717/u3emeTogN&#xA;JsJXieO8e0T668wIlebmxZ2qW+0CG67ZVwkX73ndZkEpCjdBnOu3EMGmLLLX04x6rgME+FFJJ5H+&#xA;XZtt8wdOPUXM1f0Ac/Ll9rwG9ab/ABTJq0Oj87b10uvTMbByyKCTyVeXMsvKnTltUjc7IAX9TECX&#xA;hcBHl+1775alSa0MsbAwyhHiQbijLXlWi/a8KZrdVzDLQAgEH5JTe6TqFxaSwRo0TyKVDmMSAV61&#xA;Vtjt45lDLHvdeNPP+aWNv+XF2VAQwrTsdOtyOVa8qUGWfmh3/az8Kf8ANP2srsdNuYZYKwt8BTk/&#xA;DjWhG+wAynJlBB3Ri08xMHhPNPr2ws72ExXUEc6EUAlRZAO/Rge4Ga+MzHkXdyhE7kMe0/yLb29w&#xA;r3D2txbgsXgFhbRVr0+JRUU/HLpZye/5oEAGUIiIgRFCoooqqKAAdgBmOSzS3XLeeaOMQqSw5bgV&#xA;pUChpmTppAXbga7HKQFC2BT+QdeuJfWubqGeYkF5ZNOiLtRQtCeXTbb7szxqYjkftcLwZfzT9rrX&#xA;yF5itZ0ntrq3hlXq8emxqSCACAefIV+eJ1MTzP2r4Mv5pZ5odtPFDIlwp5HiCWWnLY1NMwNRMEin&#xA;N0WMxBsUgfMXkrTNWInjiggv6it1LD6/wAUKhecYFfHI49RKPU07CEjD6Tw+5W8s+UtP0O0CCOGS&#xA;8LO01zFCIQ5ZywPp8nAIWgrXelcGTPKR5mmMhxG5blPMpSxPV9EnvROn1cFyWMMskQlCtU8X4t1p&#xA;myhljwgEuklhyCZIB5scHkLW+ayNPbtMtB6v6Oj5cd6gHntXJceLuDP973T+ZTvSNAv7G0WKWMS3&#xA;FSZZ4oBAHJ7lFrvQAdcfFhyBoNM8OSRuiyfVtLg1PTLiymVD68LxBpEDhS6la8SRWlelc10ZmJd4&#xA;YA1Yefn8lIGmErahDWtTSzIrQ1X/AHd1GZH5kVVfj5KQe96NZWVrZW0dtbRrFFEoRVQUFFFBmNKR&#xA;PNIiByU9UjkksnVFLMSKAbnrk8BAlu4+riZYyAxDWfKs+oQcUt447gGqzy2yz0HccWp1+ebGOoA6&#xA;upjp5j+EoPSvIk1nOJLmGG6Cj4ALKKFlcNVW5J4AU6YTqQev2spYZn+Est0a1nhuiXiZF4EAkUFa&#xA;jMTUTBjsXI0WKUZ7itlXXNCi1OCiFILpT8Fw0fqUBoGHEMlagU65RDKY+52RxxJut0s8u+SI9Kmk&#xA;luZobtmIaMx2/wBX4tUmp4u4br3yeTUGSBiiOjJwAAABQDoMx2xjWqaW93JcRTWvr28rENG6c0ZS&#xA;e4IIObDHliIjd0ubDk8QkA82KTflvI92HS3tFtFckWx02FjwJ+xzqO21aZkfmh3/AGsrzV/H8yyK&#xA;00FbNStpYLbq27CKMJU+/EDKznB5lx/y+T+aWUtBHNbGGZeUbpxdD3BFCM1hO7vojZhJ/K6I37P9&#xA;at/0YZQRp5tW2gBFYfU9buoI5cfozJ/M7ef48kcDOIIIreFIYV4RRjiijsB88xibZtySJGhd9lH0&#xA;nfYAYgWaYykIiyg5NZsowPUYoT2+E7fMEr+OXDTyPJxpa3HHnt+PkiPrCvatNFX7BYVBB6VGxyvg&#xA;qVFu8S4GQ7khl167iXk8oFeg4ipPgMz46WJ5B1EtfkHMtR69eyEqjEuKVj9P4t/AU36dsTpYj+1Y&#xA;67Idhz9yIs9VvJbmNGf4WcKw4gHrQg7VGV5MEQCW3Dq8kpgE9U9zBdupXF1FAAZK7gkAAnp/t5OM&#xA;DLk15MohzWDULMkKZVR2oODni1T2ofnh8KXcxGohyuihtWvbi3aMRMAGBrsD0p45bgxiV24+szyg&#xA;RwpJN5saEAtODVgo4pWpPhQb5mR0N9HWS7UkOv2KkXmZpXCRXUbu1eKrxJNOtMEtHW5BZR7SkTQk&#xA;PsTvSrqa4hdpTUhqDYDantmFngInZ2mjyynEmXejSQBU7AdTlDlob9I2fqemJKsOoG/v06n6Ms8K&#xA;VXTR+ZhdXuiEdXXkpqD3GQIpuBB5MauNZuoFZ3nIVSew/pmyhp4y2AdFPWTjuSh18wak0fqqS0Wx&#xA;+FkL0PT4OvXJnSwBrr8fvaxrspF3t8PuRMGsXcoR0nLI3sP6ZXLTxHRshrMhrdkua13y1polYKzq&#xA;rHoCQDhESWJmAaJU/rtn/v8Aj/4Nf65Lw5dxYePD+cPmo6rPLDah4m4tyAr7b5PBEGVFq1mSUYWO&#xA;9JX1m6jID3ITl05cR+vM0aeJ5B1R1mQc5LptUvYZRFJcASMKqtVqa4I4IkWAynqskTRlv8EfpF5c&#xA;zzusrlgFqBt1qPDMfPjjEbOZos05yIkeiNvNQtbP0/rDFBISFNCenjTKceKU7ro5WbUQxVxGrUf0&#xA;1YiJ5GLLwoSpXehNAfDrk/y8rpq/PY6J7kRDe2c7cYp0d6V4BhyA916jK5Y5R5hvhnhM1GQJSOXU&#xA;r4SOBKaBiBsPH5Zmxwxrk6ieqyAndDxa7eSMy+txIJAHw1PFivh7ZbLTRHRrjrsh6q36Uv8A/fx+&#xA;4f0yHgw7mf5vJ3pd+Y+uatpun87FzGgngjmdEDuqzBxyCkMG+NUHEqa1+nKMMNrHPf8AQ7KUuLIY&#xA;yPp2+N28rl/MjzQWiVrxP3hClGh/eAEoylWEXIuV6rRgOYIH8udCAHMMo6bGT6hcffv83sPkvV7v&#xA;VPLMd1cxiN5rYTBVqRR+aihJb4SEBXfpTMPUQAmK7/1MOHg48YNiI2+39SReYi31YAc2Wq+ssfLk&#xA;IuQMpHD4uRiD0pv4Zly4vDlw/VWzp8XB4seP6b3YtL5h0W01CCc21poytcvZTpBI0sNyqx/DzAjj&#xA;FeYURud6cuwzX9m+IclWTGr93dzJ87d72liEsWw9Q5fpeg6LKss1u4pUuoIAoPhoo2AFNgKZnaiN&#xA;Ah0mklxTifNlpNATStOw65qXoS8k/MfV9RMsL28061deIWEyEK0g/YTuF7/xIza48YArb5uu0+Tj&#xA;JkbO/d8kz8tTWM000KXbvOskltqCTxLbyQ8QnDlCrt/vxqMf+NcgCefxC6uAoDYAmifx+OrLvMS8&#xA;vTUGnJWFfnTKtIath2kLr4vLtRtr/Uteis4pJLeOytGuZFiga6lkeSQxRqsSgE04mpJoBv2rmw1U&#xA;qjV8z301dk4IcJnKIJ5bqnlo32m63e6Xfz/WpdKuDCZoxSNlnAKEV7ryoy9stxnjw7fa4vaOIYs4&#xA;kBUZDl9j1TQf955P9f8AgM02q5h2vZ/0H3pT+Y668/lt49Hj9Z3cC6gST0p5IaElIWNByJpy3Hw8&#xA;qb4dJw8fqdljyYoSBybx7u9h+l3/AJjh0qzn1O6ieKW2V7nVHgMywPNLxiikLzRs7psrkqT492y6&#xA;WcWREcjycLJooTmZnbi+Q+aeflndeYXkuItRT9yVJNwZTLHPLE/p+vbDcpFKorxNAKDgOOY2XGRv&#xA;di9u/fofc2xnDi4B9VfDbZXu7cz6haJ6phUSlq9iwoQu+1T0Fe+bOE+GEjV7POyhxZIi63ec23mO&#xA;z0jzFb3WrXLXiWM9zNNFBDC3qJcBwIhIHXkykpI4koNmGxT4qfyx4pGG1+Z/Hy/S76EhPHESHwpn&#xA;flu7t7y1F3bTST29wRKkkq8Hq32gykkh16Nv1zJz9NqdDDGYTIsnd6Dmieneaef/ADisOo22nMXs&#xA;rZ0WWa7jJEpTkQw5qV9NUPHmwJNG2puRuNJpwBZ38nU5vFz34UfoFkpVp2o3bXEH1G+nlt5ZImFv&#xA;dypKvGVk5UMj+vUo3Nd9u+22RnrMN0B6jtsP2fBx8eg1NEzqhvz+PTZ6VfyNJpMTsasSoYnqSAQe&#xA;mYmIVkLmamXFhBLzDVrx7vzPd6ZLqcemW31VJVkcKCXWV0KhmMbb8Qdmy/W6meCMTGJlbX2ZpMeb&#xA;iMqsGmO+XNVu5bmxkaeSX65R7iOYcVUSuFUQlXeoUsAeQHw9vshdhjJjYcrWdjccJTsAwjxfB7T5&#xA;c/vDvX90NxuDuM1mr5fFxOzfqPuVPNRY6a8aniWSRg3WhVdu6+OU6Y0Se5ydaOIRieRLxS4ae2iu&#xA;TLeXLB1DTP6h3KFoKBGugZCfQH2lY08AtBdHWTnsIx39/cD3ebfDs0WKlK4+7zen/lrqElzpsfrT&#xA;yXTMbnjLKzsylbhqqebSNXcV5N2wakExsgRPUBx8UDizyxm9h1+F/Pq7Vrv0DIEYCViaE7hRWlaD&#xA;8BmZgx8VXydNqJ8JNc2FazqzSXdvFpUVwLOOT07q6eMrWVVYPGKtEGasZfdhUr3WoaeXPwRJmeXd&#xA;9n3uTptCJVQvi7+nfbNbCR3tlLNyI25UpUfefl1yGUVJxMRJij/PHlfUNcs4I9Nmgt7iOXnLJcIZ&#xA;FdPTePgVH/GSua7T6jg58nosunjPcjd5Zpv5b+ZpL6G1WCK3KO3G4nsZBFWMcvjfk3JWrTfZumZm&#xA;TUxMTf3uV48+Hh9Nf1R99W9a8saJqGj6DNbajNFcXjtNLJNApRD6jNJQKelC5zA4hcRHaI5OPkjt&#xA;KXU80mv4bx0/0QoJDswkrxoVZdqBt6Mc2kJAc3niL/H472B6H5JuYbq7g9MvDDLFIi3isIy8PMRv&#xA;G6opbjzbevcVrlglEbhysupnId23QvSNGgMM8CsauXUyEdOWwNK9tsxs8rifc1aWNTHvZbmqeieW&#xA;+cdDur3UDbC0luLa1UFj6F/wdwfUVkNuhHw7Cgc7ivXNlDMCL5fJxMGA49rtR8l6RqFjqssFxbzi&#xA;1uwIrcizu41tqySzMQzQR8qyTfad9t9zjPLECxz943XLhOQUfu5PQNf+3D8m/hlOl5Fxu0eYeW61&#xA;a/WNVguo21GzmsxLbia0tLsM6O/I1dfUBXluKbZsJ+oc/uP6mjSZpYRQESPeifJ2lJah7TldtzkN&#xA;1LLc20sXN+Sk1kl6k0Ap1yRyUKcfVXlnxS+QenaD/vPJ/r/wGarVcw7Ts/6D70ZeWi3MaqTxZGDo&#xA;aVHIdKjb9eUwmYlysuITAB6G3lV55Qt59TubyTy9q5W5bldWaLbC3mlULSRkF7UtvTrQ7171zvG8&#xA;4/j4MY4+GPCLek6FYLb2kMvptA8kKD6syqhiWnIRlUaRQy14mjEeGYmXKZbLi04gTIXZYvr1vcT6&#xA;fcx25pLxcrRPUY/CdkHOIcj2q1PHNljNOi24t+9g2oaRqd9cXNxPplwkl1GkTmKytUZfTp6bIyXt&#xA;VKMqtUHfioNQKZZCo1R5ef7HZnXnhAFAg3dlneiWYs9OtLVUWNYUVVRV4BQNgvEtJ0G32jleSVkl&#xA;1g5s5zTvSMJ/MHyoup2tqlvFdMyTCUi0SGQ/ApUBvWlhoKOTse30HMw6g0QaaMeGOORlHmRSSaH5&#xA;Z1LT5YbJLK/itLi4ie6k+rWgBKlFLuwunK7IOXFT40JyiWKBkJ3co8t/2N8pkxMa2lzZ9qkCQaZH&#xA;ClSqMoBO56HLcMuKZJdfq4CGIRHR5t5y0i5ueCW0VxJ6hZzLbwxSvG3iGlmh49iNjRgGG4BGzjOx&#xA;R6Oswegkg8+9JfLvleS0vrZhp91GnNaPLbxKIgCDUFbt+NOOxCGmTOTb8fqcrLqsso8PGeGqoEvW&#xA;fLyKkrIv2VjAHyBAzW6s2L82XZwqRHkmWpact9A0RfgSjoDuR8YpUgFa/fmLDJwuyy4RMjyeTeYP&#xA;IN7JI1klrfymNywvbe1gaN6Fm6SXimjGZ/2Rv7UzJ08owPED8Cfd/R8nIhmlE3Vs78ieTT5dsAsl&#xA;ybmaUtK7NGImDSKgIYB5RVeFNjkdRqfE2qmvNeTL4h7qpB6jaSSyyPbusNxVlEjJ6i0bY1Wq12qB&#xA;vtmbjnUa6PNziOMn3sHi0PVra6ubGKCdorvUTey3gtofSEkitCWBN4H9PjKW+yW/VhzwhljR7u/4&#xA;9zsYa6URGuH0iuvT9LOLOKeKEJO6SOD9qNGjFPkzyGvvXBI2XWgAckfJrF3Ghd5yqLuSQP6ZUNPE&#xA;mgG86zIBZkpjX5y4UXFQRUN8PHpWlflvkvyorkx/PT/nImHULySZI3lLI7BWFBuCaHtlUsUQLAbo&#xA;aicpAE7FG3q6NZqpmQcmIAQH4t670JG3w5TjOSfJy88cGL6gtD6GY1dE5hlDUXkaBhXfegNO3XDW&#xA;W6Y3p6sC/n+PhzRcFnp54ywxjY/C3xChU07++UyyT5EuTjwYvqiFHWLmeBYjE/DkTWlO1PHJ6eAl&#xA;dtWtyygBwmkkk8xXCsUSZpZAK8IwGOZo0g51Tqzr58gbVI9Zv3WR+UoWIkSMU2FO5IB+fywHTwHd&#xA;uzjrMpBNnbyTCx9O8jlkvf3gh3BNRQUJP2aeGY+S4ECPVy8FZQTk34fx0Y95u83aFoE0VpDp0uoa&#xA;hInrfVw5gCxcuPIvId9wdgD0NabVMOMiyaHz+5y4aPFIXW3xTfy5qPl3XtNjvbaMxFnaKS3lekiS&#xA;oaMhAYj327HITnkHWwiekwxNEfan0FtBbqViXipNSKk7/TmPKZlzbseKMBUWOXuoywSytJctGis2&#xA;5cgUBPvmxhiBA2dLlzzEj6jz72OD8wGK81tNSaMuyI4CVbjL6PJUMvOhcgfZ75UZ4hPg24vc5Y02&#xA;cw4+L01fMp9b6nNcQpPDcu8UihkcM24O4y44ojo4Pjz/AJx+bInttPjTnKkaL3ZqAfecwBOZNC3c&#xA;yxYgLIAS+PWPKMkoiS7tDIzcAvNa8q0p865Mxy+bHgw932Jn9Rsx/ulPuGVeLLvbPy+PuCnqrulk&#xA;7IxVgRQg0PX2yeAAy3YauRGMkMck1eSN+LXMgIIB+JqCvic2AwA9A6Q6qQ/iPzLl1dmIC3jGvSkh&#xA;oSTSla9fbE4P6P2JGql/OPzTLS3e5uTHcMZU4k8XJYVBG9DmPnAiLGzmaQmcqkbFdUxaHSkbg6wq&#xA;w/ZPEHpXpmOJZD3ucYYQaPCtK6OF5fuStaVFDv07fPDeTzYkYKv0oiGC2T44UVeQ+0oG465VKUjs&#xA;W+GOA3iAkGoX08NxOTO6Rox/aIAFc2GLGCBs6bUZ5RmfUQL70JFrJllMMd27ShQ5TmwbiejUPY5M&#xA;4gOYDWM8yLuVfFX+uXf+/wCT/gm/rg8OPcF8ef8AOPzZAllaMis0KEkAkkd815yS73dRwQI5BRP6&#xA;HVyjCNSKgkii1HUcjtk/3nm1kYAaNL4oNLlr6SxSU68eLU+7IylkHO2UMeGXLhLENSliWFY5TRJS&#xA;VNAWP2SRSnuBm3wxJNjo87mkAKPV5umpOdTUrcRKn1sIsvCMOzMyBrb1K+oTFy+ww6DxUZjCMhm4&#xA;vVZlXlW+9efe72eOP5ThoUIX8at6boE8kzRFzy4SqoO1ex/ZAH3ZfqogXXc6bRyJkL7wmPnOqade&#xA;SRStHcC0mKcHMbVWKRV3B/mkqD2p75g6blVbX+r9TuNQB4sTe/8AaP0/i3l+iaRqsiaqL22FrYuy&#xA;qsN0kLSlHUrxhZEb0ytKn4h2+JsyDIAijblTFDZ695Zs0stNS2iBFvFtECagDqVWm3EHpTbMPUm5&#xA;NOkJMST+Px3u1/7EPzb+GT0vMtHaPIPGPPGpSy3q6bIwNstsZHiILI1QyozcdlZREvHmSN9t+u6j&#xA;GnY+y2nhISnKpG+Hly2/sRfki/v7TUpdIDyNZkFreOMuixHmyFmSu/IENsAvwnb4q5GcARey+0+m&#xA;GIwlHayRQsfE9Nvdv7npq3C2uh6hLv8AAqhEXqzH4UjBJH22IXr3zU55iMhI9HVaPGZwlEGrp5Be&#xA;XEvm7VhJeyLo0VtGIproxyUChpWRZPjgb4mDEkMDuu1NxkeLEUOfFy/Huc6AljxmI5A93459Ub5D&#xA;83ppepWujXVqZYPWkE10Dxl5IpZ5pFqy0VE+IA/Isa1tzY/SeHu5Jy4RkAyzO4rby5B7vmlb2B+a&#xA;Fj9KeRmVCjPxd/srXua7Zu9KfueY1Ubl/nPHtA1XTmvWi1C4a3vl4w29wUkadSJjMERyWjQNJxqx&#xA;QkVIHdhXPDeSO/puz3Xy3/FO/wA85QwSERxGvser+X5bcQLFFIrx8aROtQsir9l0BoacafdmTqI9&#xA;XmcMtyDzZprq/wC41np/d/FyrQqQpofvpmlwyol6TU4xOIB5WHjdtpVxLP8AWbuAXMv1R9Ig1RiP&#xA;q0c0rvMtxxJNGSSX+WnqAL9r4sslr41tz58PX8fo3c+eEyl5bD7Hsflmaafy/p887c5ZoEkdj3LC&#xA;v3b7ZVm+suLgFRr3/erax/vA/wA1/Xh0/wBbTrf7svHfODST3dxbmcxW8AhkryVI2ZrngTIzAGi7&#xA;dXHTwzcS2Adb2cI8RJHVA6fcIL289C8ggZIUkhitLiGUylZI+ayoTPVeM/VGUbH3pVAmxz5udrIR&#xA;lEmh1eueWxSVBWtIeteVenfvmNrOXxcTs36v81jvnfV72DUrEWt5JbC7eWHjDAk0jyDisaqJWjjH&#xA;U1Jf+mHEOGPJyY8E5SlL9Xexby1521jVNZisYdQka3aQC4jktYEcyxmskZ4MfskEA8uvbL5YwBxE&#xA;famfhgGMR5vZNPobOMjvU0BrQkmor7dM1eX6i5Om+gMR8zSOLh4125SMxbkB9gg8dwQa5ttGNr8n&#xA;n9eTxkebyufXY7WVJ5LvnFHcG4hVBD8UnwpcKqhFkQcSeLcuBoyj+UYoxkZPEo3e/PlvXV6Dw+PT&#xA;8A5cPd1/teieWdRt9Rsnurdi8DSMELVBqpKt8JCkfED2zOz1tXc85DHKBlGQogsl81XS2OmNqNzy&#xA;Nlaw85CimQqRQk8Bu1RsM12mokjq7fWQkRHu/S83Pn7zGLuSM6RCKVH6LeUi9aGOcQVEtPQqjgAp&#xA;7fa6ZsPBFCVuLULMDz5Xt8B39Ho3kq/tb+xN7bBhFcKkkfqJ6T0Nagod14981+svZytBDhMglGrQ&#xA;GWxfjC08sfxxRIUDFx0/vCq9+5zNxzMTs6qWMS2Lze38kamkKU069jnjJKTf7j/U+H7B5i4rt28K&#xA;DMg5h+P7HfS7aymHB+7qq+k3XvenaDAIxasYGtpXKGWJ2DsGrU8mUspNT1BzEzzMgbdLp8cYzFd4&#xA;TvzNoB1iyaJZjE9ACKMQyqeRT4HhYcvskhxtXNfhzGGzvcmnjKQkejEbLyz5ovLpIp4G0uEgvLcO&#xA;qzBqEfuip1C5I5deSrXb7WXHLAbjf8f1QzMSdnoNnbm3to4S5kKAAsa7n2qTQeArmJOXEbXHjEI0&#xA;Ev8AMABSEHoS38MydLzLg9o8g8u8z+XRd3ItvqV5cW68fSkgjtyFooqokaeFwNt9vxAzbDPY3cHR&#xA;ZJ6c3jlw3z/Hki/J9hdWd06Gyu7ZGDNLNdR29ZHHwgtJHPO7H+WooB0oMryTBDZq9RkzS48kuIvQ&#xA;dMtILyyvLW4XnBOvpyLUglWBBoRQg+4zW6rmHK7O5Fga+RrrQPMN1Lp1vquqJcSCb1ZEtpYhIy7v&#xA;yN3ZlmHJlqyd/kcnDJEgH0jhFfjYuZlgZgg3RVfJ35b2Ta0dSv7O+tfqcpmtoLmOCJGd9iA0U91I&#xA;6AIvwsQPnVqubUGtjz/HcGUIbU9SzBbGIalbRXL3EUoqrl1PQ/aqOhqD9IzbY5EAPOZR6z72AnyN&#xA;MLkW6xXpthIIxdfW4AfT6epx4V260y7iDk/mpVzHyZpZabbWkMEMdSlsvGKvEUBFDsoUD5AUyJyE&#xA;uDwC7/G7KtV0t9Rt1hF5PapQ8xB6fxgilG9RJNvlmphPhN0C9JPHxCrLCj+XYjvF0+OG6bStovrA&#xA;mtAoj9Mf7pMVaVJSn05bxw50OL4rwy5cRZro2kjS7NbRLma4iQARCb0/gVQAFX00TbbKsmTiN1Sc&#xA;ePhFWV2sf7wP81/XktP9bj63+7LzHVdF1eXWJr+0F7FK4EQkt7uGFTGCTTj6Zbrvuc2Zojd1mPLw&#xA;ihXySafyRqEs5u5otRubsgAyyahCXIX4VHMx9g7ZIEAUC3/nZcPDY4e6nqPlcTBkE4KyiKjglSa1&#xA;HUoFX7hmHqvp+KNB/eH3JL58/La110pdF726dDxTT4pbVIVD8ubj14pBy38a9PDK8WpIO9fa7OGI&#xA;QuupSfy9+TtvbakLhpdQ05rcA286S2Dcu3HjHbLTbrtls9Zt0Pz/AFsuEHmA9TjjWNAi9F8euYBN&#xA;soxAFBimt2q3UlzAzFObGjqFLKa9RzDrX6M2mCRiAQ8/qYgzkD3sJ1Lyle3Fxb2ytd+hafuob9JL&#xA;NHMctC4esJdghHwg/Rl8JCO46udp+1M2LeJAJ8mQ+XtAttDsBZW80s0akkNNwqOTFqARrGoFWPbI&#xA;TmZOvyTM5GR5lnU9sLmyMJdouageonHkNuo5Bl+8ZqRLhlbvzASjRYDN+WcB1gxCC6bTTIknNbmF&#xA;bap+Jv8AQhGI6Kw+zx4nrmWNYeGr/HvajpoGXFW/ezjS9HtdOjKxFpHIoZHCBiPD4FRQPkMx8ueU&#xA;+acGlhiJMerv9w3/ABT+GH955tf7j+i7/cN/xT+GP7zzX9x/RbT9Ec14elzqONKVr2pgPidbZR8C&#xA;9uG0blLlOxV2KqN19Tov1nhTfjzp9NK5OHF/C1ZeD+Ovih/9w3/FP4ZZ+882j9x/Rd/uG/4p/DH9&#xA;55r+4/oq9r9To31bhTblwp9HTK58X8Tdi4P4K+CvkG52KuxVDt+j+R5elyrvXjWuWDj82k+H14fs&#xA;d/uO/wCKf+Fx9fmj91/R+x3+47/in/hcfX5r+6/o/YiPllbe7FXYqtl9LgfV48O/KlPxwi+jGVVv&#xA;yUf9x3/FP/C5P1+bV+6/o/Y7/cd/xT/wuPr81/df0fsXxfVOX7r0+VP2ONafRglxdbZQ4L9NKuQb&#xA;XYq7FVB/qHI8/S5V+KvGtfeuWDj6W0nw734b+DX+47/in/hcfX5o/df0fsd/uO/4p/4XH1+a/uv6&#xA;P2IgUoKdO1Mrbw7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:e51ee84c-4631-b040-8f65-5f5fea9e700f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:e51ee84c-4631-b040-8f65-5f5fea9e700f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:e5bfc2bf-cd35-4707-abc6-ff2f6259858a</stRef:instanceID>
            <stRef:documentID>xmp.did:2f73af81-d6d7-5641-a3ca-bc63799efdfa</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d690b0de-92f4-4e39-92ee-33b6bf4423a2</stEvt:instanceID>
                  <stEvt:when>2014-09-08T17:07:38+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cab92485-bb67-423a-b77c-28ded636900f</stEvt:instanceID>
                  <stEvt:when>2014-09-09T23:26:02+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a90f0853-c949-41d2-b5ab-2866e21f2cbf</stEvt:instanceID>
                  <stEvt:when>2014-09-13T17:54:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:edf0d5d4-9e39-4eae-8918-a68671dc4136</stEvt:instanceID>
                  <stEvt:when>2014-09-13T19:53:37+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:df4e0615-873b-40ef-927e-b089301bde4a</stEvt:instanceID>
                  <stEvt:when>2014-09-13T20:00:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fff88811-3201-471c-8965-4da6ad75ae0c</stEvt:instanceID>
                  <stEvt:when>2015-09-01T09:45:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:991d8de4-d57e-4a2a-96ef-b7794e945c35</stEvt:instanceID>
                  <stEvt:when>2015-09-01T18:26:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2ada01bb-dffe-480f-9b3c-82c115b94049</stEvt:instanceID>
                  <stEvt:when>2015-09-01T20:33:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:be23c0d3-e315-4d51-8fde-b40b08a56d30</stEvt:instanceID>
                  <stEvt:when>2015-09-01T21:46:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7a2ba4ab-256a-1e48-87a0-2604a073674b</stEvt:instanceID>
                  <stEvt:when>2016-02-10T14:51:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03db26bd-35ad-3847-8497-c3353bf09d8f</stEvt:instanceID>
                  <stEvt:when>2016-02-10T16:37:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27335dde-111d-c747-90ec-b16b01bb9812</stEvt:instanceID>
                  <stEvt:when>2016-02-11T12:04:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f53cdcab-bcb8-524c-b623-2fcd7b6fd50f</stEvt:instanceID>
                  <stEvt:when>2016-02-11T14:33:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:625c5a6d-d13f-7f4d-a74e-01626cb6da6d</stEvt:instanceID>
                  <stEvt:when>2016-02-11T14:35:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7bbf7f9c-5ae1-3f43-b7d4-970c2599f111</stEvt:instanceID>
                  <stEvt:when>2016-02-11T14:55:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:be635174-1534-e444-ab78-1740ae04e533</stEvt:instanceID>
                  <stEvt:when>2016-02-11T15:03:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:62d82139-b91b-3240-b2f1-11d580a17a3b</stEvt:instanceID>
                  <stEvt:when>2016-02-11T15:12:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7f15d80-8a72-417f-b427-a1abe1b62af2</stEvt:instanceID>
                  <stEvt:when>2016-02-13T22:54:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c388c3c8-f05d-5b4c-9ae9-855ab616364d</stEvt:instanceID>
                  <stEvt:when>2016-02-24T09:33:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a60f6d0d-40a0-c140-a31e-127970cdd348</stEvt:instanceID>
                  <stEvt:when>2016-02-24T09:44:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e1ffe8a4-7753-4ea4-a1df-0c846c802b6f</stEvt:instanceID>
                  <stEvt:when>2016-02-24T21:41:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:18d4d4d2-793e-fd46-88d3-ee24b14989f7</stEvt:instanceID>
                  <stEvt:when>2016-03-03T17:22:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2c2e300e-d1c6-714b-a1ae-0f160e7928f5</stEvt:instanceID>
                  <stEvt:when>2016-03-03T17:27:59+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d971afa3-164d-4b1e-ae55-9f835d9e4c03</stEvt:instanceID>
                  <stEvt:when>2016-03-03T22:00:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fd3faa8a-7324-4688-bc9c-0821a533ccb1</stEvt:instanceID>
                  <stEvt:when>2016-03-06T23:18:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:60baa2de-7618-4148-ba58-7a9d62aa02d7</stEvt:instanceID>
                  <stEvt:when>2016-03-22T14:47:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d4d4a8a1-0195-c94d-a34e-ad438c818747</stEvt:instanceID>
                  <stEvt:when>2016-03-22T15:04:47+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8af9a3df-3242-0f4d-bac5-fd61f2ebe42c</stEvt:instanceID>
                  <stEvt:when>2016-03-22T20:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:22e55d4d-f306-024f-8026-6a19dccd221c</stEvt:instanceID>
                  <stEvt:when>2016-08-01T18:47:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0cf5c4c2-1268-d340-817b-ee5358920e3b</stEvt:instanceID>
                  <stEvt:when>2016-08-01T18:47:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:de826f17-7745-0443-93c6-2bbed9449f34</stEvt:instanceID>
                  <stEvt:when>2016-08-01T19:02:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29ed9569-481e-1247-8a7c-c5043fc2d5a5</stEvt:instanceID>
                  <stEvt:when>2016-08-01T19:03:11+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:94ef84d8-4d6b-734f-ab5e-acae6b3c8b72</stEvt:instanceID>
                  <stEvt:when>2016-11-08T12:28:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e51ee84c-4631-b040-8f65-5f5fea9e700f</stEvt:instanceID>
                  <stEvt:when>2019-04-01T15:50:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1120.162330</stDim:w>
            <stDim:h>1120.162330</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=240 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>240</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=116 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=77 B=205</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>205</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=206 G=246 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>206</xmpG:red>
                           <xmpG:green>246</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=237 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=120 G=239 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>120</xmpG:red>
                           <xmpG:green>239</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=106 G=224 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>106</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=28 G=190 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>28</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=221 B=167</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>221</xmpG:green>
                           <xmpG:blue>167</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=195 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>195</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=238 B=232</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=221 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>221</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=52 B=124</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1120.16 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1120.16 li
1120.16 1120.16 li
1120.16 0 li
cp
clp
560.081 560.081 mo
8.85288e-05 560.081 li
8.85288e-05 .000424592 li
560.081 .000424592 li
560.081 560.081 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
1120.16 560.081 mo
560.081 560.081 li
560.081 .000424592 li
1120.16 .000424592 li
1120.16 560.081 li
cp
.297459 0 .0197147 0 cmyk
f
560.081 1120.16 mo
8.85288e-05 1120.16 li
8.85288e-05 560.081 li
560.081 560.081 li
560.081 1120.16 li
cp
f
1120.16 1120.16 mo
560.081 1120.16 li
560.081 560.081 li
1120.16 560.081 li
1120.16 1120.16 li
cp
0 0 0 0 cmyk
f
118.554 955.841 mo
114.554 955.841 li
114.554 947.191 li
118.554 947.191 li
118.554 955.841 li
cp
.619776 .0742504 0 0 cmyk
f
141.162 955.841 mo
137.162 955.841 li
137.162 947.191 li
141.162 947.191 li
141.162 955.841 li
cp
f
165.654 955.841 mo
161.654 955.841 li
161.654 947.191 li
165.654 947.191 li
165.654 955.841 li
cp
f
152.466 955.841 mo
148.466 955.841 li
148.466 947.191 li
152.466 947.191 li
152.466 955.841 li
cp
f
118.554 938.539 mo
114.554 938.539 li
114.554 883.46 li
118.554 883.46 li
118.554 938.539 li
cp
f
129.858 955.841 mo
125.858 955.841 li
125.858 883.46 li
129.858 883.46 li
129.858 955.841 li
cp
f
141.162 938.539 mo
137.162 938.539 li
137.162 883.46 li
141.162 883.46 li
141.162 938.539 li
cp
f
152.466 938.539 mo
148.466 938.539 li
148.466 883.46 li
152.466 883.46 li
152.466 938.539 li
cp
f
165.654 938.539 mo
161.654 938.539 li
161.654 883.46 li
165.654 883.46 li
165.654 938.539 li
cp
f
176.958 955.841 mo
172.958 955.841 li
172.958 947.191 li
176.958 947.191 li
176.958 955.841 li
cp
f
188.263 955.841 mo
184.263 955.841 li
184.263 947.191 li
188.263 947.191 li
188.263 955.841 li
cp
f
176.958 938.539 mo
172.958 938.539 li
172.958 883.46 li
176.958 883.46 li
176.958 938.539 li
cp
f
188.263 938.539 mo
184.263 938.539 li
184.263 883.46 li
188.263 883.46 li
188.263 938.539 li
cp
f
308.964 775.828 mo
206.861 777.267 li
205.727 696.868 li
307.83 695.427 li
308.964 775.828 li
cp
0 0 0 0 cmyk
f
264.711 775.832 mo
251.097 776.025 li
249.972 696.237 li
263.585 696.045 li
264.711 775.832 li
cp
.162478 0 .0144961 0 cmyk
f
283.148 675.153 mo
277.841 679.999 258.359 680.17 258.359 680.17 cv
258.359 680.17 260.291 660.784 265.598 655.937 cv
270.903 651.091 279.134 651.464 283.981 656.771 cv
288.826 662.077 288.453 670.307 283.148 675.153 cv
cp
f
228.414 676.575 mo
233.896 681.111 253.17 680.339 253.17 680.339 cv
253.17 680.339 250.324 661.261 244.843 656.724 cv
239.361 652.188 231.24 652.954 226.703 658.435 cv
222.167 663.916 222.933 672.039 228.414 676.575 cv
cp
f
315.72 695.316 mo
197.837 696.979 li
197.615 681.216 li
315.498 679.553 li
315.72 695.316 li
cp
0 0 0 0 cmyk
f
270.857 695.943 mo
242.701 696.339 li
242.48 680.676 li
270.636 680.279 li
270.857 695.943 li
cp
.162478 0 .0144961 0 cmyk
f
208.665 700.114 mo
209.725 775.222 li
306.91 773.852 li
305.851 698.744 li
208.665 700.114 li
cp
207.752 779.25 mo
206.661 779.25 205.769 778.373 205.753 777.279 cv
204.637 698.17 li
204.63 697.64 204.833 697.128 205.203 696.747 cv
205.572 696.368 206.078 696.15 206.608 696.142 cv
307.794 694.715 li
308.899 694.67 309.807 695.582 309.822 696.687 cv
310.939 775.795 li
310.945 776.326 310.742 776.837 310.372 777.218 cv
310.003 777.598 309.497 777.816 308.967 777.824 cv
207.781 779.25 li
207.772 779.25 207.762 779.25 207.752 779.25 cv
cp
.619776 .0742504 0 0 cmyk
f
199.233 683.686 mo
199.41 696.244 li
313.153 694.64 li
312.976 682.082 li
199.233 683.686 li
cp
197.439 700.272 mo
196.918 700.272 196.418 700.069 196.044 699.706 cv
195.664 699.336 195.446 698.831 195.439 698.3 cv
195.205 681.743 li
195.19 680.638 196.072 679.73 197.177 679.714 cv
314.919 678.054 li
316.052 678.051 316.932 678.921 316.947 680.026 cv
317.182 696.583 li
317.189 697.114 316.985 697.625 316.615 698.006 cv
316.246 698.386 315.74 698.604 315.21 698.612 cv
197.467 700.272 li
197.457 700.272 197.448 700.272 197.439 700.272 cv
cp
f
245.227 683.038 mo
245.403 695.595 li
268.999 695.262 li
268.822 682.705 li
245.227 683.038 li
cp
243.432 699.623 mo
242.911 699.623 242.411 699.42 242.037 699.057 cv
241.657 698.688 241.44 698.182 241.432 697.652 cv
241.198 681.094 li
241.183 679.99 242.066 679.081 243.17 679.066 cv
270.766 678.676 li
271.302 678.71 271.808 678.872 272.189 679.243 cv
272.568 679.612 272.786 680.118 272.794 680.648 cv
273.027 697.206 li
273.043 698.31 272.16 699.218 271.056 699.234 cv
243.46 699.623 li
243.45 699.623 243.441 699.623 243.432 699.623 cv
cp
f
252.819 699.492 mo
253.853 772.76 li
262.731 772.635 li
261.697 699.367 li
252.819 699.492 li
cp
251.881 776.789 mo
251.36 776.789 250.86 776.585 250.486 776.222 cv
250.107 775.853 249.889 775.347 249.881 774.817 cv
248.791 697.548 li
248.775 696.444 249.658 695.536 250.763 695.52 cv
263.641 695.338 li
264.196 695.361 264.683 695.535 265.064 695.905 cv
265.443 696.274 265.661 696.78 265.669 697.31 cv
266.759 774.579 li
266.775 775.683 265.892 776.591 264.787 776.607 cv
251.909 776.789 li
251.9 776.789 251.891 776.789 251.881 776.789 cv
cp
f
274.367 654.539 mo
271.714 654.539 269.055 655.488 266.946 657.414 cv
263.534 660.531 261.426 671.884 260.613 678.112 cv
266.889 677.866 278.387 676.792 281.799 673.676 cv
281.799 673.676 li
283.971 671.693 285.239 668.982 285.373 666.043 cv
285.506 663.106 284.487 660.291 282.504 658.12 cv
280.334 655.745 277.355 654.539 274.367 654.539 cv
cp
258.359 682.17 mo
257.798 682.17 257.262 681.934 256.883 681.519 cv
256.5 681.1 256.313 680.538 256.369 679.972 cv
256.575 677.91 258.542 659.673 264.249 654.46 cv
270.36 648.877 279.875 649.309 285.457 655.422 cv
291.039 661.534 290.608 671.047 284.496 676.629 cv
278.789 681.842 260.449 682.152 258.377 682.17 cv
258.371 682.17 258.365 682.17 258.359 682.17 cv
cp
f
236.638 655.771 mo
233.504 655.771 230.394 657.114 228.244 659.71 cv
226.391 661.95 225.521 664.777 225.793 667.671 cv
226.066 670.566 227.45 673.181 229.69 675.034 cv
232.901 677.692 243.487 678.479 250.823 678.397 cv
249.534 671.206 246.775 660.92 243.567 658.265 cv
241.542 656.588 239.083 655.771 236.638 655.771 cv
cp
249.687 682.401 mo
243.575 682.401 231.698 681.888 227.139 678.116 cv
220.816 672.883 219.93 663.483 225.162 657.16 cv
230.395 650.837 239.795 649.951 246.118 655.183 cv
252.019 660.068 254.845 678.014 255.149 680.044 cv
255.232 680.606 255.073 681.177 254.711 681.615 cv
254.349 682.052 253.817 682.315 253.25 682.337 cv
252.783 682.356 251.484 682.401 249.687 682.401 cv
cp
f
256.891 669.101 mo
254.572 669.134 li
250.599 669.19 247.423 672.456 247.48 676.43 cv
247.542 680.9 li
264.25 680.664 li
264.187 676.194 li
264.131 672.221 260.864 669.045 256.891 669.101 cv
cp
0 0 0 0 cmyk
f
258.181 671.814 mo
255.557 671.851 li
254.23 671.87 252.99 672.404 252.065 673.356 cv
251.14 674.307 250.641 675.561 250.66 676.888 cv
250.69 678.959 li
263.247 678.783 li
263.218 676.71 li
263.18 673.997 260.958 671.813 258.251 671.813 cv
258.228 671.813 258.204 671.813 258.181 671.814 cv
258.181 671.814 li
cp
248.717 682.988 mo
247.626 682.988 246.733 682.111 246.718 681.016 cv
246.66 676.945 li
246.626 674.55 247.527 672.285 249.197 670.567 cv
250.866 668.85 253.105 667.885 255.5 667.851 cv
258.124 667.814 li
258.124 667.814 li
258.167 667.814 258.209 667.813 258.252 667.813 cv
263.138 667.813 267.148 671.753 267.218 676.655 cv
267.275 680.727 li
267.29 681.831 266.407 682.739 265.303 682.754 cv
248.746 682.988 li
248.736 682.988 248.727 682.988 248.717 682.988 cv
cp
.619776 .0742504 0 0 cmyk
f
396.528 667.802 mo
401.637 672.602 li
402.557 673.466 403.902 673.704 405.063 673.206 cv
411.504 670.443 li
413.045 669.782 414.835 670.433 415.59 671.93 cv
418.749 678.187 li
419.317 679.315 420.5 679.997 421.761 679.926 cv
428.76 679.533 li
430.434 679.439 431.893 680.663 432.091 682.328 cv
432.918 689.289 li
433.067 690.542 433.945 691.588 435.154 691.954 cv
441.865 693.977 li
443.471 694.461 444.423 696.11 444.039 697.743 cv
442.437 704.566 li
442.148 705.795 442.615 707.08 443.626 707.835 cv
449.24 712.032 li
450.583 713.037 450.914 714.912 449.995 716.314 cv
446.155 722.178 li
445.464 723.235 445.464 724.601 446.155 725.657 cv
449.995 731.521 li
450.914 732.923 450.583 734.799 449.24 735.803 cv
443.626 740 li
442.615 740.756 442.148 742.039 442.437 743.269 cv
444.039 750.092 li
444.423 751.725 443.471 753.374 441.865 753.858 cv
435.154 755.882 li
433.945 756.247 433.067 757.293 432.918 758.547 cv
432.091 765.507 li
431.893 767.172 430.434 768.396 428.76 768.302 cv
421.761 767.909 li
420.5 767.837 419.317 768.521 418.749 769.648 cv
415.59 775.906 li
414.835 777.403 413.045 778.054 411.504 777.393 cv
405.063 774.629 li
403.902 774.131 402.557 774.369 401.637 775.234 cv
396.528 780.034 li
395.307 781.181 393.402 781.181 392.181 780.034 cv
387.072 775.234 li
386.152 774.369 384.807 774.131 383.647 774.629 cv
377.205 777.393 li
375.664 778.054 373.874 777.403 373.119 775.906 cv
369.961 769.648 li
369.392 768.521 368.209 767.837 366.948 767.909 cv
359.949 768.302 li
358.275 768.396 356.816 767.172 356.618 765.507 cv
355.791 758.547 li
355.642 757.293 354.764 756.247 353.555 755.882 cv
346.844 753.858 li
345.238 753.374 344.286 751.725 344.67 750.092 cv
346.273 743.269 li
346.562 742.039 346.095 740.756 345.083 740 cv
339.469 735.803 li
338.126 734.799 337.795 732.923 338.714 731.521 cv
342.554 725.657 li
343.245 724.601 343.245 723.235 342.554 722.178 cv
338.714 716.314 li
337.795 714.912 338.126 713.037 339.469 712.032 cv
345.083 707.835 li
346.095 707.08 346.562 705.795 346.273 704.566 cv
344.67 697.743 li
344.286 696.11 345.238 694.461 346.844 693.977 cv
353.555 691.954 li
354.764 691.588 355.642 690.542 355.791 689.289 cv
356.618 682.328 li
356.816 680.663 358.275 679.439 359.949 679.533 cv
366.948 679.926 li
368.209 679.997 369.392 679.315 369.961 678.187 cv
373.119 671.93 li
373.874 670.433 375.664 669.782 377.205 670.443 cv
383.647 673.206 li
384.807 673.704 386.152 673.466 387.072 672.602 cv
392.181 667.802 li
393.402 666.654 395.307 666.654 396.528 667.802 cv
cp
0 0 0 0 cmyk
f
396.037 680.496 mo
399.989 684.209 li
400.701 684.878 401.742 685.062 402.641 684.677 cv
407.625 682.539 li
408.817 682.027 410.202 682.531 410.787 683.689 cv
413.231 688.532 li
413.671 689.404 414.586 689.932 415.562 689.877 cv
420.978 689.573 li
422.273 689.499 423.401 690.447 423.555 691.736 cv
424.195 697.122 li
424.311 698.091 424.99 698.902 425.926 699.183 cv
431.118 700.749 li
432.36 701.124 433.098 702.4 432.801 703.664 cv
431.561 708.944 li
431.337 709.895 431.698 710.888 432.482 711.473 cv
436.825 714.72 li
437.864 715.497 438.12 716.949 437.409 718.035 cv
434.439 722.572 li
433.902 723.389 433.902 724.446 434.439 725.263 cv
437.409 729.801 li
438.12 730.886 437.864 732.337 436.825 733.115 cv
432.482 736.363 li
431.698 736.948 431.337 737.941 431.561 738.892 cv
432.801 744.172 li
433.098 745.435 432.36 746.711 431.118 747.085 cv
425.926 748.652 li
424.99 748.934 424.311 749.744 424.195 750.713 cv
423.555 756.1 li
423.401 757.388 422.273 758.335 420.978 758.262 cv
415.562 757.958 li
414.586 757.903 413.671 758.431 413.231 759.304 cv
410.787 764.146 li
410.202 765.304 408.817 765.808 407.625 765.296 cv
402.641 763.159 li
401.742 762.773 400.701 762.956 399.989 763.625 cv
396.037 767.34 li
395.091 768.229 393.618 768.229 392.672 767.34 cv
388.72 763.625 li
388.008 762.956 386.967 762.773 386.068 763.159 cv
381.084 765.296 li
379.892 765.808 378.507 765.304 377.922 764.146 cv
375.479 759.304 li
375.038 758.431 374.123 757.903 373.148 757.958 cv
367.732 758.262 li
366.437 758.335 365.308 757.388 365.154 756.1 cv
364.514 750.713 li
364.399 749.744 363.719 748.934 362.784 748.652 cv
357.591 747.085 li
356.349 746.711 355.611 745.435 355.908 744.172 cv
357.149 738.892 li
357.372 737.941 357.011 736.948 356.229 736.363 cv
351.884 733.115 li
350.845 732.337 350.589 730.886 351.3 729.801 cv
354.272 725.263 li
354.807 724.446 354.807 723.389 354.272 722.572 cv
351.3 718.035 li
350.589 716.949 350.845 715.497 351.884 714.72 cv
356.229 711.473 li
357.011 710.888 357.372 709.895 357.149 708.944 cv
355.908 703.664 li
355.611 702.4 356.349 701.124 357.591 700.749 cv
362.784 699.183 li
363.719 698.902 364.399 698.091 364.514 697.122 cv
365.154 691.736 li
365.308 690.447 366.437 689.499 367.732 689.573 cv
373.148 689.877 li
374.123 689.932 375.038 689.404 375.479 688.532 cv
377.922 683.689 li
378.507 682.531 379.892 682.027 381.084 682.539 cv
386.068 684.677 li
386.967 685.062 388.008 684.878 388.72 684.209 cv
392.672 680.496 li
393.618 679.607 395.091 679.607 396.037 680.496 cv
cp
.162478 0 .0144961 0 cmyk
f
384.898 772.372 mo
386.191 772.372 387.464 772.856 388.442 773.777 cv
393.55 778.576 li
394.001 778.999 394.708 778.999 395.159 778.576 cv
400.268 773.776 li
401.766 772.367 403.958 771.981 405.852 772.791 cv
412.293 775.555 li
412.859 775.799 413.525 775.556 413.804 775.005 cv
416.964 768.747 li
417.892 766.909 419.821 765.811 421.874 765.912 cv
428.872 766.305 li
429.49 766.334 430.031 765.886 430.105 765.271 cv
430.932 758.311 li
431.176 756.266 432.607 754.561 434.577 753.967 cv
441.288 751.943 li
441.881 751.764 442.233 751.153 442.092 750.55 cv
440.489 743.726 li
440.019 741.723 440.779 739.631 442.428 738.399 cv
448.043 734.202 li
448.539 733.831 448.661 733.134 448.322 732.617 cv
444.483 726.752 li
443.355 725.031 443.355 722.806 444.482 721.083 cv
448.322 715.218 li
448.661 714.701 448.538 714.004 448.042 713.633 cv
442.429 709.437 li
440.779 708.204 440.019 706.113 440.489 704.108 cv
442.092 697.286 li
442.233 696.683 441.88 696.071 441.287 695.892 cv
434.577 693.869 li
432.606 693.273 431.176 691.568 430.932 689.525 cv
430.105 682.564 li
430.032 681.95 429.48 681.507 428.872 681.53 cv
421.873 681.923 li
419.844 682.029 417.891 680.926 416.963 679.087 cv
413.805 672.831 li
413.525 672.279 412.862 672.038 412.292 672.281 cv
405.851 675.043 li
403.959 675.856 401.768 675.469 400.268 674.06 cv
395.159 669.26 li
395.159 669.259 395.158 669.259 395.158 669.259 cv
394.707 668.835 394.002 668.835 393.551 669.259 cv
388.441 674.06 li
386.941 675.469 384.75 675.856 382.858 675.043 cv
376.417 672.281 li
375.845 672.035 375.184 672.279 374.905 672.831 cv
371.746 679.088 li
370.818 680.926 368.898 682.027 366.835 681.923 cv
359.837 681.53 li
359.234 681.491 358.678 681.949 358.605 682.564 cv
357.777 689.525 li
357.533 691.568 356.104 693.273 354.133 693.868 cv
347.421 695.892 li
346.829 696.071 346.476 696.683 346.617 697.285 cv
348.22 704.109 li
348.691 706.114 347.93 708.206 346.28 709.438 cv
340.666 713.633 li
340.171 714.004 340.048 714.701 340.387 715.218 cv
344.227 721.082 li
345.355 722.806 345.355 725.031 344.227 726.752 cv
340.387 732.617 li
340.048 733.134 340.17 733.831 340.666 734.202 cv
346.28 738.399 li
347.93 739.63 348.691 741.722 348.22 743.727 cv
346.617 750.549 li
346.476 751.153 346.828 751.764 347.42 751.943 cv
354.132 753.967 li
356.103 754.561 357.533 756.266 357.777 758.311 cv
358.605 765.271 li
358.677 765.885 359.232 766.339 359.837 766.305 cv
366.836 765.912 li
368.887 765.807 370.817 766.908 371.746 768.747 cv
374.904 775.004 li
375.185 775.557 375.847 775.801 376.417 775.555 cv
382.858 772.791 li
383.516 772.509 384.209 772.372 384.898 772.372 cv
cp
394.355 782.891 mo
393.079 782.891 391.805 782.424 390.812 781.492 cv
385.703 776.692 li
385.362 776.371 384.867 776.28 384.436 776.467 cv
377.993 779.231 li
375.491 780.306 372.562 779.242 371.333 776.806 cv
368.176 770.549 li
367.964 770.13 367.498 769.854 367.062 769.906 cv
360.062 770.299 li
357.318 770.436 354.955 768.451 354.632 765.744 cv
353.805 758.784 li
353.75 758.32 353.425 757.932 352.978 757.797 cv
346.267 755.773 li
343.655 754.987 342.099 752.29 342.723 749.634 cv
344.325 742.812 li
344.433 742.357 344.26 741.882 343.886 741.603 cv
338.272 737.405 li
336.087 735.772 335.546 732.706 337.041 730.424 cv
340.881 724.561 li
341.137 724.17 341.137 723.664 340.88 723.273 cv
337.041 717.41 li
335.547 715.13 336.087 712.064 338.271 710.43 cv
343.886 706.234 li
344.26 705.954 344.433 705.479 344.325 705.024 cv
342.723 698.2 li
342.099 695.546 343.655 692.85 346.266 692.062 cv
352.978 690.039 li
353.425 689.904 353.75 689.516 353.805 689.052 cv
354.632 682.091 li
354.955 679.385 357.322 677.414 360.062 677.536 cv
367.061 677.929 li
367.544 677.972 367.965 677.703 368.176 677.286 cv
371.334 671.029 li
372.561 668.594 375.485 667.526 377.993 668.605 cv
384.435 671.368 li
384.865 671.553 385.361 671.463 385.703 671.144 cv
390.812 666.344 li
392.797 664.477 395.91 664.477 397.898 666.344 cv
403.006 671.144 li
403.347 671.464 403.843 671.553 404.274 671.368 cv
410.716 668.605 li
413.226 667.527 416.149 668.595 417.376 671.03 cv
420.534 677.286 li
420.745 677.704 421.193 677.96 421.648 677.929 cv
428.648 677.536 li
431.371 677.401 433.754 679.384 434.077 682.091 cv
434.904 689.052 li
434.959 689.516 435.284 689.904 435.733 690.039 cv
442.442 692.062 li
445.054 692.85 446.61 695.546 445.986 698.201 cv
444.384 705.023 li
444.276 705.479 444.449 705.954 444.824 706.234 cv
450.438 710.43 li
452.622 712.064 453.162 715.13 451.668 717.411 cv
447.828 723.274 li
447.572 723.664 447.572 724.17 447.828 724.561 cv
451.668 730.425 li
453.163 732.706 452.622 735.772 450.438 737.405 cv
444.823 741.602 li
444.449 741.882 444.276 742.357 444.384 742.811 cv
445.986 749.635 li
446.61 752.29 445.054 754.987 442.441 755.773 cv
435.732 757.797 li
435.284 757.932 434.959 758.32 434.904 758.784 cv
434.077 765.744 li
433.755 768.451 431.402 770.444 428.648 770.299 cv
421.649 769.906 li
421.155 769.856 420.744 770.132 420.535 770.548 cv
417.375 776.807 li
416.149 779.241 413.224 780.309 410.716 779.231 cv
404.274 776.467 li
403.846 776.281 403.346 776.37 403.007 776.691 cv
397.898 781.492 li
396.904 782.424 395.629 782.891 394.355 782.891 cv
cp
.619776 .0742504 0 0 cmyk
f
373.13 713.617 mo
377.006 713.617 li
377.006 734.199 li
374.599 734.199 li
374.599 734.228 363.793 720.339 363.793 720.339 cv
363.793 734.199 li
359.917 734.199 li
359.917 713.646 li
363.06 713.646 li
373.13 726.388 li
373.13 713.617 li
cp
f
395.897 734.199 mo
380.512 734.199 li
380.512 727.357 380.512 720.488 380.512 713.646 cv
395.897 713.646 li
395.897 717.404 li
384.358 717.404 li
384.358 722.13 li
395.486 722.13 li
395.486 725.743 li
384.358 725.743 li
384.358 730.381 li
395.897 730.381 li
395.897 734.199 li
cp
f
421.394 734.199 mo
418.105 734.199 li
415.55 727.74 li
413.377 721.25 li
411.233 727.799 li
408.738 734.199 li
405.449 734.199 li
397.903 713.646 li
402.249 713.646 li
407.094 728.473 li
412.085 713.646 li
414.61 713.646 li
419.749 728.473 li
424.446 713.646 li
428.792 713.646 li
421.394 734.199 li
cp
f
485.556 957.392 mo
385.668 957.392 li
385.668 857.683 li
398.49 853.2 li
414.809 857.683 li
485.556 857.683 li
485.556 957.392 li
cp
.162478 0 .0144961 0 cmyk
f
485.197 857.851 mo
414.137 857.851 li
399.835 852.247 li
385.13 857.851 li
385.13 837.901 li
485.197 837.901 li
485.197 857.851 li
cp
0 0 0 0 cmyk
f
415.343 955.173 mo
483.636 955.173 li
483.636 839.819 li
386.762 839.805 li
386.762 955.173 li
411.343 955.173 li
411.343 857.98 li
415.343 857.98 li
415.343 955.173 li
cp
485.636 959.173 mo
384.762 959.173 li
383.657 959.173 382.762 958.278 382.762 957.173 cv
382.762 837.805 li
382.762 837.275 382.973 836.766 383.348 836.391 cv
383.723 836.016 384.232 835.805 384.762 835.805 cv
384.762 835.805 li
485.636 835.819 li
486.74 835.819 487.636 836.714 487.636 837.819 cv
487.636 957.173 li
487.636 958.278 486.74 959.173 485.636 959.173 cv
cp
.619776 .0742504 0 0 cmyk
f
413.67 950.347 mo
399.745 945.221 li
385.82 950.347 li
384.44 946.593 li
399.055 941.213 li
399.5 941.049 399.99 941.049 400.436 941.213 cv
415.051 946.593 li
413.67 950.347 li
cp
f
485.636 859.98 mo
414.36 859.98 li
414.125 859.98 413.891 859.938 413.67 859.857 cv
399.745 854.731 li
385.82 859.857 li
384.44 856.103 li
399.055 850.723 li
399.5 850.559 399.99 850.559 400.436 850.723 cv
414.717 855.98 li
485.636 855.98 li
485.636 859.98 li
cp
f
401.893 943.723 mo
397.893 943.723 li
397.893 852.936 li
401.893 852.936 li
401.893 943.723 li
cp
f
450.33 908.644 mo
440.884 908.644 433.198 900.958 433.198 891.512 cv
433.198 874.792 li
437.198 874.792 li
437.198 891.512 li
437.198 898.753 443.089 904.644 450.33 904.644 cv
457.57 904.644 463.461 898.753 463.461 891.512 cv
463.461 874.792 li
467.461 874.792 li
467.461 891.512 li
467.461 900.958 459.776 908.644 450.33 908.644 cv
cp
f
470.956 876.792 mo
459.351 876.792 li
459.351 872.792 li
470.956 872.792 li
470.956 876.792 li
cp
f
440.694 876.792 mo
429.089 876.792 li
429.089 872.792 li
440.694 872.792 li
440.694 876.792 li
cp
f
440.574 937.889 mo
434.574 937.889 li
434.574 933.889 li
440.574 933.889 li
440.574 937.889 li
cp
452.574 937.889 mo
446.574 937.889 li
446.574 933.889 li
452.574 933.889 li
452.574 937.889 li
cp
464.574 937.889 mo
458.574 937.889 li
458.574 933.889 li
464.574 933.889 li
464.574 937.889 li
cp
f
171.749 764.831 mo
143.686 741.407 li
141.38 739.482 138.027 739.481 135.721 741.404 cv
107.641 764.808 li
106.224 765.99 105.404 767.738 105.403 769.582 cv
105.371 863.976 li
173.95 864 li
173.983 769.607 li
173.983 767.762 173.165 766.013 171.749 764.831 cv
cp
0 0 0 0 cmyk
f
173.95 864 mo
105.37 863.976 li
105.398 787.789 li
173.977 787.813 li
173.95 864 li
cp
.162478 0 .0144961 0 cmyk
f
162.569 823.346 mo
162.565 835.991 152.311 846.238 139.666 846.233 cv
127.022 846.228 116.775 835.974 116.779 823.33 cv
116.784 810.685 127.038 800.439 139.683 800.443 cv
152.327 800.448 162.574 810.702 162.569 823.346 cv
cp
0 0 0 0 cmyk
f
146.256 763.122 mo
146.254 766.985 143.122 770.116 139.259 770.114 cv
135.396 770.113 132.265 766.98 132.267 763.117 cv
132.268 759.253 135.4 756.123 139.264 756.124 cv
143.127 756.125 146.257 759.258 146.256 763.122 cv
cp
.619776 .0742504 0 0 cmyk
f
139.96 764.312 mo
139.433 760.347 li
146.262 759.44 156.395 746.458 156.4 730.382 cv
156.403 723.294 154.896 716.401 152.155 710.971 cv
155.726 709.168 li
158.743 715.147 160.403 722.682 160.4 730.384 cv
160.395 747.963 149.407 763.058 139.96 764.312 cv
cp
f
122.181 750.956 mo
119.129 744.931 117.518 738.156 117.521 731.363 cv
117.524 722.446 119.68 714.034 123.592 707.676 cv
127.69 701.018 133.237 697.351 139.215 697.351 cv
139.217 697.351 139.219 697.351 139.221 697.351 cv
144.994 697.353 150.406 700.808 154.46 707.079 cv
151.101 709.25 li
147.809 704.158 143.59 701.353 139.219 701.351 cv
139.218 701.351 139.217 701.351 139.215 701.351 cv
134.679 701.351 130.341 704.341 126.998 709.773 cv
123.469 715.508 121.524 723.176 121.521 731.365 cv
121.518 739.157 123.818 745.336 125.749 749.149 cv
122.181 750.956 li
cp
f
173.59 789.674 mo
105.197 789.651 li
105.199 785.651 li
173.592 785.674 li
173.59 789.674 li
cp
f
107.173 861.816 mo
171.566 861.838 li
171.598 769.44 li
171.598 768.188 171.047 767.007 170.087 766.205 cv
142.116 742.794 li
140.548 741.482 138.273 741.482 136.704 742.792 cv
108.717 766.182 li
107.756 766.986 107.205 768.164 107.205 769.416 cv
107.173 861.816 li
cp
173.565 865.839 mo
173.565 865.839 173.565 865.839 173.564 865.839 cv
105.171 865.815 li
104.066 865.815 103.172 864.918 103.172 863.814 cv
103.205 769.415 li
103.205 766.977 104.279 764.679 106.151 763.114 cv
134.14 739.723 li
137.195 737.169 141.628 737.169 144.684 739.727 cv
172.653 763.136 li
174.525 764.703 175.598 767 175.598 769.441 cv
175.565 863.84 li
175.565 864.371 175.354 864.879 174.979 865.254 cv
174.604 865.628 174.095 865.839 173.565 865.839 cv
cp
f
140.159 802.098 mo
128.837 802.098 119.626 811.306 119.621 822.629 cv
119.617 833.954 128.828 843.17 140.152 843.175 cv
140.154 843.175 140.156 843.175 140.158 843.175 cv
151.481 843.175 160.693 833.966 160.698 822.643 cv
160.702 811.318 151.491 802.102 140.167 802.098 cv
140.165 802.098 140.161 802.098 140.159 802.098 cv
cp
140.158 847.175 mo
140.155 847.175 140.154 847.175 140.15 847.175 cv
126.621 847.17 115.617 836.158 115.621 822.627 cv
115.626 809.1 126.633 798.098 140.159 798.098 cv
140.162 798.098 140.165 798.098 140.169 798.098 cv
153.698 798.102 164.702 809.114 164.698 822.645 cv
164.698 822.645 li
164.693 836.172 153.685 847.175 140.158 847.175 cv
cp
f
139.007 836.03 mo
139.006 833.185 li
138.443 833.137 li
136.394 832.96 132.803 832.164 131.027 828.863 cv
133.582 827.803 li
134.816 829.795 137.682 830.833 140.071 830.831 cv
143.777 830.83 146.08 829.319 146.078 826.89 cv
146.076 824.209 142.633 823.503 140.044 823.206 cv
135.353 822.695 131.768 821.951 131.765 817.513 cv
131.762 813.018 136.881 812.061 138.449 811.873 cv
138.992 811.81 li
138.991 809.227 li
141.72 809.225 li
141.721 811.791 li
142.245 811.87 li
145.041 812.285 146.833 813.304 147.961 815.146 cv
145.652 816.192 li
144.556 814.931 142.326 814.028 140.186 814.03 cv
136.647 814.032 134.616 815.3 134.618 817.511 cv
134.619 820.149 137.738 820.511 140.245 820.802 cv
145.096 821.383 149.114 822.242 149.116 826.888 cv
149.119 830.76 145.697 832.739 142.306 832.982 cv
141.733 833.023 li
141.735 836.028 li
139.007 836.03 li
cp
f
441.115 779.217 mo
437.115 779.217 li
437.115 773.217 li
441.115 773.217 li
441.115 779.217 li
cp
441.115 791.217 mo
437.115 791.217 li
437.115 785.217 li
441.115 785.217 li
441.115 791.217 li
cp
441.115 803.217 mo
437.115 803.217 li
437.115 797.217 li
441.115 797.217 li
441.115 803.217 li
cp
441.115 815.217 mo
437.115 815.217 li
437.115 809.217 li
441.115 809.217 li
441.115 815.217 li
cp
441.115 827.217 mo
437.115 827.217 li
437.115 821.217 li
441.115 821.217 li
441.115 827.217 li
cp
f
726.078 646.135 mo
731.24 650.987 li
732.171 651.861 733.53 652.1 734.703 651.597 cv
741.214 648.804 li
742.771 648.136 744.579 648.794 745.343 650.307 cv
748.535 656.631 li
749.11 657.771 750.306 658.461 751.58 658.389 cv
758.653 657.992 li
760.345 657.897 761.819 659.134 762.02 660.817 cv
762.857 667.851 li
763.007 669.119 763.895 670.176 765.116 670.544 cv
771.898 672.59 li
773.522 673.08 774.483 674.747 774.096 676.396 cv
772.476 683.292 li
772.185 684.535 772.656 685.832 773.679 686.596 cv
779.353 690.838 li
780.71 691.853 781.044 693.748 780.115 695.166 cv
776.234 701.092 li
775.535 702.161 775.535 703.54 776.234 704.609 cv
780.115 710.535 li
781.044 711.953 780.71 713.848 779.353 714.863 cv
773.679 719.105 li
772.656 719.869 772.185 721.166 772.476 722.409 cv
774.096 729.305 li
774.483 730.955 773.522 732.622 771.898 733.111 cv
765.116 735.157 li
763.895 735.525 763.007 736.582 762.857 737.85 cv
762.02 744.884 li
761.819 746.567 760.345 747.804 758.653 747.709 cv
751.58 747.312 li
750.306 747.24 749.11 747.93 748.535 749.07 cv
745.343 755.394 li
744.579 756.907 742.771 757.565 741.214 756.897 cv
734.703 754.104 li
733.53 753.601 732.171 753.84 731.24 754.714 cv
726.078 759.566 li
724.843 760.726 722.918 760.726 721.684 759.566 cv
716.521 754.714 li
715.591 753.84 714.232 753.601 713.059 754.104 cv
706.548 756.897 li
704.99 757.565 703.182 756.907 702.418 755.394 cv
699.226 749.07 li
698.651 747.93 697.455 747.24 696.182 747.312 cv
689.108 747.709 li
687.416 747.804 685.941 746.567 685.741 744.884 cv
684.905 737.85 li
684.754 736.582 683.867 735.525 682.646 735.157 cv
675.862 733.111 li
674.24 732.622 673.277 730.955 673.665 729.305 cv
675.285 722.409 li
675.577 721.166 675.105 719.869 674.083 719.105 cv
668.408 714.863 li
667.052 713.848 666.717 711.953 667.646 710.535 cv
671.526 704.609 li
672.226 703.54 672.226 702.161 671.526 701.092 cv
667.646 695.166 li
666.717 693.748 667.052 691.853 668.408 690.838 cv
674.083 686.596 li
675.105 685.832 675.577 684.535 675.285 683.292 cv
673.665 676.396 li
673.277 674.747 674.24 673.08 675.862 672.59 cv
682.646 670.544 li
683.867 670.176 684.754 669.119 684.905 667.851 cv
685.741 660.817 li
685.941 659.134 687.416 657.897 689.108 657.992 cv
696.182 658.389 li
697.455 658.461 698.651 657.771 699.226 656.631 cv
702.418 650.307 li
703.182 648.794 704.99 648.136 706.548 648.804 cv
713.059 651.597 li
714.232 652.1 715.591 651.861 716.521 650.987 cv
721.684 646.135 li
722.918 644.975 724.843 644.975 726.078 646.135 cv
cp
0 0 0 0 cmyk
f
714.133 752.856 mo
715.449 752.856 716.747 753.349 717.744 754.286 cv
723.009 759.234 li
723.499 759.693 724.263 759.693 724.751 759.234 cv
730.018 754.286 li
731.544 752.85 733.778 752.456 735.706 753.283 cv
742.346 756.131 li
742.966 756.394 743.682 756.133 743.982 755.536 cv
747.239 749.084 li
748.184 747.212 750.136 746.074 752.242 746.197 cv
759.455 746.602 li
760.13 746.664 760.711 746.147 760.79 745.482 cv
761.643 738.307 li
761.892 736.224 763.349 734.488 765.356 733.882 cv
772.274 731.796 li
772.916 731.603 773.298 730.94 773.145 730.288 cv
771.493 723.253 li
771.014 721.212 771.788 719.081 773.468 717.826 cv
779.256 713.499 li
779.792 713.098 779.925 712.344 779.559 711.784 cv
775.601 705.739 li
774.451 703.984 774.451 701.717 775.601 699.962 cv
779.559 693.917 li
779.926 693.357 779.793 692.603 779.256 692.202 cv
773.469 687.875 li
771.788 686.62 771.014 684.489 771.493 682.447 cv
773.145 675.414 li
773.298 674.761 772.916 674.098 772.274 673.905 cv
765.357 671.819 li
763.349 671.213 761.892 669.476 761.643 667.394 cv
760.79 660.219 li
760.711 659.554 760.126 659.05 759.455 659.099 cv
752.242 659.504 li
750.136 659.617 748.184 658.489 747.239 656.617 cv
743.983 650.166 li
743.682 649.568 742.963 649.307 742.346 649.57 cv
735.706 652.418 li
733.777 653.243 731.544 652.851 730.017 651.414 cv
724.752 646.468 li
724.751 646.467 724.751 646.467 724.751 646.467 cv
724.263 646.008 723.499 646.007 723.009 646.468 cv
717.744 651.414 li
716.216 652.851 713.983 653.244 712.056 652.418 cv
705.416 649.57 li
704.796 649.306 704.079 649.569 703.777 650.166 cv
700.523 656.617 li
699.576 658.489 697.626 659.637 695.52 659.504 cv
688.306 659.099 li
687.641 659.039 687.051 659.554 686.972 660.219 cv
686.118 667.393 li
685.871 669.475 684.413 671.212 682.405 671.819 cv
675.487 673.905 li
674.846 674.098 674.463 674.761 674.616 675.414 cv
676.269 682.448 li
676.748 684.489 675.973 686.621 674.292 687.876 cv
668.506 692.202 li
667.969 692.603 667.836 693.357 668.203 693.916 cv
672.161 699.962 li
673.311 701.717 673.311 703.984 672.161 705.739 cv
668.203 711.784 li
667.836 712.344 667.969 713.098 668.506 713.499 cv
674.292 717.826 li
675.973 719.081 676.748 721.212 676.269 723.254 cv
674.616 730.287 li
674.463 730.94 674.846 731.603 675.487 731.796 cv
682.404 733.882 li
684.413 734.489 685.871 736.226 686.118 738.308 cv
686.972 745.482 li
687.051 746.148 687.642 746.66 688.306 746.602 cv
695.52 746.197 li
697.623 746.072 699.576 747.212 700.523 749.083 cv
703.777 755.535 li
704.08 756.132 704.799 756.399 705.417 756.13 cv
712.056 753.283 li
712.725 752.996 713.432 752.856 714.133 752.856 cv
cp
723.881 763.576 mo
722.582 763.576 721.283 763.1 720.271 762.149 cv
715.006 757.201 li
714.637 756.855 714.097 756.758 713.632 756.958 cv
706.992 759.807 li
704.44 760.897 701.459 759.816 700.207 757.337 cv
696.952 750.887 li
696.724 750.436 696.246 750.157 695.744 750.191 cv
688.53 750.596 li
685.751 750.719 683.327 748.712 682.999 745.955 cv
682.146 738.78 li
682.086 738.277 681.734 737.859 681.249 737.712 cv
674.333 735.626 li
671.674 734.825 670.088 732.078 670.722 729.372 cv
672.374 722.339 li
672.49 721.846 672.303 721.332 671.898 721.03 cv
666.111 716.703 li
663.885 715.039 663.335 711.915 664.857 709.591 cv
668.815 703.547 li
669.092 703.124 669.092 702.577 668.815 702.154 cv
664.857 696.109 li
663.334 693.785 663.885 690.661 666.112 688.997 cv
671.898 684.672 li
672.303 684.369 672.49 683.855 672.374 683.363 cv
670.722 676.329 li
670.088 673.623 671.674 670.876 674.333 670.075 cv
681.25 667.989 li
681.734 667.842 682.086 667.423 682.146 666.921 cv
682.999 659.747 li
683.327 656.989 685.759 654.927 688.53 655.105 cv
695.744 655.51 li
696.229 655.551 696.723 655.266 696.952 654.813 cv
700.207 648.364 li
701.46 645.885 704.443 644.801 706.991 645.893 cv
713.632 648.743 li
714.1 648.943 714.637 648.846 715.006 648.499 cv
720.271 643.553 li
722.294 641.649 725.467 641.65 727.49 643.552 cv
732.756 648.499 li
733.127 648.847 733.666 648.943 734.13 648.743 cv
740.77 645.894 li
743.324 644.797 746.304 645.886 747.555 648.365 cv
750.81 654.814 li
751.038 655.266 751.513 655.543 752.018 655.51 cv
759.231 655.105 li
761.989 654.953 764.435 656.989 764.763 659.747 cv
765.615 666.92 li
765.675 667.423 766.026 667.843 766.512 667.989 cv
773.429 670.075 li
776.089 670.877 777.675 673.624 777.039 676.33 cv
775.388 683.362 li
775.272 683.855 775.459 684.37 775.864 684.672 cv
781.65 688.998 li
783.876 690.661 784.427 693.785 782.904 696.109 cv
778.946 702.154 li
778.67 702.577 778.67 703.124 778.946 703.547 cv
782.904 709.592 li
784.426 711.915 783.875 715.039 781.651 716.703 cv
775.863 721.029 li
775.459 721.331 775.272 721.846 775.388 722.338 cv
777.039 729.372 li
777.675 732.077 776.089 734.824 773.429 735.626 cv
766.511 737.712 li
766.026 737.858 765.675 738.278 765.615 738.781 cv
764.763 745.955 li
764.435 748.712 761.992 750.749 759.231 750.596 cv
752.018 750.191 li
751.515 750.157 751.038 750.435 750.81 750.887 cv
747.554 757.337 li
746.304 759.817 743.324 760.905 740.77 759.807 cv
734.13 756.958 li
733.665 756.76 733.126 756.854 732.757 757.201 cv
727.49 762.149 li
726.479 763.1 725.18 763.576 723.881 763.576 cv
cp
.528099 0 .0110475 0 cmyk
f
725.604 658.384 mo
729.651 662.188 li
730.38 662.873 731.446 663.061 732.365 662.666 cv
737.47 660.477 li
738.691 659.954 740.109 660.469 740.708 661.656 cv
743.21 666.614 li
743.661 667.507 744.599 668.048 745.598 667.992 cv
751.143 667.68 li
752.47 667.606 753.626 668.576 753.782 669.895 cv
754.439 675.411 li
754.557 676.404 755.252 677.233 756.21 677.522 cv
761.527 679.125 li
762.8 679.509 763.555 680.816 763.251 682.11 cv
761.981 687.517 li
761.752 688.491 762.122 689.507 762.923 690.107 cv
767.372 693.432 li
768.436 694.228 768.698 695.714 767.97 696.826 cv
764.928 701.472 li
764.379 702.309 764.379 703.392 764.928 704.229 cv
767.97 708.875 li
768.698 709.987 768.436 711.473 767.372 712.269 cv
762.923 715.594 li
762.122 716.194 761.752 717.21 761.981 718.184 cv
763.251 723.591 li
763.555 724.885 762.8 726.192 761.527 726.576 cv
756.21 728.179 li
755.252 728.468 754.557 729.297 754.439 730.29 cv
753.782 735.806 li
753.626 737.125 752.47 738.095 751.143 738.021 cv
745.598 737.708 li
744.599 737.653 743.661 738.194 743.21 739.087 cv
740.708 744.045 li
740.109 745.232 738.691 745.747 737.47 745.224 cv
732.365 743.035 li
731.446 742.64 730.38 742.828 729.651 743.513 cv
725.604 747.317 li
724.635 748.226 723.126 748.226 722.158 747.317 cv
718.11 743.513 li
717.381 742.828 716.315 742.64 715.396 743.035 cv
710.291 745.224 li
709.07 745.747 707.652 745.232 707.054 744.045 cv
704.551 739.087 li
704.1 738.194 703.163 737.653 702.164 737.708 cv
696.618 738.021 li
695.292 738.095 694.136 737.125 693.979 735.806 cv
693.323 730.29 li
693.205 729.297 692.509 728.468 691.551 728.179 cv
686.233 726.576 li
684.961 726.192 684.207 724.885 684.511 723.591 cv
685.78 718.184 li
686.01 717.21 685.64 716.194 684.838 715.594 cv
680.39 712.269 li
679.325 711.473 679.064 709.987 679.791 708.875 cv
682.834 704.229 li
683.382 703.392 683.382 702.309 682.834 701.472 cv
679.791 696.826 li
679.064 695.714 679.325 694.228 680.39 693.432 cv
684.838 690.107 li
685.64 689.507 686.01 688.491 685.78 687.517 cv
684.511 682.11 li
684.207 680.816 684.961 679.509 686.233 679.125 cv
691.551 677.522 li
692.509 677.233 693.205 676.404 693.323 675.411 cv
693.979 669.895 li
694.136 668.576 695.292 667.606 696.618 667.68 cv
702.164 667.992 li
703.163 668.048 704.1 667.507 704.551 666.614 cv
707.054 661.656 li
707.652 660.469 709.07 659.954 710.291 660.477 cv
715.396 662.666 li
716.315 663.061 717.381 662.873 718.11 662.188 cv
722.158 658.384 li
723.126 657.475 724.635 657.475 725.604 658.384 cv
cp
.103426 0 .0108949 0 cmyk
f
736.569 720.814 mo
742.313 720.814 742.313 712.071 736.569 712.071 cv
730.827 712.071 730.827 720.814 736.569 720.814 cv
cp
736.569 726.894 mo
722.077 726.894 722.077 705.925 736.569 705.925 cv
751.061 705.925 751.061 726.894 736.569 726.894 cv
cp
711.192 693.636 mo
716.936 693.636 716.936 684.887 711.192 684.887 cv
705.448 684.887 705.448 693.636 711.192 693.636 cv
cp
743.782 679.612 mo
713.062 726.492 li
703.579 726.492 li
734.365 679.612 li
743.782 679.612 li
cp
711.192 699.781 mo
696.7 699.781 696.7 678.807 711.192 678.807 cv
725.684 678.807 725.684 699.781 711.192 699.781 cv
cp
.528099 0 .0110475 0 cmyk
f
926.784 954.624 mo
979.224 953.98 li
978.337 881.801 li
978.319 880.391 977.677 879.061 976.583 878.171 cv
954.898 860.531 li
953.115 859.081 950.553 859.113 948.807 860.605 cv
927.562 878.774 li
926.489 879.69 925.88 881.036 925.898 882.446 cv
926.784 954.624 li
cp
.103426 0 .0108949 0 cmyk
f
926.784 956.624 mo
926.263 956.624 925.762 956.42 925.388 956.056 cv
925.008 955.686 924.791 955.179 924.784 954.649 cv
923.898 882.47 li
923.872 880.46 924.734 878.558 926.263 877.253 cv
947.507 859.085 li
949.99 856.963 953.629 856.922 956.159 858.979 cv
953.636 862.082 li
952.603 861.245 951.118 861.261 950.107 862.125 cv
928.861 880.293 li
928.238 880.827 927.887 881.601 927.898 882.42 cv
928.76 952.6 li
975.633 952.024 li
975.682 956.024 li
926.809 956.624 li
926.801 956.624 926.792 956.624 926.784 956.624 cv
cp
.528099 0 .0110475 0 cmyk
f
938.211 896.334 mo
979.555 963.978 li
1028.7 933.941 li
987.356 866.296 li
986.548 864.975 985.195 864.08 983.663 863.854 cv
953.29 859.37 li
950.795 859.001 948.393 860.469 947.582 862.859 cv
937.721 891.933 li
937.224 893.4 937.402 895.012 938.211 896.334 cv
cp
0 0 0 0 cmyk
f
937.721 891.933 mo
947.582 862.859 li
948.393 860.469 950.795 859.001 953.29 859.37 cv
954.51 859.55 li
953.77 860.153 953.182 860.953 952.857 861.911 cv
942.995 890.985 li
942.498 892.453 942.678 894.064 943.485 895.386 cv
983.816 961.373 li
979.555 963.978 li
938.211 896.334 li
937.402 895.012 937.224 893.4 937.721 891.933 cv
cp
.0705577 .0231632 0 0 cmyk
f
979.555 963.978 mo
1028.7 933.941 li
995.33 879.343 li
946.185 909.381 li
979.555 963.978 li
cp
.103426 0 .0108949 0 cmyk
f
969.916 929.857 mo
975.454 938.918 987.289 941.774 996.351 936.236 cv
1005.41 930.698 1008.27 918.862 1002.73 909.801 cv
997.191 900.74 985.357 897.883 976.295 903.421 cv
967.233 908.96 964.377 920.795 969.916 929.857 cv
cp
0 0 0 0 cmyk
f
955.246 879.548 mo
956.938 882.317 960.554 883.189 963.322 881.497 cv
966.09 879.805 966.963 876.19 965.271 873.421 cv
963.579 870.653 959.963 869.781 957.194 871.472 cv
954.427 873.164 953.554 876.78 955.246 879.548 cv
cp
.528099 0 .0110475 0 cmyk
f
955.823 878.796 mo
947.592 878.796 935.638 872.406 929.266 861.98 cv
926.905 858.119 923.68 850.07 922.695 846.189 cv
921.832 842.789 922.134 839.042 923.545 835.64 cv
925.654 830.553 929.931 826.86 935.276 825.507 cv
940.536 824.178 945.947 825.361 950.128 828.754 cv
953.644 831.609 956.862 835.343 959.436 839.553 cv
962.448 844.481 967.053 854.691 967.496 860.264 cv
963.508 860.581 li
963.163 856.244 959.201 846.837 956.023 841.639 cv
953.684 837.813 950.773 834.431 947.607 831.86 cv
944.416 829.27 940.282 828.367 936.258 829.385 cv
932.148 830.425 928.861 833.263 927.24 837.172 cv
926.157 839.783 925.92 842.635 926.572 845.205 cv
927.471 848.747 930.526 856.373 932.678 859.894 cv
939.565 871.163 953.403 876.657 958.792 874.28 cv
960.409 877.938 li
959.1 878.517 957.542 878.796 955.823 878.796 cv
cp
f
947.443 910.82 mo
945.357 907.408 li
994.369 877.452 li
996.455 880.864 li
947.443 910.82 li
cp
f
952.668 861.077 mo
951.304 861.077 950.065 861.943 949.617 863.268 cv
939.816 892.292 li
939.511 893.199 939.622 894.187 940.12 895.003 cv
980.424 960.945 li
1026.02 933.076 li
985.72 867.133 li
985.22 866.317 984.392 865.768 983.445 865.627 cv
953.146 861.113 li
952.985 861.088 952.825 861.077 952.668 861.077 cv
cp
979.763 965.694 mo
979.089 965.694 978.432 965.354 978.055 964.737 cv
936.708 897.089 li
935.59 895.26 935.341 893.046 936.026 891.013 cv
945.828 861.989 li
946.947 858.673 950.268 856.645 953.734 857.156 cv
984.034 861.67 li
986.154 861.986 988.013 863.216 989.132 865.047 cv
1030.48 932.696 li
1031.05 933.638 1030.76 934.87 1029.81 935.445 cv
980.804 965.4 li
980.479 965.599 980.118 965.694 979.763 965.694 cv
cp
f
971.223 928.368 mo
973.581 932.226 977.301 934.935 981.696 935.996 cv
986.092 937.055 990.638 936.34 994.496 933.984 cv
998.355 931.625 1001.06 927.906 1002.13 923.509 cv
1003.19 919.114 1002.47 914.568 1000.11 910.709 cv
995.245 902.745 984.804 900.226 976.839 905.093 cv
968.874 909.961 966.356 920.403 971.223 928.368 cv
971.223 928.368 li
cp
985.706 940.476 mo
984.059 940.476 982.4 940.281 980.758 939.884 cv
975.324 938.573 970.726 935.223 967.811 930.454 cv
967.811 930.454 li
961.792 920.607 964.906 907.699 974.753 901.681 cv
984.599 895.663 997.506 898.775 1003.53 908.623 cv
1006.44 913.393 1007.33 919.013 1006.01 924.448 cv
1004.7 929.882 1001.35 934.481 996.582 937.396 cv
993.254 939.431 989.511 940.476 985.706 940.476 cv
cp
f
997.445 812.794 mo
847.318 712.93 li
898.697 635.692 li
1048.82 735.555 li
997.445 812.794 li
cp
.103426 0 .0108949 0 cmyk
f
850.091 712.372 mo
996.888 810.022 li
1046.05 736.113 li
899.255 638.464 li
850.091 712.372 li
cp
997.445 814.794 mo
997.054 814.794 996.668 814.679 996.338 814.459 cv
846.211 714.595 li
845.769 714.301 845.462 713.844 845.357 713.325 cv
845.253 712.804 845.359 712.264 845.653 711.823 cv
897.032 634.584 li
897.644 633.665 898.886 633.416 899.805 634.027 cv
1049.93 733.89 li
1050.85 734.501 1051.1 735.744 1050.49 736.663 cv
999.11 813.902 li
998.816 814.344 998.359 814.651 997.84 814.755 cv
997.709 814.782 997.577 814.794 997.445 814.794 cv
cp
.528099 0 .0110475 0 cmyk
f
978.153 819.468 mo
854.548 696.631 li
919.939 630.831 li
1043.54 753.668 li
978.153 819.468 li
cp
.103426 0 .0108949 0 cmyk
f
1022.33 737.452 mo
1012.92 746.927 1012.96 762.242 1022.44 771.658 cv
1040.32 753.668 li
1023.2 736.661 li
1022.91 736.925 1022.61 737.17 1022.33 737.452 cv
cp
0 0 0 0 cmyk
f
898.842 648.813 mo
898.898 648.871 898.946 648.934 899.004 648.992 cv
908.48 658.408 923.794 658.36 933.21 648.885 cv
933.49 648.604 933.733 648.301 933.996 648.01 cv
916.71 630.831 li
898.842 648.813 li
cp
f
992.31 801.975 mo
992.16 801.818 992.029 801.651 991.875 801.497 cv
982.399 792.081 967.085 792.129 957.669 801.604 cv
957.548 801.726 957.446 801.859 957.329 801.982 cv
974.925 819.468 li
992.31 801.975 li
cp
f
868.548 713.038 mo
877.868 703.659 877.901 688.568 868.713 679.129 cv
851.319 696.631 li
868.172 713.379 li
868.295 713.261 868.427 713.159 868.548 713.038 cv
cp
f
988.558 767.624 mo
986.341 769.856 982.735 769.867 980.505 767.65 cv
978.273 765.433 978.263 761.828 980.48 759.596 cv
982.696 757.366 986.302 757.355 988.532 759.572 cv
990.764 761.789 990.774 765.394 988.558 767.624 cv
cp
f
906.182 682.066 mo
906.182 682.066 906.174 682.066 906.17 682.066 cv
905.184 682.069 904.257 682.456 903.562 683.156 cv
902.865 683.857 902.483 684.786 902.486 685.772 cv
902.489 686.758 902.877 687.685 903.577 688.38 cv
905.023 689.818 907.367 689.809 908.802 688.366 cv
908.802 688.366 li
910.237 686.92 910.231 684.576 908.785 683.14 cv
908.088 682.447 907.164 682.066 906.182 682.066 cv
cp
906.182 693.451 mo
904.22 693.451 902.257 692.707 900.758 691.218 cv
899.3 689.769 898.493 687.839 898.486 685.785 cv
898.481 683.729 899.275 681.794 900.725 680.336 cv
902.173 678.878 904.103 678.072 906.157 678.066 cv
906.166 678.066 906.174 678.066 906.183 678.066 cv
908.229 678.066 910.153 678.86 911.606 680.302 cv
914.614 683.293 914.63 688.174 911.64 691.184 cv
911.64 691.185 li
910.138 692.695 908.16 693.451 906.182 693.451 cv
cp
.528099 0 .0110475 0 cmyk
f
855.193 696.532 mo
975.295 815.886 li
1037.82 752.965 li
917.723 633.611 li
855.193 696.532 li
cp
975.304 820.714 mo
974.775 820.714 974.269 820.505 973.894 820.133 cv
850.955 697.959 li
850.172 697.18 850.168 695.914 850.946 695.13 cv
916.295 629.372 li
916.669 628.997 917.177 628.785 917.708 628.783 cv
917.708 628.783 917.712 628.783 917.714 628.783 cv
918.242 628.783 918.749 628.992 919.124 629.364 cv
1042.06 751.538 li
1042.85 752.317 1042.85 753.582 1042.07 754.367 cv
976.723 820.124 li
976.349 820.5 975.841 820.712 975.31 820.714 cv
975.304 820.714 li
cp
f
1023.51 738.746 mo
1019.82 742.738 1017.75 747.855 1017.64 753.344 cv
1017.53 758.793 1019.36 763.946 1022.83 768.055 cv
1037.82 752.965 li
1023.51 738.746 li
cp
1022.77 772.946 mo
1022.25 772.946 1021.74 772.737 1021.36 772.365 cv
1016.24 767.272 1013.5 760.489 1013.64 753.265 cv
1013.79 746.044 1016.8 739.372 1022.14 734.474 cv
1022.53 734.12 1023.08 733.926 1023.58 733.95 cv
1024.09 733.967 1024.59 734.174 1024.95 734.53 cv
1042.06 751.538 li
1042.44 751.912 1042.65 752.419 1042.65 752.951 cv
1042.65 753.481 1042.45 753.99 1042.07 754.367 cv
1024.19 772.356 li
1023.82 772.732 1023.31 772.944 1022.78 772.946 cv
1022.77 772.946 li
cp
f
902.713 648.715 mo
906.845 652.233 912.045 654.11 917.536 653.968 cv
923.06 653.85 928.196 651.749 932.19 648.013 cv
929.412 645.235 922.892 638.749 917.723 633.611 cv
902.713 648.715 li
cp
917.039 657.974 mo
909.988 657.974 903.397 655.221 898.423 650.184 cv
898.053 649.81 897.846 649.305 897.846 648.779 cv
897.846 648.763 li
897.846 648.235 898.055 647.728 898.427 647.353 cv
916.295 629.372 li
917.076 628.59 918.341 628.585 919.124 629.364 cv
927.768 637.959 li
929.93 640.11 932.091 642.262 933.712 643.88 cv
936.983 647.143 936.983 647.143 937.001 647.963 cv
937.012 648.475 936.826 648.97 936.482 649.349 cv
931.587 654.751 924.889 657.812 917.622 657.967 cv
917.428 657.971 917.233 657.974 917.039 657.974 cv
cp
f
960.562 801.228 mo
963.636 804.294 971.013 811.629 975.295 815.886 cv
989.856 801.235 li
985.804 797.66 980.67 795.711 975.204 795.711 cv
975.201 795.711 975.197 795.711 975.197 795.711 cv
969.733 795.714 964.607 797.66 960.562 801.228 cv
cp
975.304 820.714 mo
974.794 820.714 974.284 820.521 973.894 820.133 cv
959.046 805.365 li
955.708 802.039 955.708 802.039 955.708 801.199 cv
955.708 800.684 955.906 800.189 956.262 799.817 cv
961.252 794.593 967.975 791.715 975.192 791.711 cv
975.196 791.711 975.201 791.711 975.205 791.711 cv
982.417 791.711 989.139 794.584 994.134 799.803 cv
994.489 800.175 994.689 800.67 994.689 801.186 cv
994.689 801.221 li
994.689 801.749 994.48 802.256 994.107 802.631 cv
976.723 820.124 li
976.331 820.517 975.817 820.714 975.304 820.714 cv
cp
f
855.193 696.532 mo
869.192 710.443 li
872.624 706.501 874.536 701.53 874.615 696.25 cv
874.693 690.992 872.953 685.987 869.68 681.956 cv
855.193 696.532 li
cp
869.247 715.288 mo
869.218 715.288 li
868.69 715.288 868.183 715.079 867.808 714.706 cv
850.955 697.959 li
850.579 697.585 850.367 697.078 850.365 696.546 cv
850.363 696.016 850.572 695.507 850.946 695.13 cv
868.34 677.628 li
868.716 677.25 869.227 677.039 869.759 677.039 cv
869.769 677.039 li
870.306 677.041 870.817 677.259 871.191 677.643 cv
876.083 682.667 878.72 689.296 878.614 696.31 cv
878.51 703.311 875.677 709.85 870.638 714.725 cv
870.265 715.085 869.766 715.288 869.247 715.288 cv
cp
f
987.976 765.956 mo
989.395 767.367 li
987.976 765.956 li
988.737 765.19 989.155 764.173 989.152 763.092 cv
989.148 762.012 988.725 760.997 987.958 760.236 cv
987.194 759.477 986.182 759.059 985.106 759.059 cv
985.102 759.059 985.098 759.059 985.098 759.059 cv
984.013 759.063 982.998 759.487 982.236 760.253 cv
981.474 761.02 981.056 762.037 981.06 763.118 cv
981.063 764.199 981.487 765.213 982.254 765.975 cv
983.835 767.547 986.404 767.54 987.976 765.956 cv
cp
985.105 771.148 mo
983.053 771.148 981.001 770.37 979.434 768.813 cv
977.909 767.297 977.066 765.28 977.06 763.13 cv
977.053 760.981 977.884 758.957 979.399 757.433 cv
982.525 754.289 987.63 754.273 990.777 757.398 cv
992.302 758.913 993.146 760.931 993.151 763.08 cv
993.158 765.229 992.328 767.252 990.814 768.777 cv
990.814 768.777 li
989.243 770.357 987.174 771.148 985.105 771.148 cv
cp
f
952.601 691.168 mo
950.785 690.798 948.922 690.577 947.064 690.509 cv
947.208 686.511 li
949.286 686.586 951.369 686.834 953.399 687.248 cv
952.601 691.168 li
cp
936.039 691.931 mo
934.883 688.101 li
936.866 687.502 938.918 687.064 940.981 686.798 cv
941.492 690.765 li
939.647 691.003 937.813 691.395 936.039 691.931 cv
cp
962.972 695.148 mo
961.373 694.206 959.685 693.391 957.953 692.727 cv
959.387 688.993 li
961.324 689.736 963.214 690.648 965.003 691.703 cv
962.972 695.148 li
cp
926.081 696.858 mo
923.737 693.618 li
925.42 692.4 927.218 691.316 929.08 690.394 cv
930.854 693.98 li
929.19 694.802 927.585 695.771 926.081 696.858 cv
cp
971.488 702.294 mo
970.898 701.607 970.276 700.938 969.639 700.304 cv
968.958 699.628 968.246 698.977 967.522 698.369 cv
970.094 695.306 li
970.903 695.986 971.698 696.712 972.457 697.466 cv
973.17 698.174 973.865 698.922 974.523 699.689 cv
971.488 702.294 li
cp
918.255 704.758 mo
914.991 702.444 li
916.188 700.757 917.537 699.152 919.003 697.672 cv
921.845 700.489 li
920.532 701.812 919.324 703.248 918.255 704.758 cv
cp
977.234 711.804 mo
976.552 710.081 975.719 708.4 974.758 706.811 cv
978.182 704.743 li
979.256 706.521 980.189 708.402 980.953 710.331 cv
977.234 711.804 li
cp
913.42 714.756 mo
909.58 713.635 li
910.163 711.638 910.917 709.679 911.819 707.813 cv
915.421 709.555 li
914.614 711.222 913.94 712.972 913.42 714.756 cv
cp
979.567 722.672 mo
979.48 720.813 979.238 718.953 978.85 717.14 cv
982.762 716.302 li
983.195 718.327 983.465 720.407 983.564 722.483 cv
979.567 722.672 li
cp
908.103 725.972 mo
908.077 725.4 908.064 724.828 908.064 724.255 cv
908.064 722.752 908.154 721.234 908.333 719.743 cv
912.304 720.219 li
912.145 721.552 912.064 722.911 912.064 724.255 cv
912.064 724.767 912.075 725.281 912.099 725.792 cv
908.103 725.972 li
cp
982.103 734.825 mo
978.261 733.709 li
978.778 731.927 979.151 730.089 979.369 728.246 cv
983.342 728.714 li
983.098 730.777 982.681 732.832 982.103 734.825 cv
cp
910.694 738.13 mo
909.935 736.204 909.33 734.195 908.896 732.16 cv
912.808 731.326 li
913.196 733.146 913.737 734.942 914.415 736.664 cv
910.694 738.13 li
cp
976.71 746.023 mo
973.442 743.716 li
974.514 742.2 975.465 740.583 976.27 738.914 cv
979.873 740.65 li
978.973 742.519 977.908 744.327 976.71 746.023 cv
cp
917.107 748.782 mo
915.753 747.199 914.524 745.497 913.457 743.723 cv
916.885 741.661 li
917.838 743.245 918.936 744.766 920.147 746.182 cv
917.107 748.782 li
cp
967.885 754.929 mo
965.545 751.685 li
967.046 750.602 968.474 749.383 969.787 748.061 cv
969.867 747.982 li
972.695 750.81 li
972.62 750.885 li
971.157 752.358 969.563 753.719 967.885 754.929 cv
cp
926.615 756.783 mo
924.833 755.728 923.122 754.513 921.53 753.172 cv
924.107 750.114 li
925.53 751.312 927.06 752.398 928.652 753.341 cv
926.615 756.783 li
cp
956.732 760.427 mo
955.581 756.597 li
957.359 756.062 959.105 755.375 960.769 754.556 cv
962.536 758.144 li
960.675 759.061 958.722 759.83 956.732 760.427 cv
cp
938.213 761.255 mo
936.179 760.837 934.165 760.248 932.23 759.502 cv
933.667 755.77 li
935.398 756.436 937.198 756.963 939.018 757.337 cv
938.213 761.255 li
cp
945.833 762.028 mo
945.357 762.028 944.881 762.019 944.404 762.001 cv
944.551 758.003 li
946.416 758.071 948.292 757.989 950.125 757.754 cv
950.631 761.723 li
949.051 761.924 947.437 762.027 945.833 762.028 cv
cp
f
968.853 747.132 mo
956.219 759.845 935.671 759.91 922.958 747.276 cv
910.245 734.642 910.182 714.094 922.815 701.381 cv
935.449 688.668 955.996 688.605 968.709 701.239 cv
981.422 713.872 981.486 734.419 968.853 747.132 cv
cp
0 0 0 0 cmyk
f
991.106 930.015 mo
989.841 927.725 li
989.367 927.936 li
987.638 928.705 984.393 929.657 981.498 927.787 cv
983.084 925.799 li
984.962 926.856 987.731 926.419 989.654 925.357 cv
992.639 923.709 993.822 921.471 992.742 919.515 cv
991.551 917.357 988.464 918.318 986.246 919.228 cv
982.242 920.899 979.023 921.892 977.051 918.319 cv
975.054 914.701 978.751 911.657 979.931 910.81 cv
980.34 910.517 li
979.191 908.437 li
981.389 907.224 li
982.529 909.29 li
982.985 909.121 li
985.422 908.213 987.317 908.24 989.044 909.221 cv
987.649 911.089 li
986.206 910.561 984.01 910.823 982.286 911.775 cv
979.437 913.348 978.365 915.271 979.349 917.05 cv
980.522 919.174 983.194 918.081 985.341 917.203 cv
989.506 915.516 993.123 914.424 995.189 918.164 cv
996.909 921.282 995.032 924.394 992.409 926.096 cv
991.967 926.383 li
993.303 928.802 li
991.106 930.015 li
cp
.528099 0 .0110475 0 cmyk
f
814.478 942.684 mo
684.771 942.684 li
684.771 926.228 li
814.478 926.228 li
814.478 942.684 li
cp
.103426 0 .0108949 0 cmyk
f
814.478 975.596 mo
684.771 975.596 li
684.771 959.14 li
814.478 959.14 li
814.478 975.596 li
cp
f
838.348 959.161 mo
708.64 959.161 li
708.64 942.706 li
838.348 942.706 li
838.348 959.161 li
cp
f
815.456 977.35 mo
681.289 977.35 li
681.289 973.35 li
813.456 973.35 li
813.456 957.522 li
817.456 957.522 li
817.456 975.35 li
817.456 976.455 816.561 977.35 815.456 977.35 cv
cp
.528099 0 .0110475 0 cmyk
f
838.413 961.161 mo
742.892 961.161 li
742.892 957.161 li
836.413 957.161 li
836.413 945.313 li
685.209 945.313 li
684.114 945.313 683.224 944.433 683.209 943.339 cv
682.97 925.033 li
682.963 924.497 683.171 923.982 683.546 923.601 cv
683.922 923.22 684.435 923.006 684.97 923.006 cv
780.453 923.006 li
780.453 927.006 li
686.996 927.006 li
687.183 941.313 li
838.413 941.313 li
839.518 941.313 840.413 942.208 840.413 943.313 cv
840.413 959.161 li
840.413 960.265 839.518 961.161 838.413 961.161 cv
cp
f
685.393 977.353 mo
681.393 977.353 li
681.393 959.331 li
681.393 958.227 682.288 957.331 683.393 957.331 cv
723.326 957.331 li
723.326 961.331 li
685.393 961.331 li
685.393 977.353 li
cp
f
710.692 957.914 mo
706.692 957.914 li
706.692 942.684 li
710.692 942.684 li
710.692 957.914 li
cp
f
875.436 929.213 mo
877.178 935.174 883.423 938.594 889.384 936.852 cv
895.345 935.11 898.765 928.866 897.023 922.905 cv
895.28 916.944 889.036 913.524 883.075 915.265 cv
877.114 917.007 873.694 923.252 875.436 929.213 cv
cp
.103426 0 .0108949 0 cmyk
f
877.356 928.653 mo
878.048 931.023 879.622 932.981 881.788 934.167 cv
883.954 935.353 886.455 935.623 888.822 934.932 cv
891.193 934.24 893.151 932.665 894.338 930.499 cv
895.523 928.334 895.796 925.836 895.103 923.466 cv
893.673 918.574 888.523 915.756 883.636 917.185 cv
878.743 918.615 875.926 923.759 877.356 928.653 cv
877.356 928.653 li
cp
886.211 939.31 mo
884.017 939.31 881.846 938.759 879.867 937.675 cv
876.764 935.976 874.509 933.17 873.516 929.775 cv
873.516 929.774 873.516 929.774 873.516 929.774 cv
871.468 922.764 875.505 915.394 882.514 913.345 cv
889.523 911.302 896.894 915.335 898.942 922.343 cv
899.935 925.74 899.545 929.319 897.846 932.421 cv
896.147 935.524 893.341 937.779 889.945 938.772 cv
888.714 939.131 887.458 939.31 886.211 939.31 cv
cp
.528099 0 .0110475 0 cmyk
f
373.594 168.826 mo
439.332 168.826 li
439.434 166.119 439.504 165.402 439.504 164.666 cv
439.504 156.316 432.734 149.546 424.384 149.546 cv
423.008 149.546 421.68 149.747 420.412 150.091 cv
418.459 139.141 408.896 130.826 397.384 130.826 cv
387.204 130.826 378.547 137.329 375.328 146.406 cv
372.733 145.189 369.839 144.506 366.784 144.506 cv
360.66 144.506 346.985 149.609 346.594 165.261 cv
373.594 168.826 li
cp
.103426 0 .0108949 0 cmyk
f
197.42 166.609 mo
195.072 154.087 182.153 149.055 174.604 149.055 cv
173.804 149.055 173.016 149.106 172.24 149.195 cv
168.535 136.86 157.098 127.87 143.555 127.87 cv
129.521 127.87 117.745 137.524 114.496 150.552 cv
112.198 149.589 109.676 149.055 107.028 149.055 cv
96.337 149.055 87.669 157.723 87.669 168.414 cv
87.669 170.319 87.9552 172.155 88.4679 173.893 cv
166.898 173.893 li
197.42 166.609 li
cp
f
185.159 418.565 mo
97.2462 418.565 li
89.2892 361.826 li
192.594 361.826 li
185.159 418.565 li
cp
f
146.289 373.304 mo
134.55 373.304 li
134.55 291.13 li
146.289 291.13 li
146.289 373.304 li
cp
f
121.861 236.756 mo
117.139 237.633 113.449 238.057 112.486 234.941 cv
111.208 230.804 116.566 228.659 118.929 227.929 cv
122.002 226.979 125.647 227.247 127.793 228.581 cv
128.365 228.937 li
132.747 225.056 li
131.979 224.378 li
129.132 221.874 125.552 221.052 120.708 221.792 cv
120.619 221.805 li
119.341 217.668 li
113.34 219.522 li
114.62 223.664 li
114.534 223.701 li
111.995 224.829 103.896 229.11 106.29 236.856 cv
108.655 244.511 115.276 243.894 123.039 242.397 cv
129.174 241.25 132.415 241.96 133.24 244.63 cv
134.252 247.902 131.605 250.947 126.331 252.576 cv
123.083 253.58 118.329 253.561 115.566 251.149 cv
114.986 250.642 li
110.135 254.667 li
110.847 255.37 li
115.547 260.001 121.953 259.457 125.355 258.721 cv
125.447 258.701 li
126.846 263.227 li
132.847 261.372 li
131.374 256.608 li
131.466 256.572 li
137.052 254.4 141.772 249.246 139.727 242.625 cv
137.263 234.653 129.872 235.299 121.861 236.756 cv
cp
.528099 0 .0110475 0 cmyk
f
123.246 204.956 mo
103.516 204.956 87.463 221.008 87.463 240.739 cv
87.463 260.469 103.516 276.522 123.246 276.522 cv
142.977 276.522 159.028 260.469 159.028 240.739 cv
159.028 221.008 142.977 204.956 123.246 204.956 cv
cp
123.246 280.522 mo
101.31 280.522 83.463 262.675 83.463 240.739 cv
83.463 218.803 101.31 200.956 123.246 200.956 cv
145.182 200.956 163.028 218.803 163.028 240.739 cv
163.028 262.675 145.182 280.522 123.246 280.522 cv
cp
f
99.0626 350.417 mo
95.0626 350.417 li
95.0626 339.893 103.624 331.331 114.149 331.331 cv
119.847 331.331 125.203 333.848 128.844 338.237 cv
125.766 340.791 li
122.887 337.322 118.652 335.331 114.149 335.331 cv
105.83 335.331 99.0626 342.099 99.0626 350.417 cv
cp
f
95.0431 320.341 mo
96.5694 321.727 99.2999 323.742 102.278 323.742 cv
105.237 323.742 107.978 321.723 109.511 320.337 cv
107.984 318.952 105.255 316.94 102.278 316.94 cv
99.2999 316.94 96.5704 318.955 95.0431 320.341 cv
cp
102.278 327.742 mo
95.8702 327.742 90.9093 321.871 90.7013 321.621 cv
90.0841 320.879 90.0841 319.803 90.7013 319.062 cv
90.9093 318.812 95.8692 312.94 102.278 312.94 cv
108.689 312.94 113.649 318.812 113.857 319.062 cv
114.474 319.803 114.474 320.879 113.857 321.621 cv
113.649 321.871 108.688 327.742 102.278 327.742 cv
cp
f
134.318 364.147 mo
81.6104 364.147 li
80.506 364.147 79.6104 363.251 79.6104 362.147 cv
79.6104 351.115 li
79.6104 350.01 80.506 349.115 81.6104 349.115 cv
134.318 349.115 li
134.318 353.115 li
83.6104 353.115 li
83.6104 360.147 li
134.318 360.147 li
134.318 364.147 li
cp
f
201.736 364.147 mo
146.576 364.147 li
146.576 360.147 li
199.736 360.147 li
199.736 353.115 li
146.576 353.115 li
146.576 349.115 li
201.736 349.115 li
202.841 349.115 203.736 350.01 203.736 351.115 cv
203.736 362.147 li
203.736 363.251 202.841 364.147 201.736 364.147 cv
cp
f
140.295 291.826 mo
138.103 291.826 136.318 293.61 136.318 295.802 cv
136.318 368.429 li
136.318 370.621 138.103 372.405 140.295 372.405 cv
140.601 372.405 li
142.793 372.405 144.576 370.621 144.576 368.429 cv
144.576 295.802 li
144.576 293.61 142.793 291.826 140.601 291.826 cv
140.295 291.826 li
cp
140.601 376.405 mo
140.295 376.405 li
135.897 376.405 132.318 372.827 132.318 368.429 cv
132.318 295.802 li
132.318 291.404 135.897 287.826 140.295 287.826 cv
140.601 287.826 li
144.998 287.826 148.576 291.404 148.576 295.802 cv
148.576 368.429 li
148.576 372.827 144.998 376.405 140.601 376.405 cv
cp
f
115.481 333.705 mo
111.481 333.705 li
111.481 311.941 li
115.481 311.941 li
115.481 333.705 li
cp
f
95.6554 418.057 mo
87.9405 362.421 li
87.8614 361.849 88.0343 361.27 88.4142 360.833 cv
88.794 360.397 89.3438 360.147 89.922 360.147 cv
135.545 360.147 li
135.545 364.147 li
92.2188 364.147 li
99.6183 417.508 li
95.6554 418.057 li
cp
f
188.073 418.794 mo
184.108 418.273 li
191.233 364.147 li
147.803 364.147 li
147.803 360.147 li
193.513 360.147 li
194.089 360.147 194.637 360.395 195.017 360.829 cv
195.397 361.261 195.57 361.837 195.495 362.408 cv
188.073 418.794 li
cp
f
382.115 217.826 mo
384.724 208.956 398.138 202.365 402.86 200.73 cv
421.852 194.158 443.054 202.707 452.165 220.637 cv
453.048 222.376 li
454.996 222.469 li
469.219 223.166 481.418 232.296 486.068 245.729 cv
490.015 257.12 487.802 269.538 480.152 278.945 cv
478.737 280.687 li
479.803 282.663 li
480.712 284.348 481.406 285.896 481.926 287.399 cv
484.701 295.407 484.191 304.016 480.486 311.639 cv
476.784 319.265 470.335 324.993 462.326 327.765 cv
451.556 331.502 439.514 329.113 430.927 321.535 cv
429.233 320.037 li
427.208 321.044 li
425.782 321.751 424.581 322.267 423.42 322.667 cv
417.06 324.875 408.304 326.808 401.941 325.043 cv
387.761 321.11 354.594 312.522 356.159 267.522 cv
382.115 217.826 li
cp
.103426 0 .0108949 0 cmyk
f
451.997 331.504 mo
443.885 331.504 435.881 328.574 429.604 323.035 cv
428.917 322.427 li
428.1 322.834 li
426.587 323.584 425.309 324.132 424.072 324.558 cv
417.343 326.896 410.2 327.056 403.418 325.023 cv
404.566 321.191 li
410.536 322.98 416.83 322.838 422.764 320.778 cv
423.839 320.408 424.967 319.923 426.319 319.252 cv
428.341 318.247 li
429.07 317.883 429.946 317.997 430.558 318.539 cv
432.252 320.037 li
440.301 327.141 451.572 329.378 461.671 325.875 cv
469.175 323.278 475.218 317.912 478.688 310.766 cv
482.158 303.623 482.637 295.557 480.036 288.054 cv
479.553 286.656 478.9 285.204 478.042 283.612 cv
476.977 281.636 li
476.594 280.925 476.676 280.053 477.185 279.426 cv
478.6 277.684 li
485.812 268.816 487.897 257.115 484.179 246.383 cv
479.797 233.727 468.304 225.124 454.899 224.467 cv
452.953 224.374 li
452.234 224.34 451.59 223.923 451.265 223.282 cv
450.382 221.542 li
441.724 204.504 421.573 196.371 403.515 202.62 cv
398.123 204.486 386.268 210.796 384.034 218.39 cv
380.196 217.261 li
383.084 207.444 397.414 200.498 402.206 198.84 cv
422.145 191.939 444.389 200.92 453.948 219.731 cv
454.305 220.434 li
455.091 220.471 li
470.14 221.209 483.039 230.867 487.958 245.075 cv
492.133 257.123 489.795 270.257 481.704 280.206 cv
481.131 280.913 li
481.564 281.713 li
482.525 283.497 483.262 285.143 483.816 286.746 cv
486.767 295.258 486.223 304.41 482.285 312.513 cv
478.35 320.62 471.493 326.708 462.981 329.655 cv
459.4 330.898 455.687 331.504 451.997 331.504 cv
cp
.528099 0 .0110475 0 cmyk
f
428.652 416.609 mo
424.652 416.609 li
424.652 235.565 li
428.652 235.565 li
428.652 416.609 li
cp
f
430.342 289.17 mo
428.988 289.17 427.624 289.039 426.263 288.769 cv
427.042 284.845 li
434.022 286.229 441.156 283.098 444.785 277.045 cv
448.264 271.243 447.834 263.685 443.716 258.24 cv
446.905 255.828 li
452.078 262.665 452.593 271.801 448.217 279.102 cv
444.431 285.417 437.572 289.17 430.342 289.17 cv
cp
f
428.4 370.544 mo
425.571 367.716 li
438.354 354.934 li
441.182 357.762 li
428.4 370.544 li
cp
f
410.867 270.036 mo
415.359 274.527 414.229 282.94 414.229 282.94 cv
414.229 282.94 405.816 284.07 401.324 279.579 cv
396.833 275.086 397.963 266.674 397.963 266.674 cv
397.963 266.674 406.376 265.543 410.867 270.036 cv
cp
0 0 0 0 cmyk
f
399.843 268.56 mo
399.79 270.973 400.084 275.509 402.738 278.164 cv
405.373 280.798 409.944 281.112 412.349 281.053 cv
412.402 278.641 412.108 274.104 409.453 271.45 cv
409.453 271.45 li
406.819 268.816 402.282 268.522 399.843 268.56 cv
cp
411.876 285.068 mo
408.715 285.068 403.402 284.484 399.91 280.993 cv
394.778 275.86 395.929 266.791 395.981 266.408 cv
396.101 265.515 396.804 264.812 397.696 264.692 cv
398.08 264.641 407.15 263.489 412.281 268.622 cv
412.281 268.622 li
412.281 268.622 li
417.414 273.753 416.263 282.823 416.211 283.206 cv
416.091 284.099 415.388 284.802 414.495 284.922 cv
414.372 284.939 413.361 285.068 411.876 285.068 cv
cp
.528099 0 .0110475 0 cmyk
f
189.685 101.997 mo
187.231 101.997 184.783 102.522 182.483 103.568 cv
178.245 105.495 175.012 108.955 173.378 113.313 cv
170.004 122.309 174.578 132.372 183.574 135.746 cv
192.568 139.121 202.634 134.545 206.008 125.549 cv
206.008 125.549 li
209.382 116.553 204.808 106.49 195.812 103.117 cv
193.82 102.37 191.75 101.997 189.685 101.997 cv
cp
189.669 140.856 mo
187.174 140.856 184.64 140.417 182.17 139.492 cv
176.812 137.482 172.557 133.506 170.189 128.296 cv
167.82 123.087 167.623 117.267 169.632 111.909 cv
171.642 106.55 175.617 102.295 180.827 99.9272 cv
186.037 97.559 191.858 97.3617 197.216 99.3705 cv
208.277 103.519 213.901 115.892 209.754 126.954 cv
209.754 126.954 li
206.531 135.544 198.346 140.856 189.669 140.856 cv
cp
f
202.242 92.852 mo
198.496 91.4477 li
200.77 85.3852 li
204.516 86.7895 li
202.242 92.852 li
cp
f
176.26 93.7328 mo
173.581 87.8383 li
177.224 86.184 li
179.902 92.0785 li
176.26 93.7328 li
cp
f
161.709 111.074 mo
155.647 108.8 li
157.051 105.054 li
163.113 107.328 li
161.709 111.074 li
cp
f
222.335 133.808 mo
216.273 131.535 li
217.677 127.789 li
223.739 130.062 li
222.335 133.808 li
cp
f
217.046 109.195 mo
215.39 105.554 li
221.284 102.874 li
222.941 106.515 li
217.046 109.195 li
cp
f
166.376 175.85 mo
87.9464 175.85 li
87.0597 175.85 86.2794 175.266 86.0284 174.415 cv
85.4435 172.435 85.1476 170.401 85.1476 168.371 cv
85.1476 156.593 94.7296 147.011 106.507 147.011 cv
108.602 147.011 110.656 147.312 112.639 147.908 cv
116.874 134.8 129.074 125.826 143.033 125.826 cv
156.483 125.826 168.63 134.468 173.127 147.033 cv
173.447 147.018 173.765 147.011 174.081 147.011 cv
182.878 147.011 196.382 152.963 198.863 166.197 cv
194.932 166.933 li
192.676 154.903 179.91 151.011 174.081 151.011 cv
173.394 151.011 172.695 151.053 171.946 151.139 cv
170.991 151.252 170.081 150.654 169.804 149.727 cv
166.284 138.009 155.275 129.826 143.033 129.826 cv
130.175 129.826 119.024 138.53 115.915 150.993 cv
115.775 151.558 115.393 152.035 114.871 152.296 cv
114.351 152.557 113.742 152.579 113.202 152.353 cv
111.074 151.462 108.821 151.011 106.507 151.011 cv
96.9347 151.011 89.1476 158.798 89.1476 168.371 cv
89.1476 169.533 89.2677 170.698 89.506 171.85 cv
166.376 171.85 li
166.376 175.85 li
cp
f
302.103 133.291 mo
299.506 133.291 297.394 135.404 297.394 138 cv
297.394 140.596 299.506 142.708 302.103 142.708 cv
304.698 142.708 306.811 140.596 306.811 138 cv
306.811 135.404 304.698 133.291 302.103 133.291 cv
cp
302.103 146.708 mo
297.301 146.708 293.394 142.802 293.394 138 cv
293.394 133.199 297.301 129.291 302.103 129.291 cv
306.904 129.291 310.811 133.199 310.811 138 cv
310.811 142.802 306.904 146.708 302.103 146.708 cv
cp
f
286.485 128.817 mo
283.036 126.789 li
286.992 120.057 294.299 115.874 302.103 115.874 cv
309.731 115.874 316.721 119.734 320.8 126.199 cv
317.417 128.333 li
314.074 123.037 308.35 119.874 302.103 119.874 cv
295.71 119.874 289.726 123.301 286.485 128.817 cv
cp
f
272.153 120.078 mo
268.724 118.019 li
275.725 106.351 288.515 99.103 302.103 99.103 cv
315.638 99.103 327.984 105.964 335.129 117.456 cv
331.733 119.568 li
325.322 109.258 314.246 103.103 302.103 103.103 cv
289.912 103.103 278.436 109.607 272.153 120.078 cv
cp
f
257.829 111.328 mo
254.403 109.261 li
264.578 92.3989 282.409 82.3325 302.103 82.3325 cv
321.518 82.3325 339.22 92.1908 349.454 108.704 cv
346.054 110.811 li
336.554 95.4828 320.124 86.3325 302.103 86.3325 cv
283.823 86.3325 267.273 95.6762 257.829 111.328 cv
cp
f
439.507 170.956 mo
373.768 170.956 li
373.768 166.956 li
437.588 166.956 li
437.604 166.614 437.618 166.327 437.631 166.079 cv
437.659 165.49 437.678 165.145 437.678 164.796 cv
437.678 157.562 431.792 151.676 424.558 151.676 cv
423.43 151.676 422.271 151.836 421.11 152.151 cv
420.57 152.298 419.99 152.212 419.516 151.911 cv
419.042 151.611 418.716 151.124 418.617 150.573 cv
416.797 140.365 407.94 132.956 397.558 132.956 cv
388.515 132.956 380.409 138.682 377.387 147.205 cv
377.198 147.736 376.794 148.163 376.274 148.381 cv
375.752 148.597 375.163 148.584 374.653 148.347 cv
372.232 147.211 369.642 146.636 366.958 146.636 cv
361.406 146.636 349.119 151.372 348.767 165.441 cv
344.769 165.341 li
345.193 148.353 360.185 142.636 366.958 142.636 cv
369.524 142.636 372.018 143.067 374.4 143.92 cv
378.472 134.89 387.529 128.956 397.558 128.956 cv
409.188 128.956 419.206 136.791 422.112 147.86 cv
422.933 147.738 423.75 147.676 424.558 147.676 cv
433.998 147.676 441.678 155.356 441.678 164.796 cv
441.678 165.199 441.659 165.597 441.626 166.277 cv
441.596 166.878 441.555 167.718 441.506 169.031 cv
441.466 170.106 440.582 170.956 439.507 170.956 cv
cp
f
807.184 182.421 mo
807.184 200.251 821.731 214.706 839.674 214.706 cv
857.618 214.706 872.164 200.251 872.164 182.421 cv
872.164 164.59 857.618 150.135 839.674 150.135 cv
821.731 150.135 807.184 164.59 807.184 182.421 cv
cp
.162478 0 .0144961 0 cmyk
f
839.674 152.135 mo
822.861 152.135 809.184 165.721 809.184 182.421 cv
809.184 199.121 822.861 212.706 839.674 212.706 cv
856.486 212.706 870.164 199.121 870.164 182.421 cv
870.164 165.721 856.486 152.135 839.674 152.135 cv
cp
839.674 216.706 mo
820.656 216.706 805.184 201.327 805.184 182.421 cv
805.184 163.516 820.656 148.135 839.674 148.135 cv
858.691 148.135 874.164 163.516 874.164 182.421 cv
874.164 201.327 858.691 216.706 839.674 216.706 cv
cp
.619776 .0742504 0 0 cmyk
f
905.86 115.698 mo
903.919 115.623 901.946 115.617 899.999 115.675 cv
899.876 111.677 li
901.916 111.614 903.98 111.624 906.013 111.7 cv
905.86 115.698 li
cp
888.342 116.837 mo
887.668 112.894 li
889.668 112.552 891.716 112.277 893.752 112.074 cv
894.148 116.054 li
892.204 116.247 890.25 116.511 888.342 116.837 cv
cp
917.502 116.946 mo
915.6 116.607 913.648 116.329 911.701 116.119 cv
912.131 112.142 li
914.168 112.362 916.212 112.653 918.203 113.008 cv
917.502 116.946 li
cp
928.856 119.798 mo
927.006 119.194 925.112 118.647 923.23 118.173 cv
924.204 114.294 li
926.178 114.789 928.161 115.363 930.1 115.997 cv
928.856 119.798 li
cp
877.367 120.342 mo
875.807 116.659 li
877.762 115.83 879.689 115.086 881.534 114.446 cv
882.845 118.225 li
881.084 118.836 879.24 119.548 877.367 120.342 cv
cp
939.694 124.205 mo
937.946 123.348 936.149 122.543 934.356 121.814 cv
935.861 118.109 li
937.741 118.872 939.624 119.715 941.456 120.614 cv
939.694 124.205 li
cp
866.819 125.561 mo
864.839 122.084 li
866.594 121.085 868.412 120.12 870.242 119.213 cv
872.018 122.797 li
870.256 123.67 868.507 124.599 866.819 125.561 cv
cp
949.816 130.075 mo
948.206 128.985 946.537 127.938 944.857 126.964 cv
946.863 123.503 li
948.624 124.524 950.371 125.621 952.059 126.762 cv
949.816 130.075 li
cp
856.982 131.984 mo
854.587 128.781 li
856.2 127.574 857.891 126.393 859.611 125.271 cv
861.797 128.622 li
860.148 129.698 858.527 130.829 856.982 131.984 cv
cp
959.035 137.291 mo
957.593 135.992 956.084 134.724 954.55 133.523 cv
957.017 130.373 li
958.622 131.631 960.202 132.958 961.713 134.319 cv
959.035 137.291 li
cp
848.103 139.623 mo
845.284 136.786 li
846.715 135.364 848.234 133.962 849.798 132.618 cv
852.405 135.653 li
850.913 136.933 849.466 138.27 848.103 139.623 cv
cp
967.177 145.711 mo
965.924 144.223 964.604 142.759 963.252 141.36 cv
966.127 138.58 li
967.543 140.044 968.926 141.578 970.237 143.137 cv
967.177 145.711 li
cp
974.081 155.177 mo
973.05 153.537 971.943 151.904 970.793 150.325 cv
974.025 147.969 li
975.231 149.622 976.389 151.33 977.468 153.05 cv
974.081 155.177 li
cp
979.609 165.509 mo
978.815 163.739 977.947 161.968 977.026 160.247 cv
980.554 158.361 li
981.518 160.163 982.429 162.018 983.26 163.874 cv
979.609 165.509 li
cp
983.642 176.508 mo
983.102 174.642 982.488 172.77 981.818 170.942 cv
985.574 169.565 li
986.276 171.48 986.919 173.442 987.483 175.397 cv
983.642 176.508 li
cp
986.1 187.954 mo
985.823 186.022 985.477 184.081 985.07 182.187 cv
988.981 181.347 li
989.407 183.331 989.77 185.365 990.059 187.389 cv
986.1 187.954 li
cp
986.948 199.632 mo
986.94 197.681 986.865 195.711 986.724 193.778 cv
990.714 193.487 li
990.861 195.512 990.94 197.575 990.948 199.617 cv
986.948 199.632 li
cp
990.158 211.856 mo
986.193 211.323 li
986.452 209.399 986.647 207.437 986.773 205.491 cv
990.765 205.748 li
990.633 207.786 990.429 209.84 990.158 211.856 cv
cp
987.682 223.863 mo
983.83 222.783 li
984.357 220.906 984.821 218.992 985.211 217.095 cv
989.129 217.9 li
988.72 219.889 988.233 221.895 987.682 223.863 cv
cp
983.555 235.41 mo
979.891 233.804 li
980.673 232.02 981.4 230.189 982.054 228.363 cv
985.819 229.708 li
985.136 231.622 984.374 233.54 983.555 235.41 cv
cp
977.861 246.271 mo
974.455 244.173 li
975.478 242.514 976.452 240.801 977.354 239.082 cv
980.897 240.94 li
979.952 242.741 978.932 244.534 977.861 246.271 cv
cp
970.717 256.241 mo
967.635 253.692 li
968.871 252.197 970.074 250.635 971.211 249.05 cv
974.461 251.38 li
973.272 253.04 972.012 254.675 970.717 256.241 cv
cp
962.267 265.131 mo
959.564 262.182 li
961.003 260.863 962.409 259.482 963.744 258.077 cv
966.645 260.832 li
965.246 262.303 963.773 263.75 962.267 265.131 cv
cp
f
937.876 164.905 mo
940.88 180.497 955.954 190.701 971.545 187.697 cv
987.137 184.693 997.341 169.619 994.337 154.027 cv
991.333 138.436 976.259 128.232 960.668 131.236 cv
945.076 134.24 934.872 149.314 937.876 164.905 cv
cp
.162478 0 .0144961 0 cmyk
f
979.73 162.68 mo
978.455 156.066 972.422 155.938 965.831 156.402 cv
961.836 156.7 958.739 156.709 958.214 153.978 cv
957.725 151.441 959.905 149.512 964.196 148.685 cv
966.821 148.18 969.813 148.737 971.469 150.037 cv
971.827 150.317 li
975.545 147.687 li
975.079 147.177 li
973.011 144.912 970.183 143.933 966.226 144.102 cv
966.04 144.11 li
965.372 140.64 li
960.571 141.565 li
961.241 145.04 li
961.057 145.098 li
958.912 145.783 952.011 148.512 953.248 154.935 cv
954.471 161.281 959.871 161.361 966.267 160.845 cv
971.439 160.446 974.07 161.354 974.52 163.684 cv
975.065 166.52 972.596 168.824 968.073 169.696 cv
965.303 170.229 961.376 169.778 959.306 167.528 cv
958.954 167.146 li
954.854 169.851 li
955.279 170.374 li
958.657 174.524 963.878 174.654 966.689 174.359 cv
966.886 174.338 li
967.617 178.142 li
972.417 177.217 li
971.647 173.208 li
971.841 173.158 li
976.531 171.902 980.788 168.175 979.73 162.68 cv
cp
.619776 .0742504 0 0 cmyk
f
939.106 164.675 mo
941.932 179.343 956.16 188.977 970.832 186.152 cv
985.499 183.326 995.133 169.093 992.308 154.425 cv
989.482 139.759 975.25 130.124 960.581 132.95 cv
945.914 135.776 936.28 150.008 939.106 164.676 cv
939.106 164.675 li
cp
965.696 190.644 mo
951.098 190.644 938.04 180.288 935.178 165.433 cv
935.178 165.432 li
931.936 148.599 942.991 132.266 959.824 129.022 cv
976.669 125.782 992.992 136.836 996.235 153.668 cv
999.478 170.502 988.422 186.835 971.589 190.08 cv
969.61 190.46 967.64 190.644 965.696 190.644 cv
cp
f
860.643 317.045 mo
1018.56 316.553 li
1018.82 400.62 li
860.904 401.112 li
860.643 317.045 li
cp
.162478 0 .0144961 0 cmyk
f
882.82 399.98 mo
882.782 387.873 872.939 378.091 860.833 378.128 cv
860.904 401.112 li
882.77 401.043 li
882.786 400.689 882.821 400.338 882.82 399.98 cv
cp
.00781262 0 0 0 cmyk
f
1018.75 377.647 mo
1018.68 377.647 1018.61 377.637 1018.53 377.637 cv
1006.43 377.674 996.645 387.519 996.683 399.624 cv
996.684 399.984 996.722 400.333 996.74 400.689 cv
1018.82 400.62 li
1018.75 377.647 li
cp
f
860.712 339.395 mo
860.908 339.4 861.1 339.423 861.297 339.423 cv
873.402 339.385 883.186 329.54 883.148 317.435 cv
883.147 317.28 883.126 317.129 883.123 316.975 cv
860.643 317.045 li
860.712 339.395 li
cp
f
997.01 317.081 mo
997.047 329.063 1006.7 338.754 1018.63 338.913 cv
1018.56 316.553 li
997.031 316.62 li
997.028 316.775 997.009 316.925 997.01 317.081 cv
cp
f
907.879 359.516 mo
907.823 341.614 922.291 327.055 940.194 326.999 cv
958.097 326.944 972.655 341.412 972.711 359.314 cv
972.767 377.217 958.299 391.775 940.397 391.831 cv
922.493 391.887 907.936 377.419 907.879 359.516 cv
cp
0 0 0 0 cmyk
f
885.128 359.002 mo
885.119 356.153 887.422 353.835 890.273 353.827 cv
893.122 353.817 895.44 356.121 895.448 358.97 cv
895.458 361.821 893.154 364.138 890.305 364.147 cv
887.454 364.156 885.137 361.853 885.128 359.002 cv
cp
f
985.213 358.691 mo
985.204 355.84 987.507 353.523 990.357 353.514 cv
993.207 353.505 995.524 355.808 995.533 358.659 cv
995.542 361.508 993.239 363.827 990.39 363.835 cv
987.539 363.844 985.222 361.54 985.213 358.691 cv
cp
f
862.889 319.765 mo
863.139 399.779 li
1016.21 399.3 li
1015.96 319.288 li
862.889 319.765 li
cp
861.145 403.785 mo
860.616 403.785 860.109 403.576 859.734 403.204 cv
859.358 402.829 859.147 402.322 859.145 401.79 cv
858.883 317.777 li
858.881 317.247 859.09 316.738 859.464 316.361 cv
859.838 315.985 860.346 315.773 860.877 315.771 cv
1017.94 315.282 li
1017.95 315.282 li
1019.05 315.282 1019.95 316.173 1019.95 317.276 cv
1020.21 401.288 li
1020.21 401.819 1020.01 402.328 1019.63 402.704 cv
1019.26 403.08 1018.75 403.292 1018.22 403.294 cv
861.15 403.785 li
861.145 403.785 li
cp
.619776 .0742504 0 0 cmyk
f
863.08 380.893 mo
863.139 399.779 li
881.037 399.722 li
880.804 394.916 878.877 390.427 875.507 386.92 cv
872.164 383.443 867.81 381.343 863.08 380.893 cv
cp
861.145 403.785 mo
860.616 403.785 860.109 403.576 859.734 403.204 cv
859.358 402.829 859.147 402.322 859.145 401.79 cv
859.073 378.807 li
859.069 377.703 859.963 376.805 861.067 376.801 cv
861.093 376.801 861.119 376.801 861.145 376.801 cv
867.714 376.801 873.835 379.409 878.391 384.149 cv
882.961 388.905 885.322 395.163 885.038 401.773 cv
885.017 402.273 884.809 402.747 884.454 403.101 cv
884.446 403.11 884.428 403.127 884.419 403.136 cv
884.042 403.547 883.575 403.714 883.017 403.716 cv
861.15 403.785 li
861.145 403.785 li
cp
f
1016.15 380.394 mo
1011.37 380.826 1006.97 382.937 1003.6 386.453 cv
1000.22 389.987 998.297 394.507 998.089 399.341 cv
1001.71 399.34 1009.75 399.32 1016.21 399.3 cv
1016.15 380.394 li
cp
1001.77 403.335 mo
995.289 403.335 995.199 403.247 994.707 402.772 cv
994.342 402.418 994.125 401.94 994.1 401.432 cv
993.773 394.783 996.123 388.48 1000.72 383.685 cv
1005.31 378.889 1011.49 376.277 1018.14 376.312 cv
1018.67 376.315 1019.17 376.526 1019.54 376.898 cv
1019.55 376.908 li
1019.93 377.281 1020.14 377.788 1020.14 378.316 cv
1020.21 401.288 li
1020.21 401.819 1020.01 402.328 1019.63 402.704 cv
1019.26 403.08 1018.75 403.292 1018.22 403.294 cv
1007.17 403.326 li
1005 403.33 1003.22 403.335 1001.77 403.335 cv
cp
f
862.889 319.765 mo
862.946 338.096 li
867.716 337.751 872.138 335.735 875.561 332.308 cv
878.977 328.888 880.988 324.475 881.334 319.718 cv
877.335 319.723 868.294 319.748 862.889 319.765 cv
cp
861.474 342.15 mo
861.293 342.15 861.112 342.148 860.931 342.144 cv
860.393 342.131 859.883 341.904 859.516 341.512 cv
859.158 341.141 858.955 340.644 858.953 340.127 cv
858.883 317.777 li
858.881 317.247 859.09 316.738 859.464 316.361 cv
859.838 315.985 860.346 315.773 860.877 315.771 cv
879.855 315.72 li
884.214 315.712 884.202 315.712 884.796 316.306 cv
885.16 316.669 885.369 317.16 885.381 317.674 cv
885.532 324.271 883.049 330.472 878.391 335.135 cv
873.859 339.67 867.87 342.15 861.474 342.15 cv
cp
f
998.461 319.342 mo
998.826 323.948 1000.76 328.241 1004.01 331.594 cv
1007.25 334.932 1011.46 336.993 1016.01 337.513 cv
1015.96 319.288 li
998.461 319.342 li
cp
1018.02 341.642 mo
1018.01 341.642 1018 341.642 1017.99 341.642 cv
1011.59 341.556 1005.61 338.978 1001.14 334.38 cv
996.69 329.791 994.296 323.738 994.401 317.334 cv
994.409 316.862 994.585 316.407 994.897 316.05 cv
994.938 316.003 994.993 315.946 995.039 315.902 cv
995.409 315.552 995.905 315.351 996.414 315.349 cv
1017.94 315.282 li
1017.95 315.282 li
1019.05 315.282 1019.95 316.173 1019.95 317.276 cv
1020.02 339.636 li
1020.02 340.172 1019.81 340.686 1019.43 341.064 cv
1019.05 341.434 1018.55 341.642 1018.02 341.642 cv
cp
f
943.898 328.851 mo
942.768 328.721 941.611 328.656 940.461 328.656 cv
940.358 328.656 li
939.676 328.658 938.975 328.684 938.28 328.734 cv
937.993 324.744 li
938.779 324.687 939.573 324.658 940.354 324.656 cv
940.461 324.656 li
941.763 324.656 943.072 324.73 944.353 324.876 cv
943.898 328.851 li
cp
927.48 331.604 mo
925.743 328 li
927.657 327.079 929.667 326.335 931.716 325.791 cv
932.743 329.657 li
930.937 330.136 929.166 330.791 927.48 331.604 cv
cp
954.566 332.178 mo
952.912 331.294 951.17 330.565 949.389 330.009 cv
950.58 326.191 li
952.601 326.821 954.576 327.649 956.451 328.651 cv
954.566 332.178 li
cp
918.484 338.249 mo
915.551 335.529 li
916.994 333.973 918.59 332.546 920.294 331.288 cv
922.671 334.504 li
921.166 335.616 919.758 336.875 918.484 338.249 cv
cp
963.275 339.198 mo
962.061 337.771 960.705 336.453 959.25 335.279 cv
961.76 332.165 li
963.409 333.495 964.943 334.988 966.32 336.602 cv
963.275 339.198 li
cp
912.539 347.719 mo
908.813 346.264 li
909.583 344.29 910.547 342.377 911.678 340.579 cv
915.065 342.705 li
914.067 344.292 913.218 345.979 912.539 347.719 cv
cp
968.812 348.907 mo
968.207 347.139 967.43 345.418 966.502 343.793 cv
969.977 341.811 li
971.028 343.654 971.91 345.606 972.597 347.612 cv
968.812 348.907 li
cp
910.497 358.716 mo
906.497 358.716 li
906.497 358.614 li
906.497 356.525 906.69 354.429 907.067 352.386 cv
911.001 353.115 li
910.667 354.918 910.497 356.768 910.497 358.614 cv
910.497 358.716 li
cp
974.386 360.156 mo
970.39 359.978 li
970.41 359.527 970.42 359.074 970.42 358.619 cv
970.42 358.517 li
970.415 357.128 970.315 355.73 970.12 354.365 cv
974.081 353.802 li
974.301 355.348 974.415 356.932 974.42 358.51 cv
974.42 358.619 li
974.42 359.134 974.408 359.646 974.386 360.156 cv
cp
907.824 368.051 mo
907.238 366.02 906.841 363.915 906.644 361.797 cv
910.626 361.426 li
910.801 363.295 911.15 365.151 911.668 366.942 cv
907.824 368.051 li
cp
971.465 372.491 mo
967.815 370.854 li
968.58 369.146 969.187 367.357 969.616 365.538 cv
973.509 366.458 li
973.022 368.522 972.334 370.551 971.465 372.491 cv
cp
913.561 379.354 mo
912.263 377.672 911.118 375.863 910.16 373.973 cv
913.727 372.163 li
914.572 373.829 915.582 375.426 916.727 376.909 cv
913.561 379.354 li
cp
964.217 382.885 mo
961.418 380.026 li
962.757 378.716 963.978 377.274 965.048 375.74 cv
968.329 378.029 li
967.116 379.767 965.732 381.401 964.217 382.885 cv
cp
923.032 387.772 mo
921.215 386.684 919.488 385.416 917.901 384.005 cv
920.558 381.015 li
921.96 382.261 923.483 383.38 925.087 384.34 cv
923.032 387.772 li
cp
953.67 389.913 mo
952.113 386.227 li
953.833 385.501 955.496 384.606 957.056 383.566 cv
959.274 386.894 li
957.506 388.073 955.62 389.088 953.67 389.913 cv
cp
934.935 392.131 mo
932.84 391.788 930.769 391.246 928.777 390.516 cv
930.152 386.76 li
931.907 387.403 933.733 387.881 935.581 388.184 cv
934.935 392.131 li
cp
941.279 392.568 mo
941.186 388.57 li
943.065 388.525 944.94 388.305 946.762 387.914 cv
947.6 391.827 li
945.534 392.269 943.408 392.518 941.279 392.568 cv
cp
f
890.236 356.207 mo
890.232 356.207 890.23 356.207 890.23 356.207 cv
889.296 356.21 888.423 356.576 887.768 357.235 cv
887.113 357.894 886.754 358.768 886.757 359.697 cv
886.763 361.612 888.322 363.165 890.235 363.165 cv
890.235 363.165 890.242 363.165 890.246 363.165 cv
891.177 363.163 892.049 362.798 892.704 362.139 cv
893.358 361.48 893.718 360.605 893.715 359.676 cv
893.709 357.761 892.149 356.207 890.236 356.207 cv
cp
890.234 367.165 mo
886.122 367.165 882.771 363.827 882.757 359.71 cv
882.75 357.712 883.523 355.831 884.931 354.414 cv
886.339 352.997 888.215 352.214 890.212 352.207 cv
890.221 352.207 890.229 352.207 890.236 352.207 cv
894.35 352.207 897.701 355.546 897.715 359.663 cv
897.722 361.661 896.949 363.541 895.541 364.958 cv
894.133 366.376 892.257 367.16 890.259 367.165 cv
890.251 367.165 890.242 367.165 890.234 367.165 cv
cp
f
990.685 355.894 mo
990.682 355.894 990.679 355.894 990.679 355.894 cv
989.746 355.897 988.873 356.262 988.218 356.921 cv
987.564 357.58 987.204 358.454 987.207 359.383 cv
987.213 361.298 988.773 362.853 990.688 362.853 cv
990.697 362.853 li
992.615 362.847 994.171 361.281 994.165 359.363 cv
994.159 357.448 992.599 355.894 990.685 355.894 cv
cp
990.688 366.853 mo
986.573 366.853 983.221 363.513 983.207 359.397 cv
983.2 357.399 983.973 355.518 985.381 354.101 cv
986.789 352.684 988.665 351.901 990.662 351.894 cv
990.67 351.894 990.678 351.894 990.685 351.894 cv
994.799 351.894 998.151 355.234 998.165 359.349 cv
998.179 363.474 994.834 366.839 990.71 366.853 cv
990.702 366.853 990.694 366.853 990.688 366.853 cv
cp
f
807.937 370.445 mo
686.157 370.445 li
683.685 370.445 681.68 368.44 681.68 365.967 cv
681.68 286.872 li
681.68 284.399 683.685 282.395 686.157 282.395 cv
807.937 282.395 li
810.409 282.395 812.414 284.399 812.414 286.872 cv
812.414 365.967 li
812.414 368.44 810.409 370.445 807.937 370.445 cv
cp
0 0 0 0 cmyk
f
685.771 283.964 mo
684.411 283.964 683.306 285.07 683.306 286.429 cv
683.306 365.176 li
683.306 366.536 684.411 367.641 685.771 367.641 cv
807.423 367.641 li
808.782 367.641 809.888 366.536 809.888 365.176 cv
809.888 286.429 li
809.888 285.07 808.782 283.964 807.423 283.964 cv
685.771 283.964 li
cp
807.423 371.641 mo
685.771 371.641 li
682.206 371.641 679.306 368.741 679.306 365.176 cv
679.306 286.429 li
679.306 282.865 682.206 279.964 685.771 279.964 cv
807.423 279.964 li
810.987 279.964 813.888 282.865 813.888 286.429 cv
813.888 365.176 li
813.888 368.741 810.987 371.641 807.423 371.641 cv
cp
.528099 0 .0110475 0 cmyk
f
714.884 302.619 mo
681.306 302.619 li
681.306 298.619 li
714.884 298.619 li
714.884 302.619 li
cp
f
775.603 401.785 mo
653.822 401.785 li
651.35 401.785 649.346 399.78 649.346 397.307 cv
649.346 318.211 li
649.346 315.739 651.35 313.735 653.822 313.735 cv
775.603 313.735 li
778.075 313.735 780.079 315.739 780.079 318.211 cv
780.079 397.307 li
780.079 399.78 778.075 401.785 775.603 401.785 cv
cp
.162478 0 .0144961 0 cmyk
f
698.57 354.029 mo
667.031 354.029 li
665.383 354.029 664.047 352.692 664.047 351.043 cv
664.047 331.892 li
664.047 330.244 665.383 328.907 667.031 328.907 cv
698.57 328.907 li
700.219 328.907 701.555 330.244 701.555 331.892 cv
701.555 351.043 li
701.555 352.692 700.219 354.029 698.57 354.029 cv
cp
0 0 0 0 cmyk
f
654.058 315.677 mo
652.698 315.677 651.593 316.783 651.593 318.142 cv
651.593 396.889 li
651.593 398.248 652.698 399.354 654.058 399.354 cv
775.71 399.354 li
777.069 399.354 778.175 398.248 778.175 396.889 cv
778.175 318.142 li
778.175 316.783 777.069 315.677 775.71 315.677 cv
654.058 315.677 li
cp
775.71 403.354 mo
654.058 403.354 li
650.493 403.354 647.593 400.454 647.593 396.889 cv
647.593 318.142 li
647.593 314.578 650.493 311.677 654.058 311.677 cv
775.71 311.677 li
779.274 311.677 782.175 314.578 782.175 318.142 cv
782.175 396.889 li
782.175 400.454 779.274 403.354 775.71 403.354 cv
cp
.528099 0 .0110475 0 cmyk
f
667.441 330.601 mo
666.932 330.601 666.517 331.016 666.517 331.526 cv
666.517 349.927 li
666.517 350.437 666.932 350.852 667.441 350.852 cv
698.901 350.852 li
699.411 350.852 699.826 350.437 699.826 349.927 cv
699.826 331.526 li
699.826 331.016 699.411 330.601 698.901 330.601 cv
667.441 330.601 li
cp
698.901 354.852 mo
667.441 354.852 li
664.726 354.852 662.517 352.643 662.517 349.927 cv
662.517 331.526 li
662.517 328.81 664.726 326.601 667.441 326.601 cv
698.901 326.601 li
701.617 326.601 703.826 328.81 703.826 331.526 cv
703.826 349.927 li
703.826 352.643 701.617 354.852 698.901 354.852 cv
cp
f
677.709 350.987 mo
673.709 350.987 li
673.709 328.907 li
677.709 328.907 li
677.709 350.987 li
cp
f
690.768 350.987 mo
686.768 350.987 li
686.768 336.595 li
690.768 336.595 li
690.768 350.987 li
cp
f
701.826 345.525 mo
688.768 345.525 li
688.768 341.525 li
701.826 341.525 li
701.826 345.525 li
cp
f
677.575 341.793 mo
664.517 341.793 li
664.517 337.793 li
677.575 337.793 li
677.575 341.793 li
cp
f
680.201 268.601 mo
684.329 268.601 684.259 270.876 688.387 270.876 cv
692.513 270.876 692.513 268.601 696.638 268.601 cv
700.766 268.601 700.766 270.876 704.894 270.876 cv
709.023 270.876 709.023 268.601 713.152 268.601 cv
717.281 268.601 717.281 270.876 721.411 270.876 cv
725.541 270.876 725.541 268.601 729.67 268.601 cv
733.801 268.601 733.801 270.876 737.932 270.876 cv
742.06 270.876 742.06 268.601 746.188 268.601 cv
750.32 268.601 750.32 270.876 754.452 270.876 cv
758.587 270.876 758.587 268.601 762.722 268.601 cv
771.225 269.43 li
771.225 132.07 li
771.225 129.774 769.363 127.913 767.066 127.913 cv
675.649 127.913 li
680.201 134.447 li
680.201 268.601 li
cp
.162478 0 .0144961 0 cmyk
f
669.842 126.49 mo
670.678 126.49 li
675.787 126.49 679.947 130.594 680.201 135.751 cv
680.201 144.979 li
676.806 144.979 li
678.353 144.979 679.32 144.652 680.142 144.243 cv
679.32 144.652 678.353 144.979 676.806 144.979 cv
672.678 144.979 672.678 142.651 668.55 142.651 cv
664.419 142.651 664.419 144.979 660.29 144.979 cv
660.294 136.247 li
660.294 130.859 664.568 126.49 669.842 126.49 cv
cp
f
774.647 261.072 mo
770.647 261.072 li
770.647 136.028 li
770.647 131.872 767.265 128.49 763.108 128.49 cv
671.668 128.49 li
671.668 124.49 li
763.108 124.49 li
769.471 124.49 774.647 129.665 774.647 136.028 cv
774.647 261.072 li
cp
.528099 0 .0110475 0 cmyk
f
668.537 140.919 mo
671.113 140.919 672.507 141.688 673.626 142.306 cv
674.562 142.822 675.237 143.195 676.784 143.195 cv
677.359 143.195 677.813 143.143 678.201 143.053 cv
678.201 136.028 li
678.201 131.872 674.819 128.49 670.663 128.49 cv
669.828 128.49 li
665.672 128.49 662.29 131.876 662.29 136.038 cv
662.286 142.876 li
662.686 142.725 663.041 142.529 663.445 142.306 cv
664.565 141.688 665.959 140.919 668.537 140.919 cv
cp
754.452 272.876 mo
751.871 272.876 750.476 272.108 749.355 271.491 cv
748.417 270.974 747.739 270.601 746.188 270.601 cv
744.639 270.601 743.962 270.974 743.025 271.491 cv
741.904 272.108 740.511 272.876 737.932 272.876 cv
735.352 272.876 733.957 272.108 732.836 271.491 cv
731.898 270.974 731.221 270.601 729.67 270.601 cv
728.119 270.601 727.442 270.974 726.505 271.491 cv
725.385 272.108 723.99 272.876 721.411 272.876 cv
718.831 272.876 717.437 272.108 716.316 271.491 cv
715.379 270.974 714.702 270.601 713.152 270.601 cv
711.602 270.601 710.925 270.974 709.987 271.491 cv
708.867 272.108 707.473 272.876 704.894 272.876 cv
702.315 272.876 700.921 272.108 699.8 271.491 cv
698.863 270.974 698.187 270.601 696.638 270.601 cv
695.09 270.601 694.414 270.974 693.479 271.49 cv
692.358 272.108 690.965 272.876 688.387 272.876 cv
685.8 272.876 684.423 272.104 683.315 271.483 cv
682.402 270.971 681.742 270.601 680.201 270.601 cv
679.097 270.601 678.201 269.706 678.201 268.601 cv
678.201 147.109 li
677.774 147.163 677.305 147.195 676.784 147.195 cv
674.207 147.195 672.814 146.426 671.693 145.808 cv
670.759 145.292 670.083 144.919 668.537 144.919 cv
666.989 144.919 666.313 145.292 665.377 145.808 cv
664.257 146.426 662.863 147.195 660.285 147.195 cv
659.755 147.195 659.246 146.984 658.87 146.609 cv
658.495 146.233 658.285 145.724 658.285 145.194 cv
658.29 136.038 li
658.29 129.67 663.466 124.49 669.828 124.49 cv
670.663 124.49 li
677.025 124.49 682.201 129.665 682.201 136.028 cv
682.201 266.78 li
683.578 267.044 684.492 267.557 685.273 267.995 cv
686.186 268.506 686.846 268.876 688.387 268.876 cv
689.935 268.876 690.611 268.503 691.547 267.988 cv
692.667 267.37 694.061 266.601 696.638 266.601 cv
699.217 266.601 700.61 267.37 701.732 267.987 cv
702.668 268.503 703.345 268.876 704.894 268.876 cv
706.443 268.876 707.12 268.503 708.058 267.987 cv
709.178 267.37 710.572 266.601 713.152 266.601 cv
715.732 266.601 717.126 267.37 718.246 267.987 cv
719.184 268.503 719.86 268.876 721.411 268.876 cv
722.961 268.876 723.638 268.503 724.575 267.987 cv
725.695 267.37 727.09 266.601 729.67 266.601 cv
732.25 266.601 733.645 267.37 734.766 267.987 cv
735.703 268.503 736.381 268.876 737.932 268.876 cv
739.481 268.876 740.157 268.503 741.094 267.987 cv
742.215 267.37 743.608 266.601 746.188 266.601 cv
748.768 266.601 750.163 267.37 751.284 267.987 cv
752.222 268.503 752.899 268.876 754.452 268.876 cv
756.006 268.876 756.684 268.503 757.623 267.987 cv
758.744 267.37 760.141 266.601 762.722 266.601 cv
762.722 270.601 li
761.168 270.601 760.49 270.974 759.551 271.491 cv
758.43 272.108 757.033 272.876 754.452 272.876 cv
cp
f
727.276 161.605 mo
722.946 161.075 719.362 160.375 719.362 157.181 cv
719.362 153.073 724.194 152.459 727.075 152.459 cv
730.052 152.459 733.323 153.804 734.854 155.658 cv
735.351 156.259 li
740.647 153.737 li
740.1 152.798 li
738.194 149.526 735.137 147.66 730.479 146.925 cv
730.479 142.557 li
724.211 142.557 li
724.211 146.923 li
721.539 147.26 712.899 148.994 712.899 157.181 cv
712.899 165.304 718.894 166.642 726.724 167.547 cv
732.562 168.253 735.281 169.865 735.281 172.619 cv
735.281 175.997 732.063 178.096 726.88 178.096 cv
723.681 178.096 719.411 176.69 717.595 173.602 cv
717.146 172.838 li
711.362 175.357 li
711.846 176.304 li
714.845 182.172 720.872 183.569 724.211 183.877 cv
724.211 188.646 li
730.479 188.646 li
730.479 183.63 li
736.232 183.188 742.032 179.614 742.032 172.619 cv
742.032 163.474 733.855 162.438 727.276 161.605 cv
cp
.619776 .0742504 0 0 cmyk
f
755.58 213.554 mo
717.18 213.554 li
717.18 209.554 li
755.58 209.554 li
755.58 213.554 li
cp
.528099 0 .0110475 0 cmyk
f
708.646 213.554 mo
695.846 213.554 li
695.846 209.554 li
708.646 209.554 li
708.646 213.554 li
cp
f
755.58 231.779 mo
717.18 231.779 li
717.18 227.779 li
755.58 227.779 li
755.58 231.779 li
cp
f
708.646 231.779 mo
695.846 231.779 li
695.846 227.779 li
708.646 227.779 li
708.646 231.779 li
cp
f
793.482 105.542 mo
795.224 111.503 801.468 114.923 807.429 113.181 cv
813.39 111.439 816.81 105.194 815.067 99.2328 cv
813.325 93.2719 807.081 89.852 801.12 91.5942 cv
795.159 93.3364 791.739 99.5815 793.482 105.542 cv
cp
.103426 0 .0108949 0 cmyk
f
804.287 93.1381 mo
803.417 93.1381 802.54 93.2631 801.682 93.5141 cv
799.311 94.2065 797.353 95.7807 796.166 97.9467 cv
794.981 100.113 794.708 102.611 795.401 104.981 cv
796.094 107.352 797.668 109.31 799.834 110.497 cv
801.998 111.682 804.496 111.954 806.867 111.261 cv
809.238 110.569 811.196 108.995 812.383 106.829 cv
813.568 104.663 813.841 102.164 813.148 99.7944 cv
812.455 97.4233 810.881 95.4653 808.715 94.2787 cv
807.335 93.5229 805.819 93.1381 804.287 93.1381 cv
cp
804.256 115.639 mo
802.062 115.639 799.891 115.088 797.912 114.004 cv
794.81 112.305 792.555 109.499 791.562 106.104 cv
790.569 102.707 790.959 99.1283 792.658 96.0258 cv
794.357 92.9223 797.163 90.6674 800.559 89.6742 cv
803.956 88.6821 807.533 89.0698 810.637 90.7709 cv
813.739 92.4701 815.994 95.2758 816.987 98.6713 cv
817.98 102.068 817.59 105.647 815.891 108.749 cv
814.191 111.853 811.386 114.108 807.99 115.101 cv
806.759 115.46 805.503 115.639 804.256 115.639 cv
cp
.528099 0 .0110475 0 cmyk
f
368.028 183.913 mo
174.985 183.913 li
170.374 183.913 166.637 180.175 166.637 175.565 cv
166.637 170.955 170.374 167.217 174.985 167.217 cv
368.028 167.217 li
372.639 167.217 376.376 170.955 376.376 175.565 cv
376.376 180.175 372.639 183.913 368.028 183.913 cv
cp
.0899367 .622797 0 0 cmyk
ef
380.342 419.603 mo
168.342 419.603 li
168.342 251.603 li
380.342 251.603 li
380.342 419.603 li
cp
0 0 0 0 cmyk
f
361.342 373.603 mo
284.342 373.603 li
284.342 367.603 li
361.342 367.603 li
361.342 373.603 li
cp
.0705577 .0231632 0 0 cmyk
f
351.342 366.603 mo
292.342 366.603 li
292.342 326.603 li
351.342 326.603 li
351.342 366.603 li
cp
0 0 0 0 cmyk
f
348.342 329.603 mo
292.342 329.603 li
292.342 324.603 li
348.342 324.603 li
348.342 329.603 li
cp
.0705577 .0231632 0 0 cmyk
f
349.342 324.603 mo
293.342 324.603 li
293.342 304.603 li
349.342 304.603 li
349.342 324.603 li
cp
.462409 0 .0216678 0 cmyk
f
295.843 364.103 mo
349.842 364.103 li
349.842 305.103 li
295.843 305.103 li
295.843 364.103 li
cp
352.342 369.103 mo
293.343 369.103 li
291.962 369.103 290.843 367.984 290.843 366.603 cv
290.843 302.603 li
290.843 301.222 291.962 300.103 293.343 300.103 cv
352.342 300.103 li
353.723 300.103 354.842 301.222 354.842 302.603 cv
354.842 366.603 li
354.842 367.984 353.723 369.103 352.342 369.103 cv
cp
1 .943023 .192264 .0637827 cmyk
f
351.342 327.103 mo
292.342 327.103 li
292.342 322.103 li
351.342 322.103 li
351.342 327.103 li
cp
f
324.842 366.603 mo
319.842 366.603 li
319.842 324.603 li
324.842 324.603 li
324.842 366.603 li
cp
f
360.342 369.103 mo
351.342 369.103 li
351.342 364.103 li
360.342 364.103 li
360.342 369.103 li
cp
f
292.342 369.103 mo
284.342 369.103 li
284.342 364.103 li
292.342 364.103 li
292.342 369.103 li
cp
f
372.342 416.603 mo
166.342 416.603 li
166.342 407.603 li
372.342 407.603 li
372.342 416.603 li
cp
.0705577 .0231632 0 0 cmyk
f
167.342 280.291 mo
170.702 281.556 174.325 282.281 178.124 282.281 cv
187.989 282.281 196.779 277.612 202.382 270.373 cv
207.228 276.239 214.252 280.241 222.254 281.197 cv
223.453 281.339 224.671 281.414 225.874 281.414 cv
235.182 281.414 243.612 277.218 249.227 270.541 cv
254.835 277.683 263.566 282.281 273.356 282.281 cv
283.298 282.281 292.15 277.538 297.744 270.206 cv
303.358 277.078 311.912 281.414 321.376 281.414 cv
322.578 281.414 323.797 281.339 324.995 281.197 cv
332.942 280.247 339.925 276.293 344.768 270.496 cv
350.373 277.662 359.122 282.281 368.932 282.281 cv
372.592 282.281 376.087 281.605 379.342 280.427 cv
379.342 251.603 li
167.342 251.603 li
167.342 280.291 li
cp
f
332.209 186.111 mo
344.031 247.334 li
344.266 249.286 344.266 251.237 343.953 253.109 cv
342.627 263.371 334.433 271.877 323.703 273.164 cv
311.022 274.686 299.395 265.556 297.872 252.875 cv
297.365 249.675 li
288.734 186.603 li
332.209 186.111 li
cp
0 0 0 0 cmyk
f
214.596 186.111 mo
202.773 247.334 li
202.538 249.286 202.538 251.237 202.851 253.109 cv
204.178 263.371 212.371 271.877 223.102 273.164 cv
235.782 274.686 247.41 265.556 248.932 252.875 cv
249.439 249.675 li
258.07 186.603 li
214.596 186.111 li
cp
f
291.085 186.603 mo
294.342 249.114 li
294.342 250.547 li
294.342 261.529 286.899 271.334 276.177 273.703 cv
261.045 277.043 247.52 265.459 247.52 250.87 cv
250.776 186.603 li
291.085 186.603 li
cp
.0899367 .622797 0 0 cmyk
f
177.457 184.603 mo
157.342 247.114 li
157.342 248.547 li
157.342 259.529 164.785 269.334 175.507 271.703 cv
190.639 275.043 204.164 263.459 204.164 248.87 cv
217.765 184.603 li
177.457 184.603 li
cp
f
369.227 184.603 mo
389.342 247.114 li
389.342 248.547 li
389.342 259.529 381.899 269.334 371.177 271.703 cv
356.045 275.043 342.52 263.459 342.52 248.87 cv
328.919 184.603 li
369.227 184.603 li
cp
f
343.484 248.603 mo
343.521 248.768 li
343.521 264.816 359.886 277.228 376.752 270.138 cv
385.098 266.629 390.342 258.239 390.342 249.185 cv
390.342 248.603 li
343.484 248.603 li
cp
.101656 .776333 0 0 cmyk
f
249.484 248.603 mo
249.521 248.768 li
249.521 264.816 265.886 277.228 282.752 270.138 cv
291.098 266.629 296.342 258.239 296.342 249.185 cv
296.342 248.603 li
249.484 248.603 li
cp
f
155.484 248.603 mo
155.521 248.768 li
155.521 264.816 171.886 277.228 188.752 270.138 cv
197.098 266.629 202.342 258.239 202.342 249.185 cv
202.342 248.603 li
155.484 248.603 li
cp
f
298.484 248.603 mo
298.521 248.768 li
298.521 264.816 314.886 277.228 331.752 270.138 cv
340.098 266.629 345.342 258.239 345.342 249.185 cv
345.342 248.603 li
298.484 248.603 li
cp
.0705577 .0231632 0 0 cmyk
f
201.484 248.603 mo
201.521 248.768 li
201.521 264.816 217.886 277.228 234.752 270.138 cv
243.098 266.629 248.342 258.239 248.342 249.185 cv
248.342 248.603 li
201.484 248.603 li
cp
f
378.342 416.603 mo
348.342 416.603 li
348.342 407.603 li
378.342 407.603 li
378.342 416.603 li
cp
f
368.342 416.603 mo
377.342 416.603 li
377.342 272.603 li
368.342 272.603 li
368.342 416.603 li
cp
f
257.342 416.603 mo
192.342 416.603 li
192.342 303.603 li
257.342 303.603 li
257.342 416.603 li
cp
.404852 0 .057435 0 cmyk
f
243.342 356.603 mo
204.342 356.603 li
204.342 317.603 li
243.342 317.603 li
243.342 356.603 li
cp
0 0 0 0 cmyk
f
242.342 327.603 mo
204.342 327.603 li
204.342 318.603 li
242.342 318.603 li
242.342 327.603 li
cp
.0705577 .0231632 0 0 cmyk
f
257.342 416.603 mo
192.342 416.603 li
192.342 407.603 li
257.342 407.603 li
257.342 416.603 li
cp
.462409 0 .0216678 0 cmyk
f
226.125 274.695 mo
225.123 274.695 224.11 274.634 223.087 274.512 cv
211.389 273.108 202.164 263.971 200.655 252.294 cv
200.332 250.367 200.3 248.185 200.574 245.902 cv
200.582 245.842 200.591 245.784 200.602 245.726 cv
212.424 184.502 li
217.334 185.45 li
205.528 246.584 li
205.322 248.363 205.347 250.038 205.601 251.563 cv
206.829 261.058 214.26 268.416 223.683 269.547 cv
234.756 270.883 244.525 262.924 245.902 251.442 cv
246.163 248.389 li
251.146 248.817 li
250.876 251.954 li
249.282 265.245 238.696 274.694 226.125 274.695 cv
cp
1 .943023 .192264 .0637827 cmyk
f
271.968 275.146 mo
266.096 275.147 260.396 273.178 255.749 269.446 cv
249.566 264.479 246.02 257.116 246.02 249.243 cv
246.02 249.201 246.021 249.159 246.023 249.116 cv
249.279 184.849 li
254.274 185.103 li
251.02 249.304 li
251.038 255.63 253.9 261.548 258.88 265.547 cv
263.85 269.539 270.324 271.028 276.638 269.633 cv
286.027 267.56 292.842 258.849 292.842 248.92 cv
292.842 247.551 li
289.588 185.106 li
294.582 184.846 li
297.839 247.357 li
297.841 247.4 297.842 247.444 297.842 247.487 cv
297.842 248.92 li
297.842 261.176 289.378 271.941 277.716 274.516 cv
275.802 274.939 273.875 275.146 271.968 275.146 cv
cp
f
320.097 274.697 mo
307.267 274.697 296.136 265.084 294.569 252.038 cv
294.076 248.932 li
299.014 248.149 li
299.521 251.348 li
300.897 262.788 311.242 270.915 322.585 269.547 cv
332.008 268.416 339.439 261.058 340.653 251.654 cv
340.921 250.039 340.945 248.363 340.739 246.583 cv
328.934 185.45 li
333.844 184.502 li
345.666 245.726 li
345.677 245.784 345.686 245.842 345.693 245.902 cv
345.968 248.185 345.936 250.367 345.599 252.385 cv
344.104 263.971 334.879 273.108 323.181 274.512 cv
322.145 274.636 321.115 274.697 320.097 274.697 cv
cp
f
389.342 251.103 mo
157.342 251.103 li
157.342 246.103 li
389.342 246.103 li
389.342 251.103 li
cp
f
366.79 274.237 mo
355.173 274.237 344.588 266.361 341.645 254.629 cv
340.809 252.523 li
345.457 250.68 li
346.355 252.943 li
346.397 253.05 346.432 253.161 346.459 253.273 cv
349.19 264.468 360.515 271.368 371.729 268.642 cv
377.056 267.343 381.54 264.043 384.352 259.349 cv
387.347 254.347 388.147 248.258 386.607 242.193 cv
367.34 185.642 li
372.072 184.029 li
391.37 240.672 li
391.391 240.733 391.409 240.793 391.425 240.855 cv
393.333 248.255 392.344 255.736 388.641 261.918 cv
385.137 267.769 379.55 271.882 372.91 273.5 cv
370.862 273.998 368.811 274.237 366.79 274.237 cv
cp
f
179.478 274.237 mo
177.456 274.237 175.406 273.998 173.358 273.501 cv
159.483 270.119 150.94 256.074 154.312 242.193 cv
154.33 242.12 154.351 242.047 154.375 241.976 cv
173.821 184.898 li
178.554 186.511 li
159.145 243.479 li
156.492 254.649 163.379 265.921 174.54 268.643 cv
185.743 271.366 197.079 264.47 199.809 253.273 cv
199.836 253.161 199.871 253.05 199.913 252.943 cv
200.811 250.679 li
205.459 252.523 li
204.624 254.629 li
201.68 266.36 191.093 274.236 179.478 274.237 cv
cp
f
378.342 423.103 mo
166.342 423.103 li
164.961 423.103 163.842 421.984 163.842 420.603 cv
163.842 267.603 li
168.842 267.603 li
168.842 418.103 li
375.842 418.103 li
375.842 268.603 li
380.842 268.603 li
380.842 420.603 li
380.842 421.984 379.723 423.103 378.342 423.103 cv
cp
f
258.842 416.603 mo
253.842 416.603 li
253.842 306.103 li
193.842 306.103 li
193.842 416.603 li
188.842 416.603 li
188.842 303.603 li
188.842 302.222 189.961 301.103 191.342 301.103 cv
256.342 301.103 li
257.723 301.103 258.842 302.222 258.842 303.603 cv
258.842 416.603 li
cp
f
205.842 320.103 mo
205.842 354.098 li
239.842 354.033 li
239.842 320.103 li
205.842 320.103 li
cp
203.342 359.103 mo
202.68 359.103 202.045 358.84 201.576 358.372 cv
201.106 357.904 200.842 357.267 200.842 356.603 cv
200.842 317.603 li
200.842 316.222 201.961 315.103 203.342 315.103 cv
242.342 315.103 li
243.723 315.103 244.842 316.222 244.842 317.603 cv
244.842 356.528 li
244.842 357.907 243.726 359.025 242.347 359.028 cv
203.347 359.103 li
203.345 359.103 203.344 359.103 203.342 359.103 cv
cp
f
213.342 381.103 mo
204.342 381.103 li
204.342 376.103 li
213.342 376.103 li
213.342 381.103 li
cp
f
263.342 306.103 mo
184.342 306.103 li
184.342 301.103 li
263.342 301.103 li
263.342 306.103 li
cp
f
376.881 329.992 mo
368.879 329.992 362.392 336.479 362.392 344.481 cv
362.392 352.483 368.879 358.97 376.881 358.97 cv
384.883 358.97 391.37 352.483 391.37 344.481 cv
391.37 336.479 384.883 329.992 376.881 329.992 cv
cp
376.881 411.751 mo
376.881 411.751 338.07 368.25 338.07 343.963 cv
338.07 320.655 355.446 305.153 376.881 305.153 cv
398.315 305.153 415.691 320.656 415.691 343.963 cv
415.691 368.212 376.881 411.751 376.881 411.751 cv
cp
0 .132723 .381628 0 cmyk
ef
394.409 418.603 mo
150.816 418.603 li
148.816 418.603 li
148.816 425.783 154.636 431.603 161.816 431.603 cv
381.409 431.603 li
388.589 431.603 394.409 425.783 394.409 418.603 cv
394.409 418.603 li
cp
.0705577 .0231632 0 0 cmyk
f
448.115 421.103 mo
85.7677 421.103 li
85.7677 416.103 li
448.115 416.103 li
448.115 421.103 li
cp
1 .943023 .192264 .0637827 cmyk
f
355.976 343.094 mo
355.976 352.64 363.613 360.387 373.108 360.596 cv
368.675 357.417 363.203 351.581 363.203 345.709 cv
363.203 336.033 373.621 328.839 383.298 328.839 cv
383.43 328.839 383.557 328.856 383.688 328.859 cv
380.815 326.798 377.303 325.573 373.498 325.573 cv
363.82 325.573 355.976 333.417 355.976 343.094 cv
cp
0 .268223 .467811 0 cmyk
ef
386.293 304.289 mo
399.108 310.191 407.925 322.825 407.925 339.423 cv
407.925 359.596 381.068 393.115 372.039 403.815 cv
375.179 407.626 377.219 409.914 377.219 409.914 cv
377.219 409.914 416.028 366.373 416.028 342.125 cv
416.028 322.217 403.348 308.012 386.293 304.289 cv
cp
ef
376.881 332.492 mo
370.27 332.492 364.892 337.87 364.892 344.481 cv
364.892 351.092 370.27 356.47 376.881 356.47 cv
383.492 356.47 388.87 351.092 388.87 344.481 cv
388.87 337.87 383.492 332.492 376.881 332.492 cv
cp
376.881 361.47 mo
367.513 361.47 359.892 353.849 359.892 344.481 cv
359.892 335.113 367.513 327.492 376.881 327.492 cv
386.249 327.492 393.87 335.113 393.87 344.481 cv
393.87 353.849 386.249 361.47 376.881 361.47 cv
cp
376.881 307.653 mo
355.841 307.653 340.57 322.923 340.57 343.963 cv
340.57 364.034 369.212 398.947 376.88 407.932 cv
384.548 398.94 413.191 364.002 413.191 343.963 cv
413.191 322.923 397.92 307.653 376.881 307.653 cv
cp
376.882 414.251 mo
376.169 414.251 375.49 413.948 375.016 413.415 cv
373.404 411.611 335.57 368.916 335.57 343.963 cv
335.57 320.027 352.944 302.653 376.881 302.653 cv
400.817 302.653 418.191 320.027 418.191 343.963 cv
418.191 368.878 380.358 411.608 378.747 413.414 cv
378.273 413.947 377.594 414.251 376.882 414.251 cv
cp
1 .943023 .192264 .0637827 cmyk
f
174.985 169.717 mo
171.761 169.717 169.137 172.34 169.137 175.565 cv
169.137 178.789 171.761 181.413 174.985 181.413 cv
368.028 181.413 li
371.253 181.413 373.876 178.789 373.876 175.565 cv
373.876 172.34 371.253 169.717 368.028 169.717 cv
174.985 169.717 li
cp
368.028 186.413 mo
174.985 186.413 li
169.003 186.413 164.137 181.546 164.137 175.565 cv
164.137 169.583 169.003 164.717 174.985 164.717 cv
368.028 164.717 li
374.01 164.717 378.876 169.583 378.876 175.565 cv
378.876 181.546 374.01 186.413 368.028 186.413 cv
cp
f
237.032 955.967 mo
237.032 963.892 230.608 970.317 222.683 970.317 cv
214.757 970.317 208.332 963.892 208.332 955.967 cv
208.332 948.041 214.757 941.617 222.683 941.617 cv
230.608 941.617 237.032 948.041 237.032 955.967 cv
cp
.0899367 .622797 0 0 cmyk
f
222.291 941.617 mo
220.013 941.617 217.866 942.162 215.953 943.107 cv
216.364 943.065 216.781 943.043 217.204 943.043 cv
223.98 943.043 229.472 948.536 229.472 955.311 cv
229.472 962.085 223.98 967.578 217.204 967.578 cv
215.677 967.578 214.221 967.287 212.872 966.776 cv
215.394 968.975 218.683 970.317 222.291 970.317 cv
230.217 970.317 236.642 963.892 236.642 955.967 cv
236.642 948.041 230.217 941.617 222.291 941.617 cv
cp
.101656 .776333 0 0 cmyk
f
222.505 943.519 mo
215.648 943.519 210.068 949.098 210.068 955.956 cv
210.068 962.813 215.648 968.392 222.505 968.392 cv
229.362 968.392 234.941 962.813 234.941 955.956 cv
234.941 949.098 229.362 943.519 222.505 943.519 cv
cp
222.505 973.392 mo
212.891 973.392 205.068 965.57 205.068 955.956 cv
205.068 946.341 212.891 938.519 222.505 938.519 cv
232.119 938.519 239.941 946.341 239.941 955.956 cv
239.941 965.57 232.119 973.392 222.505 973.392 cv
cp
1 .943023 .192264 .0637827 cmyk
f
359.381 955.967 mo
359.381 963.892 352.956 970.317 345.03 970.317 cv
337.105 970.317 330.68 963.892 330.68 955.967 cv
330.68 948.041 337.105 941.617 345.03 941.617 cv
352.956 941.617 359.381 948.041 359.381 955.967 cv
cp
.0899367 .622797 0 0 cmyk
f
344.639 941.617 mo
342.36 941.617 340.214 942.162 338.301 943.107 cv
338.712 943.065 339.13 943.043 339.552 943.043 cv
346.327 943.043 351.819 948.536 351.819 955.311 cv
351.819 962.085 346.327 967.578 339.552 967.578 cv
338.025 967.578 336.568 967.287 335.22 966.776 cv
337.742 968.975 341.03 970.317 344.639 970.317 cv
352.565 970.317 358.989 963.892 358.989 955.967 cv
358.989 948.041 352.565 941.617 344.639 941.617 cv
cp
.101656 .776333 0 0 cmyk
f
344.853 943.519 mo
337.995 943.519 332.416 949.098 332.416 955.956 cv
332.416 962.813 337.995 968.392 344.853 968.392 cv
351.71 968.392 357.288 962.813 357.288 955.956 cv
357.288 949.098 351.71 943.519 344.853 943.519 cv
cp
344.853 973.392 mo
335.238 973.392 327.416 965.57 327.416 955.956 cv
327.416 946.341 335.238 938.519 344.853 938.519 cv
354.467 938.519 362.288 946.341 362.288 955.956 cv
362.288 965.57 354.467 973.392 344.853 973.392 cv
cp
1 .943023 .192264 .0637827 cmyk
f
370.206 884.594 mo
207.568 884.594 li
197.611 768.424 li
380.163 801.616 li
370.206 884.594 li
cp
0 0 0 0 cmyk
f
362.22 831.478 mo
356.913 831.478 354.154 829.845 351.721 828.405 cv
349.609 827.155 347.942 826.167 344.277 826.167 cv
340.616 826.167 338.95 827.155 336.841 828.404 cv
334.408 829.845 331.65 831.478 326.347 831.478 cv
321.045 831.478 318.29 829.844 315.858 828.404 cv
313.752 827.154 312.087 826.167 308.431 826.167 cv
304.772 826.167 303.107 827.154 300.998 828.404 cv
298.566 829.844 295.81 831.478 290.506 831.478 cv
285.204 831.478 282.447 829.844 280.017 828.404 cv
277.908 827.154 276.244 826.167 272.586 826.167 cv
268.928 826.167 267.264 827.154 265.155 828.404 cv
262.725 829.844 259.968 831.478 254.666 831.478 cv
249.364 831.478 246.608 829.844 244.177 828.404 cv
242.068 827.154 240.404 826.167 236.746 826.167 cv
233.091 826.167 231.427 827.154 229.32 828.403 cv
226.89 829.844 224.134 831.478 218.833 831.478 cv
213.535 831.478 210.781 829.844 208.352 828.403 cv
206.869 827.524 205.589 826.764 203.668 826.402 cv
204.783 820.505 li
207.741 821.065 209.691 822.222 211.412 823.243 cv
213.518 824.492 215.181 825.478 218.833 825.478 cv
222.489 825.478 224.153 824.492 226.26 823.242 cv
228.691 821.801 231.445 820.167 236.746 820.167 cv
242.048 820.167 244.805 821.801 247.235 823.242 cv
249.344 824.492 251.008 825.478 254.666 825.478 cv
258.324 825.478 259.988 824.492 262.097 823.242 cv
264.527 821.801 267.284 820.167 272.586 820.167 cv
277.888 820.167 280.644 821.801 283.075 823.242 cv
285.184 824.492 286.848 825.478 290.506 825.478 cv
294.165 825.478 295.831 824.491 297.94 823.242 cv
300.371 821.8 303.128 820.167 308.431 820.167 cv
313.733 820.167 316.487 821.801 318.919 823.242 cv
321.025 824.492 322.691 825.478 326.347 825.478 cv
330.007 825.478 331.673 824.491 333.782 823.242 cv
336.215 821.8 338.973 820.167 344.277 820.167 cv
349.585 820.167 352.344 821.8 354.777 823.242 cv
356.889 824.491 358.556 825.478 362.22 825.478 cv
365.885 825.478 367.553 824.491 369.664 823.241 cv
371.369 822.232 373.301 821.088 376.213 820.522 cv
377.358 826.413 li
375.464 826.78 374.192 827.533 372.72 828.404 cv
370.286 829.845 367.527 831.478 362.22 831.478 cv
cp
.0705577 .0231632 0 0 cmyk
f
375.163 984.848 mo
189.696 984.848 li
183.068 984.848 177.696 979.476 177.696 972.848 cv
387.163 972.848 li
387.163 979.476 381.791 984.848 375.163 984.848 cv
cp
.539971 .00271611 0 0 cmyk
f
245.42 780.877 mo
245.42 740.712 li
358.475 740.712 li
358.475 794.265 li
245.42 780.877 li
cp
.0899367 .622797 0 0 cmyk
f
358.23 797.188 mo
248.281 779.191 li
248.281 766.729 li
358.23 785.725 li
358.23 797.188 li
cp
.101656 .776333 0 0 cmyk
f
372.519 882.438 mo
208.332 882.438 li
208.332 876.115 li
372.519 876.115 li
372.519 882.438 li
cp
.0705577 .0231632 0 0 cmyk
f
177.432 715.345 mo
171.202 730.664 li
145.835 719.817 li
141.691 718.044 139.73 713.277 141.428 709.101 cv
143.169 704.818 148.085 702.795 152.337 704.614 cv
177.432 715.345 li
cp
0 .132723 .381628 0 cmyk
f
362.22 859.652 mo
356.913 859.652 354.154 858.019 351.721 856.579 cv
349.609 855.329 347.942 854.341 344.277 854.341 cv
340.616 854.341 338.95 855.329 336.841 856.578 cv
334.408 858.019 331.65 859.652 326.347 859.652 cv
321.045 859.652 318.29 858.018 315.858 856.578 cv
313.752 855.328 312.087 854.341 308.431 854.341 cv
304.772 854.341 303.107 855.328 300.998 856.578 cv
298.566 858.018 295.81 859.652 290.506 859.652 cv
285.204 859.652 282.447 858.018 280.017 856.578 cv
277.908 855.328 276.244 854.341 272.586 854.341 cv
268.928 854.341 267.264 855.328 265.155 856.578 cv
262.725 858.018 259.968 859.652 254.666 859.652 cv
249.364 859.652 246.608 858.018 244.177 856.578 cv
242.068 855.328 240.404 854.341 236.746 854.341 cv
233.091 854.341 231.427 855.328 229.32 856.577 cv
226.89 858.018 224.134 859.652 218.833 859.652 cv
213.535 859.652 210.781 858.018 208.352 856.577 cv
206.869 855.698 205.589 854.938 203.668 854.576 cv
204.783 848.679 li
207.741 849.239 209.691 850.396 211.412 851.416 cv
213.518 852.665 215.181 853.652 218.833 853.652 cv
222.489 853.652 224.153 852.665 226.26 851.415 cv
228.691 849.975 231.445 848.341 236.746 848.341 cv
242.048 848.341 244.805 849.975 247.235 851.415 cv
249.344 852.665 251.008 853.652 254.666 853.652 cv
258.324 853.652 259.988 852.665 262.097 851.415 cv
264.527 849.975 267.284 848.341 272.586 848.341 cv
277.888 848.341 280.644 849.975 283.075 851.415 cv
285.184 852.665 286.848 853.652 290.506 853.652 cv
294.165 853.652 295.831 852.664 297.94 851.415 cv
300.371 849.974 303.128 848.341 308.431 848.341 cv
313.733 848.341 316.487 849.975 318.919 851.415 cv
321.025 852.665 322.691 853.652 326.347 853.652 cv
330.007 853.652 331.673 852.664 333.782 851.415 cv
336.215 849.974 338.973 848.341 344.277 848.341 cv
349.585 848.341 352.344 849.974 354.777 851.415 cv
356.889 852.664 358.556 853.652 362.22 853.652 cv
365.885 853.652 367.553 852.664 369.664 851.414 cv
371.369 850.406 373.301 849.262 376.213 848.696 cv
377.358 854.586 li
375.464 854.954 374.192 855.706 372.72 856.578 cv
370.286 858.019 367.527 859.652 362.22 859.652 cv
cp
.0705577 .0231632 0 0 cmyk
f
236.621 883.275 mo
231.621 883.275 li
231.621 778.382 li
236.621 778.382 li
236.621 883.275 li
cp
1 .943023 .192264 .0637827 cmyk
f
273.132 883.275 mo
268.132 883.275 li
268.132 781.701 li
273.132 781.701 li
273.132 883.275 li
cp
f
309.643 883.275 mo
304.643 883.275 li
304.643 791.659 li
309.643 791.659 li
309.643 883.275 li
cp
f
346.153 883.275 mo
341.153 883.275 li
341.153 798.296 li
346.153 798.296 li
346.153 883.275 li
cp
f
222.795 948.951 mo
218.724 948.951 215.139 946.269 213.989 942.363 cv
210.595 930.82 li
234.771 930.82 li
231.646 942.203 li
230.551 946.188 226.928 948.951 222.795 948.951 cv
cp
0 0 0 0 cmyk
f
192.766 769.605 mo
186.274 731.99 li
175.383 726.894 li
177.502 722.365 li
189.574 728.014 li
190.315 728.361 190.839 729.047 190.979 729.854 cv
197.693 768.755 li
192.766 769.605 li
cp
1 .943023 .192264 .0637827 cmyk
f
213.936 933.562 mo
216.388 941.9 li
217.218 944.722 219.854 946.694 222.795 946.694 cv
225.793 946.694 228.441 944.674 229.234 941.783 cv
231.491 933.562 li
213.936 933.562 li
cp
222.795 951.694 mo
217.65 951.694 213.043 948.247 211.591 943.311 cv
208.196 931.767 li
207.974 931.011 208.121 930.195 208.593 929.564 cv
209.066 928.933 209.807 928.562 210.595 928.562 cv
234.771 928.562 li
235.551 928.562 236.286 928.926 236.759 929.546 cv
237.232 930.166 237.388 930.972 237.182 931.724 cv
234.057 943.107 li
232.668 948.163 228.037 951.694 222.795 951.694 cv
cp
f
344.659 948.951 mo
340.588 948.951 337.003 946.269 335.855 942.363 cv
332.459 930.82 li
356.635 930.82 li
353.51 942.203 li
352.415 946.188 348.792 948.951 344.659 948.951 cv
cp
0 0 0 0 cmyk
f
335.801 933.562 mo
338.253 941.9 li
339.083 944.722 341.717 946.694 344.659 946.694 cv
347.657 946.694 350.305 944.674 351.099 941.783 cv
353.356 933.562 li
335.801 933.562 li
cp
344.659 951.694 mo
339.515 951.694 334.907 948.247 333.456 943.31 cv
330.061 931.767 li
329.838 931.011 329.985 930.195 330.457 929.564 cv
330.93 928.933 331.671 928.562 332.459 928.562 cv
356.635 928.562 li
357.415 928.562 358.15 928.926 358.623 929.546 cv
359.096 930.166 359.252 930.972 359.046 931.724 cv
355.921 943.107 li
354.532 948.163 349.901 951.694 344.659 951.694 cv
cp
1 .943023 .192264 .0637827 cmyk
f
149.087 706.444 mo
148.344 706.444 147.601 706.589 146.892 706.881 cv
145.449 707.475 144.331 708.597 143.744 710.042 cv
142.566 712.937 143.946 716.289 146.818 717.518 cv
169.845 727.365 li
174.191 716.678 li
151.354 706.913 li
150.624 706.6 149.856 706.444 149.087 706.444 cv
cp
171.202 733.164 mo
170.867 733.164 170.533 733.097 170.219 732.963 cv
144.852 722.116 li
139.49 719.823 136.915 713.562 139.112 708.16 cv
140.209 705.461 142.296 703.366 144.989 702.257 cv
147.682 701.149 150.64 701.17 153.32 702.315 cv
178.415 713.046 li
179.668 713.582 180.261 715.024 179.747 716.287 cv
173.518 731.606 li
173.266 732.228 172.774 732.721 172.153 732.977 cv
171.849 733.102 171.525 733.164 171.202 733.164 cv
cp
f
387.163 973.392 mo
177.696 973.392 li
177.696 968.392 li
387.163 968.392 li
387.163 973.392 li
cp
f
362.748 798.296 mo
357.748 798.296 li
357.748 741.294 li
248.702 741.294 li
248.702 778.462 li
243.702 778.462 li
243.702 738.794 li
243.702 737.414 244.821 736.294 246.202 736.294 cv
360.248 736.294 li
361.629 736.294 362.748 737.414 362.748 738.794 cv
362.748 798.296 li
cp
f
362.22 853.239 mo
357.05 853.239 354.355 851.643 351.976 850.235 cv
349.885 848.997 348.079 847.928 344.277 847.928 cv
340.48 847.928 338.675 848.997 336.586 850.235 cv
334.208 851.643 331.514 853.239 326.347 853.239 cv
321.183 853.239 318.489 851.642 316.114 850.234 cv
314.026 848.997 312.225 847.928 308.431 847.928 cv
304.635 847.928 302.831 848.997 300.743 850.234 cv
298.366 851.642 295.673 853.239 290.506 853.239 cv
285.341 853.239 282.648 851.642 280.272 850.234 cv
278.184 848.997 276.381 847.928 272.586 847.928 cv
268.791 847.928 266.988 848.997 264.9 850.234 cv
262.525 851.642 259.831 853.239 254.666 853.239 cv
249.501 853.239 246.808 851.642 244.432 850.234 cv
242.344 848.997 240.541 847.928 236.746 847.928 cv
232.954 847.928 231.151 848.997 229.066 850.234 cv
226.69 851.642 223.997 853.239 218.833 853.239 cv
213.672 853.239 210.981 851.642 208.607 850.234 cv
207.083 849.331 205.768 848.55 203.762 848.17 cv
204.69 843.258 li
207.562 843.8 209.472 844.934 211.157 845.934 cv
213.242 847.17 215.043 848.239 218.833 848.239 cv
222.626 848.239 224.429 847.17 226.515 845.933 cv
228.891 844.525 231.583 842.928 236.746 842.928 cv
241.911 842.928 244.605 844.525 246.981 845.933 cv
249.068 847.17 250.871 848.239 254.666 848.239 cv
258.461 848.239 260.264 847.17 262.352 845.933 cv
264.728 844.525 267.421 842.928 272.586 842.928 cv
277.751 842.928 280.444 844.525 282.82 845.933 cv
284.908 847.17 286.711 848.239 290.506 848.239 cv
294.303 848.239 296.107 847.17 298.194 845.932 cv
300.571 844.524 303.265 842.928 308.431 842.928 cv
313.595 842.928 316.288 844.525 318.663 845.933 cv
320.751 847.17 322.553 848.239 326.347 848.239 cv
330.145 848.239 331.948 847.17 334.037 845.933 cv
336.415 844.524 339.109 842.928 344.277 842.928 cv
349.448 842.928 352.144 844.524 354.523 845.932 cv
356.613 847.169 358.419 848.239 362.22 848.239 cv
366.022 848.239 367.827 847.169 369.919 845.932 cv
371.589 844.944 373.482 843.823 376.309 843.274 cv
377.262 848.182 li
375.284 848.567 373.978 849.339 372.466 850.235 cv
370.087 851.643 367.391 853.239 362.22 853.239 cv
cp
f
362.22 826.686 mo
357.05 826.686 354.355 825.09 351.976 823.682 cv
349.885 822.445 348.079 821.375 344.277 821.375 cv
340.48 821.375 338.675 822.444 336.586 823.682 cv
334.208 825.09 331.514 826.686 326.347 826.686 cv
321.183 826.686 318.489 825.089 316.114 823.681 cv
314.026 822.444 312.225 821.375 308.431 821.375 cv
304.635 821.375 302.831 822.444 300.743 823.681 cv
298.366 825.089 295.673 826.686 290.506 826.686 cv
285.341 826.686 282.648 825.089 280.272 823.681 cv
278.184 822.444 276.381 821.375 272.586 821.375 cv
268.791 821.375 266.988 822.444 264.9 823.681 cv
262.525 825.089 259.831 826.686 254.666 826.686 cv
249.501 826.686 246.808 825.089 244.432 823.681 cv
242.344 822.444 240.541 821.375 236.746 821.375 cv
232.954 821.375 231.151 822.444 229.066 823.681 cv
226.69 825.089 223.997 826.686 218.833 826.686 cv
213.672 826.686 210.981 825.089 208.607 823.681 cv
206.522 822.444 204.72 821.375 200.93 821.375 cv
200.93 816.375 li
206.092 816.375 208.783 817.972 211.157 819.38 cv
213.242 820.618 215.043 821.686 218.833 821.686 cv
222.626 821.686 224.429 820.618 226.515 819.38 cv
228.891 817.972 231.583 816.375 236.746 816.375 cv
241.911 816.375 244.605 817.972 246.981 819.38 cv
249.068 820.618 250.871 821.686 254.666 821.686 cv
258.461 821.686 260.264 820.618 262.352 819.38 cv
264.728 817.972 267.421 816.375 272.586 816.375 cv
277.751 816.375 280.444 817.972 282.82 819.38 cv
284.908 820.618 286.711 821.686 290.506 821.686 cv
294.303 821.686 296.107 820.618 298.194 819.379 cv
300.571 817.971 303.265 816.375 308.431 816.375 cv
313.595 816.375 316.288 817.972 318.663 819.38 cv
320.751 820.618 322.553 821.686 326.347 821.686 cv
330.145 821.686 331.948 820.618 334.037 819.38 cv
336.415 817.971 339.109 816.375 344.277 816.375 cv
349.448 816.375 352.144 817.971 354.523 819.379 cv
356.613 820.617 358.419 821.686 362.22 821.686 cv
366.022 821.686 367.827 820.617 369.918 819.379 cv
372.297 817.971 374.993 816.375 380.163 816.375 cv
380.163 821.375 li
376.361 821.375 374.556 822.445 372.465 823.682 cv
370.086 825.09 367.39 826.686 362.22 826.686 cv
cp
f
211.133 882.094 mo
368.141 882.094 li
377.576 805.856 li
198.112 772.263 li
211.133 882.094 li
cp
365.69 933.562 mo
202.558 933.562 li
194.395 933.562 187.754 926.921 187.754 918.758 cv
187.754 916.047 188.498 913.39 189.905 911.074 cv
206.328 884.033 li
192.747 769.474 li
192.653 768.685 192.941 767.897 193.522 767.354 cv
194.104 766.81 194.908 766.574 195.69 766.723 cv
380.806 801.373 li
382.104 801.617 382.989 802.827 382.827 804.137 cv
372.832 884.901 li
372.677 886.154 371.612 887.094 370.351 887.094 cv
210.318 887.094 li
194.179 913.669 li
193.246 915.204 192.754 916.963 192.754 918.758 cv
192.754 924.164 197.151 928.562 202.558 928.562 cv
365.69 928.562 li
368.632 928.562 371.025 926.168 371.025 923.226 cv
371.025 922.302 li
371.025 919.36 368.632 916.966 365.69 916.966 cv
210.888 916.966 li
210.888 911.966 li
365.69 911.966 li
371.389 911.966 376.025 916.603 376.025 922.302 cv
376.025 923.226 li
376.025 928.925 371.389 933.562 365.69 933.562 cv
cp
f
843.014 681.011 mo
853.109 690.497 li
854.928 692.206 857.587 692.675 859.88 691.691 cv
872.611 686.23 li
875.657 684.923 879.193 686.21 880.687 689.169 cv
886.929 701.537 li
888.053 703.764 890.391 705.114 892.883 704.974 cv
906.714 704.196 li
910.023 704.01 912.905 706.429 913.297 709.72 cv
914.933 723.476 li
915.228 725.955 916.963 728.022 919.353 728.743 cv
932.615 732.743 li
935.788 733.7 937.67 736.958 936.912 740.185 cv
933.744 753.67 li
933.174 756.1 934.097 758.637 936.096 760.131 cv
947.191 768.426 li
949.846 770.411 950.499 774.117 948.684 776.889 cv
941.094 788.479 li
939.728 790.566 939.728 793.266 941.094 795.354 cv
948.684 806.943 li
950.499 809.715 949.846 813.421 947.191 815.406 cv
936.096 823.701 li
934.097 825.195 933.174 827.732 933.744 830.162 cv
936.912 843.647 li
937.67 846.873 935.788 850.133 932.615 851.089 cv
919.353 855.089 li
916.963 855.81 915.228 857.878 914.933 860.356 cv
913.297 874.112 li
912.905 877.403 910.023 879.822 906.714 879.636 cv
892.883 878.859 li
890.391 878.718 888.053 880.068 886.929 882.296 cv
880.687 894.664 li
879.193 897.622 875.657 898.909 872.611 897.602 cv
859.88 892.141 li
857.587 891.157 854.928 891.625 853.109 893.334 cv
843.014 902.821 li
840.599 905.09 836.835 905.09 834.42 902.821 cv
824.325 893.334 li
822.506 891.625 819.848 891.157 817.555 892.141 cv
804.823 897.602 li
801.777 898.909 798.241 897.622 796.748 894.664 cv
790.506 882.296 li
789.381 880.068 787.043 878.718 784.552 878.859 cv
770.721 879.636 li
767.411 879.822 764.528 877.403 764.137 874.112 cv
762.501 860.356 li
762.207 857.878 760.472 855.81 758.082 855.089 cv
744.819 851.089 li
741.647 850.133 739.765 846.873 740.523 843.647 cv
743.69 830.162 li
744.261 827.732 743.337 825.195 741.339 823.701 cv
730.243 815.406 li
727.589 813.421 726.936 809.715 728.751 806.943 cv
736.34 795.354 li
737.707 793.266 737.707 790.566 736.34 788.479 cv
728.751 776.889 li
726.936 774.117 727.589 770.411 730.243 768.426 cv
741.339 760.131 li
743.337 758.637 744.261 756.1 743.69 753.67 cv
740.523 740.185 li
739.765 736.958 741.647 733.7 744.819 732.743 cv
758.082 728.743 li
760.472 728.022 762.207 725.955 762.501 723.476 cv
764.137 709.72 li
764.528 706.429 767.411 704.01 770.721 704.196 cv
784.552 704.974 li
787.043 705.114 789.381 703.764 790.506 701.537 cv
796.748 689.169 li
798.241 686.21 801.777 684.923 804.823 686.23 cv
817.555 691.691 li
819.848 692.675 822.506 692.206 824.325 690.497 cv
834.42 681.011 li
836.835 678.742 840.599 678.742 843.014 681.011 cv
cp
0 0 0 0 cmyk
f
820.027 889.132 mo
822.218 889.132 824.377 889.953 826.037 891.512 cv
836.132 900.998 li
837.581 902.362 839.853 902.362 841.302 900.998 cv
851.398 891.512 li
853.941 889.121 857.659 888.465 860.866 889.844 cv
873.597 895.304 li
875.426 896.088 877.559 895.314 878.455 893.537 cv
884.697 881.169 li
886.269 878.051 889.565 876.148 893.023 876.363 cv
906.855 877.14 li
908.843 877.235 910.579 875.791 910.815 873.817 cv
912.45 860.061 li
912.862 856.594 915.289 853.704 918.631 852.696 cv
931.894 848.696 li
933.798 848.122 934.934 846.156 934.479 844.218 cv
931.311 830.733 li
930.513 827.334 931.804 823.788 934.599 821.698 cv
945.694 813.404 li
947.287 812.212 947.682 809.976 946.592 808.312 cv
939.002 796.724 li
937.091 793.802 937.091 790.029 939.002 787.11 cv
946.592 775.52 li
947.682 773.856 947.287 771.62 945.694 770.428 cv
934.599 762.133 li
931.804 760.044 930.513 756.497 931.311 753.099 cv
934.479 739.614 li
934.933 737.677 933.798 735.71 931.894 735.136 cv
918.631 731.136 li
915.288 730.128 912.862 727.238 912.45 723.771 cv
910.815 710.015 li
910.58 708.041 908.867 706.585 906.854 706.692 cv
893.023 707.47 li
889.549 707.664 886.269 705.78 884.696 702.663 cv
878.455 690.296 li
877.559 688.52 875.426 687.743 873.597 688.528 cv
860.865 693.989 li
857.661 695.364 853.941 694.711 851.398 692.319 cv
841.302 682.833 li
841.302 682.833 li
839.853 681.47 837.581 681.47 836.132 682.833 cv
826.037 692.32 li
823.492 694.71 819.775 695.367 816.568 693.988 cv
803.838 688.528 li
802.01 687.744 799.877 688.52 798.98 690.295 cv
792.737 702.664 li
791.163 705.779 787.881 707.651 784.412 707.47 cv
770.58 706.692 li
768.625 706.585 766.855 708.039 766.619 710.015 cv
764.983 723.771 li
764.572 727.237 762.147 730.128 758.804 731.136 cv
745.541 735.136 li
743.637 735.71 742.502 737.677 742.956 739.614 cv
746.123 753.099 li
746.922 756.497 745.632 760.042 742.836 762.133 cv
731.74 770.428 li
730.148 771.62 729.753 773.856 730.843 775.52 cv
738.432 787.11 li
740.344 790.029 740.344 793.802 738.432 796.723 cv
730.843 808.312 li
729.753 809.976 730.148 812.212 731.74 813.404 cv
742.836 821.699 li
745.632 823.789 746.922 827.335 746.123 830.734 cv
742.956 844.218 li
742.501 846.156 743.637 848.122 745.541 848.696 cv
758.804 852.696 li
762.147 853.704 764.572 856.595 764.983 860.061 cv
766.619 873.817 li
766.855 875.791 768.597 877.259 770.581 877.14 cv
784.411 876.363 li
787.895 876.156 791.164 878.053 792.737 881.169 cv
798.98 893.537 li
799.876 895.314 802.011 896.086 803.838 895.304 cv
816.569 889.843 li
817.684 889.365 818.86 889.132 820.027 889.132 cv
cp
838.717 907.017 mo
836.555 907.018 834.393 906.226 832.708 904.643 cv
822.613 895.157 li
821.52 894.128 819.919 893.846 818.541 894.438 cv
805.809 899.9 li
801.56 901.721 796.598 899.915 794.517 895.79 cv
788.274 883.423 li
787.597 882.081 786.183 881.282 784.692 881.355 cv
770.861 882.132 li
766.235 882.373 762.199 878.998 761.654 874.407 cv
760.019 860.651 li
759.842 859.16 758.798 857.916 757.36 857.483 cv
744.098 853.483 li
739.671 852.149 737.031 847.578 738.089 843.076 cv
741.256 829.59 li
741.6 828.127 741.044 826.602 739.842 825.703 cv
728.746 817.408 li
725.043 814.64 724.127 809.441 726.659 805.574 cv
734.248 793.985 li
735.071 792.728 735.071 791.105 734.249 789.849 cv
726.659 778.258 li
724.127 774.391 725.043 769.192 728.746 766.424 cv
739.842 758.129 li
741.044 757.23 741.6 755.705 741.256 754.243 cv
738.089 740.756 li
737.031 736.256 739.671 731.684 744.098 730.349 cv
757.36 726.349 li
758.798 725.915 759.842 724.672 760.019 723.181 cv
761.654 709.425 li
762.2 704.833 766.267 701.431 770.86 701.7 cv
784.692 702.478 li
786.168 702.561 787.597 701.75 788.274 700.41 cv
794.517 688.042 li
796.6 683.914 801.563 682.111 805.809 683.932 cv
818.54 689.393 li
819.919 689.986 821.52 689.704 822.613 688.675 cv
832.708 679.189 li
836.077 676.023 841.357 676.023 844.726 679.189 cv
854.821 688.675 li
855.915 689.704 857.513 689.983 858.894 689.394 cv
871.626 683.932 li
875.872 682.112 880.835 683.914 882.919 688.043 cv
889.16 700.41 li
889.837 701.751 891.25 702.57 892.743 702.478 cv
906.573 701.7 li
911.214 701.456 915.233 704.834 915.779 709.425 cv
917.415 723.181 li
917.593 724.671 918.637 725.915 920.074 726.349 cv
933.337 730.349 li
937.764 731.684 940.403 736.256 939.346 740.756 cv
936.178 754.242 li
935.835 755.705 936.39 757.23 937.593 758.128 cv
948.689 766.424 li
952.392 769.192 953.308 774.391 950.775 778.258 cv
943.186 789.849 li
942.363 791.104 942.363 792.728 943.186 793.985 cv
950.775 805.573 li
953.308 809.441 952.392 814.64 948.689 817.408 cv
937.593 825.703 li
936.39 826.602 935.835 828.127 936.178 829.59 cv
939.346 843.076 li
940.403 847.578 937.764 852.149 933.337 853.483 cv
920.074 857.483 li
918.637 857.916 917.593 859.161 917.415 860.652 cv
915.779 874.407 li
915.233 878.998 911.16 882.377 906.574 882.132 cv
892.742 881.355 li
891.259 881.273 889.837 882.082 889.161 883.422 cv
882.918 895.79 li
880.836 899.917 875.872 901.721 871.626 899.9 cv
858.895 894.439 li
857.512 893.845 855.915 894.128 854.821 895.156 cv
844.726 904.643 li
843.041 906.226 840.879 907.017 838.717 907.017 cv
cp
1 .943023 .192264 .0637827 cmyk
f
842.337 698.497 mo
850.84 706.488 li
852.372 707.927 854.611 708.323 856.543 707.494 cv
867.267 702.893 li
869.832 701.792 872.812 702.877 874.069 705.37 cv
879.327 715.787 li
880.274 717.663 882.243 718.8 884.343 718.682 cv
895.993 718.027 li
898.78 717.87 901.208 719.908 901.538 722.68 cv
902.916 734.267 li
903.164 736.354 904.626 738.096 906.639 738.704 cv
917.811 742.073 li
920.483 742.878 922.068 745.623 921.43 748.341 cv
918.762 759.701 li
918.281 761.747 919.059 763.884 920.742 765.143 cv
930.088 772.129 li
932.324 773.801 932.874 776.923 931.345 779.258 cv
924.952 789.021 li
923.801 790.779 923.801 793.053 924.952 794.812 cv
931.345 804.574 li
932.874 806.909 932.324 810.031 930.088 811.703 cv
920.742 818.689 li
919.059 819.948 918.281 822.084 918.762 824.131 cv
921.43 835.491 li
922.068 838.208 920.483 840.954 917.811 841.76 cv
906.639 845.129 li
904.626 845.736 903.164 847.478 902.916 849.565 cv
901.538 861.153 li
901.208 863.924 898.78 865.962 895.993 865.805 cv
884.343 865.15 li
882.243 865.033 880.274 866.169 879.327 868.045 cv
874.069 878.463 li
872.812 880.955 869.832 882.039 867.267 880.939 cv
856.543 876.338 li
854.611 875.509 852.372 875.905 850.84 877.344 cv
842.337 885.334 li
840.302 887.247 837.132 887.247 835.098 885.334 cv
826.594 877.344 li
825.063 875.905 822.823 875.509 820.891 876.338 cv
810.167 880.939 li
807.602 882.039 804.623 880.955 803.365 878.463 cv
798.107 868.045 li
797.16 866.169 795.19 865.033 793.092 865.15 cv
781.441 865.805 li
778.654 865.962 776.226 863.924 775.897 861.153 cv
774.519 849.565 li
774.27 847.478 772.809 845.736 770.796 845.129 cv
759.624 841.76 li
756.951 840.954 755.366 838.208 756.005 835.491 cv
758.673 824.131 li
759.153 822.084 758.376 819.948 756.692 818.689 cv
747.347 811.703 li
745.11 810.031 744.56 806.909 746.089 804.574 cv
752.482 794.812 li
753.634 793.053 753.634 790.779 752.482 789.021 cv
746.089 779.258 li
744.56 776.923 745.11 773.801 747.347 772.129 cv
756.692 765.143 li
758.376 763.884 759.153 761.747 758.673 759.701 cv
756.005 748.341 li
755.366 745.623 756.951 742.878 759.624 742.073 cv
770.796 738.704 li
772.809 738.096 774.27 736.354 774.519 734.267 cv
775.897 722.68 li
776.226 719.908 778.654 717.87 781.441 718.027 cv
793.092 718.682 li
795.19 718.8 797.16 717.663 798.107 715.787 cv
803.365 705.37 li
804.623 702.877 807.602 701.792 810.167 702.893 cv
820.891 707.494 li
822.823 708.323 825.063 707.927 826.594 706.488 cv
835.098 698.497 li
837.132 696.585 840.302 696.585 842.337 698.497 cv
cp
.0899367 .622797 0 0 cmyk
f
794.541 782.721 mo
793.301 780.652 789.892 778.691 785.964 778.691 cv
780.9 778.691 778.472 780.807 778.472 783.496 cv
778.472 786.647 782.192 787.526 786.533 788.043 cv
794.076 788.973 801.104 790.934 801.104 799.563 cv
801.104 807.623 793.974 811.086 785.912 811.086 cv
778.523 811.086 772.841 808.814 770.153 802.201 cv
775.837 799.255 li
777.44 803.231 781.624 804.99 786.016 804.99 cv
790.305 804.99 794.335 803.492 794.335 799.563 cv
794.335 796.155 790.77 794.758 785.964 794.241 cv
778.575 793.366 771.755 791.401 771.755 783.289 cv
771.755 775.847 779.093 772.801 785.758 772.747 cv
791.39 772.747 797.229 774.349 799.966 779.928 cv
794.541 782.721 li
cp
0 0 0 0 cmyk
f
822.615 781.581 mo
815.898 796.979 li
829.333 796.979 li
822.615 781.581 li
cp
832.071 803.336 mo
813.16 803.336 li
810.061 810.156 li
802.672 810.156 li
818.896 773.988 li
826.336 773.988 li
842.561 810.156 li
835.12 810.156 li
832.071 803.336 li
cp
f
853.019 773.988 mo
853.019 803.854 li
871.619 803.854 li
871.619 810.156 li
846.197 810.156 li
846.197 773.988 li
853.019 773.988 li
cp
f
903.411 810.156 mo
876.338 810.156 li
876.338 798.116 876.338 786.028 876.338 773.988 cv
903.411 773.988 li
903.411 780.601 li
883.106 780.601 li
883.106 788.918 li
902.69 788.918 li
902.69 795.276 li
883.106 795.276 li
883.106 803.437 li
903.411 803.437 li
903.411 810.156 li
cp
f
809.148 749.29 mo
801.148 749.29 li
801.148 743.29 li
809.148 743.29 li
809.148 749.29 li
cp
825.148 749.29 mo
817.148 749.29 li
817.148 743.29 li
825.148 743.29 li
825.148 749.29 li
cp
841.148 749.29 mo
833.148 749.29 li
833.148 743.29 li
841.148 743.29 li
841.148 749.29 li
cp
857.148 749.29 mo
849.148 749.29 li
849.148 743.29 li
857.148 743.29 li
857.148 749.29 li
cp
873.148 749.29 mo
865.148 749.29 li
865.148 743.29 li
873.148 743.29 li
873.148 749.29 li
cp
f
809.148 840.415 mo
801.148 840.415 li
801.148 834.415 li
809.148 834.415 li
809.148 840.415 li
cp
825.148 840.415 mo
817.148 840.415 li
817.148 834.415 li
825.148 834.415 li
825.148 840.415 li
cp
841.148 840.415 mo
833.148 840.415 li
833.148 834.415 li
841.148 834.415 li
841.148 840.415 li
cp
857.148 840.415 mo
849.148 840.415 li
849.148 834.415 li
857.148 834.415 li
857.148 840.415 li
cp
873.148 840.415 mo
865.148 840.415 li
865.148 834.415 li
873.148 834.415 li
873.148 840.415 li
cp
f
969.963 975.677 mo
725.402 975.677 li
723.395 975.677 li
723.395 982.886 729.238 988.729 736.446 988.729 cv
956.912 988.729 li
964.12 988.729 969.963 982.886 969.963 975.677 cv
969.963 975.677 li
cp
.0705577 .0231632 0 0 cmyk
f
969.963 978.177 mo
723.395 978.177 li
723.395 973.177 li
969.963 973.177 li
969.963 978.177 li
cp
1 .943023 .192264 .0637827 cmyk
f
753.239 908.134 mo
753.239 935.303 775.265 957.329 802.434 957.329 cv
829.603 957.329 851.628 935.303 851.628 908.134 cv
851.628 880.964 829.603 858.939 802.434 858.939 cv
775.265 858.939 753.239 880.964 753.239 908.134 cv
cp
0 .132723 .381628 0 cmyk
f
802.434 861.439 mo
776.687 861.439 755.739 882.386 755.739 908.134 cv
755.739 933.881 776.687 954.829 802.434 954.829 cv
828.181 954.829 849.128 933.881 849.128 908.134 cv
849.128 882.386 828.181 861.439 802.434 861.439 cv
cp
802.434 959.829 mo
773.93 959.829 750.739 936.638 750.739 908.134 cv
750.739 879.629 773.93 856.439 802.434 856.439 cv
830.938 856.439 854.128 879.629 854.128 908.134 cv
854.128 936.638 830.938 959.829 802.434 959.829 cv
cp
1 .943023 .192264 .0637827 cmyk
f
805.947 904.578 mo
799.253 903.797 794.132 902.837 794.132 898.261 cv
794.132 892.184 802.204 891.529 805.674 891.529 cv
810.187 891.529 814.961 893.399 817.286 896.075 cv
817.906 896.789 li
825.389 893.402 li
824.638 892.175 li
821.86 887.639 817.4 885.054 810.601 884.039 cv
810.477 884.021 li
810.477 877.944 li
801.664 877.944 li
801.664 884.026 li
801.534 884.04 li
797.662 884.5 785.031 886.884 785.031 898.261 cv
785.031 909.503 794.164 911.418 805.19 912.627 cv
813.889 913.632 817.94 915.926 817.94 919.847 cv
817.94 924.653 813.13 927.637 805.387 927.637 cv
800.617 927.637 794.251 925.643 791.546 921.265 cv
790.979 920.345 li
782.808 923.731 li
783.472 924.967 li
787.854 933.123 796.666 935.049 801.531 935.47 cv
801.664 935.481 li
801.664 942.129 li
810.477 942.129 li
810.477 935.13 li
810.614 935.121 li
819.002 934.524 827.466 929.569 827.466 919.847 cv
827.466 908.138 817.29 905.943 805.947 904.578 cv
cp
0 .268223 .467811 0 cmyk
f
802.987 902.675 mo
796.293 901.894 791.172 900.934 791.172 896.358 cv
791.172 890.282 799.244 889.626 802.714 889.626 cv
807.227 889.626 812.001 891.496 814.326 894.171 cv
814.946 894.886 li
822.429 891.499 li
821.678 890.273 li
818.9 885.737 814.44 883.151 807.641 882.136 cv
807.517 882.118 li
807.517 876.041 li
798.704 876.041 li
798.704 882.122 li
798.574 882.137 li
794.702 882.597 782.071 884.982 782.071 896.358 cv
782.071 907.6 791.204 909.516 802.23 910.725 cv
810.929 911.729 814.981 914.024 814.981 917.945 cv
814.981 922.75 810.17 925.734 802.427 925.734 cv
797.657 925.734 791.291 923.74 788.586 919.362 cv
788.019 918.443 li
779.848 921.829 li
780.512 923.065 li
784.894 931.221 793.706 933.146 798.571 933.568 cv
798.704 933.579 li
798.704 940.226 li
807.517 940.226 li
807.517 933.228 li
807.654 933.218 li
816.042 932.621 824.506 927.665 824.506 917.945 cv
824.506 906.235 814.33 904.039 802.987 902.675 cv
cp
1 .943023 .192264 .0637827 cmyk
f
700.777 877.629 mo
703.756 887.822 714.434 893.669 724.626 890.69 cv
734.818 887.711 740.666 877.035 737.687 866.842 cv
734.708 856.65 724.031 850.802 713.839 853.781 cv
703.647 856.759 697.799 867.437 700.777 877.629 cv
cp
0 .132723 .381628 0 cmyk
f
719.225 855.507 mo
717.675 855.507 716.102 855.724 714.54 856.18 cv
705.688 858.767 700.59 868.075 703.177 876.928 cv
704.431 881.216 707.278 884.76 711.197 886.907 cv
715.116 889.051 719.634 889.542 723.925 888.29 cv
728.213 887.037 731.757 884.189 733.903 880.27 cv
736.049 876.352 736.541 871.832 735.287 867.543 cv
733.156 860.251 726.465 855.507 719.225 855.507 cv
cp
719.201 893.972 mo
715.602 893.972 712.04 893.069 708.796 891.291 cv
703.705 888.504 700.006 883.901 698.378 878.331 cv
696.75 872.76 697.389 866.889 700.177 861.799 cv
702.964 856.708 707.567 853.009 713.138 851.381 cv
718.71 849.755 724.579 850.392 729.669 853.18 cv
734.759 855.967 738.458 860.571 740.086 866.141 cv
741.715 871.711 741.076 877.582 738.288 882.672 cv
735.501 887.762 730.898 891.461 725.327 893.089 cv
723.308 893.68 721.248 893.972 719.201 893.972 cv
cp
1 .943023 .192264 .0637827 cmyk
f
943.171 432.848 mo
718.671 432.848 li
712.043 432.848 706.671 427.476 706.671 420.848 cv
955.171 420.848 li
955.171 427.476 949.798 432.848 943.171 432.848 cv
cp
.539971 .00271611 0 0 cmyk
f
880.688 198.976 mo
875.688 198.976 li
875.688 181.593 884.482 167.976 895.711 167.976 cv
900.072 167.976 904.197 170.05 907.639 173.975 cv
903.879 177.272 li
902.161 175.312 899.349 172.976 895.711 172.976 cv
887.567 172.976 880.688 184.882 880.688 198.976 cv
cp
1 .943023 .192264 .0637827 cmyk
f
922.569 234.952 mo
791.46 234.952 li
764.907 225.263 li
737.941 234.952 li
737.941 198.142 li
922.569 198.142 li
922.569 234.952 li
cp
0 0 0 0 cmyk
f
764.708 214.706 mo
739.182 225.046 li
739.182 232.905 li
765.443 223.574 li
791.831 233.914 li
792.701 225.046 li
764.708 214.706 li
cp
.0705577 .0231632 0 0 cmyk
f
797.504 225.542 mo
797.504 184.726 li
889.354 184.726 li
889.354 225.046 li
797.504 225.542 li
cp
0 0 0 0 cmyk
f
789.995 234.033 mo
789.995 225.294 li
889.354 225.294 li
889.354 233.909 li
789.995 234.033 li
cp
.0705577 .0231632 0 0 cmyk
f
800.004 234.642 mo
795.004 234.642 li
795.004 184.726 li
795.004 183.345 796.123 182.226 797.504 182.226 cv
889.354 182.226 li
890.734 182.226 891.854 183.345 891.854 184.726 cv
891.854 209.249 li
886.854 209.249 li
886.854 187.226 li
800.004 187.226 li
800.004 234.642 li
cp
1 .943023 .192264 .0637827 cmyk
f
923.231 418.608 mo
738.934 418.608 li
738.934 234.642 li
765.18 225.883 li
792.701 234.642 li
923.231 234.642 li
923.231 418.608 li
cp
.0899367 .622797 0 0 cmyk
f
924.637 416.209 mo
914.09 416.209 li
914.09 235.055 li
924.637 235.055 li
924.637 416.209 li
cp
.101656 .776333 0 0 cmyk
f
924.224 418.277 mo
789.995 418.277 li
789.995 407.524 li
924.224 407.524 li
924.224 418.277 li
cp
f
787.968 419.2 mo
737.262 419.2 li
737.262 400.588 li
762.243 393.971 li
787.968 400.588 li
787.968 419.2 li
cp
f
774.379 395.53 mo
765.072 390.773 li
765.072 225.542 li
774.379 229.055 li
774.379 395.53 li
cp
f
738.805 404.493 mo
737.078 399.801 li
764.044 389.875 li
764.601 389.67 765.214 389.67 765.771 389.875 cv
790.858 399.11 li
789.132 403.801 li
764.907 394.885 li
738.805 404.493 li
cp
1 .943023 .192264 .0637827 cmyk
f
923.379 237.689 mo
791.873 237.689 li
791.578 237.689 791.286 237.637 791.01 237.535 cv
764.907 227.927 li
738.805 237.535 li
737.078 232.843 li
764.044 222.917 li
764.601 222.712 765.214 222.712 765.771 222.917 cv
792.318 232.689 li
923.379 232.689 li
923.379 237.689 li
cp
f
767.68 393.389 mo
762.68 393.389 li
762.68 225.883 li
767.68 225.883 li
767.68 393.389 li
cp
f
858.237 327.476 mo
841.465 327.476 827.82 313.831 827.82 297.058 cv
827.82 266.208 li
832.82 266.208 li
832.82 297.058 li
832.82 311.074 844.223 322.476 858.237 322.476 cv
872.253 322.476 883.655 311.074 883.655 297.058 cv
883.655 266.208 li
888.655 266.208 li
888.655 297.058 li
888.655 313.831 875.01 327.476 858.237 327.476 cv
cp
f
892.359 268.708 mo
876.85 268.708 li
876.85 263.708 li
892.359 263.708 li
892.359 268.708 li
cp
f
836.524 268.708 mo
821.015 268.708 li
821.015 263.708 li
836.524 263.708 li
836.524 268.708 li
cp
f
883.054 367.971 mo
873.747 367.971 li
873.747 362.971 li
883.054 362.971 li
883.054 367.971 li
cp
f
864.441 367.971 mo
855.136 367.971 li
855.136 362.971 li
864.441 362.971 li
864.441 367.971 li
cp
f
845.83 367.971 mo
836.524 367.971 li
836.524 362.971 li
845.83 362.971 li
845.83 367.971 li
cp
f
879.918 216.738 mo
877.15 211.276 875.688 205.134 875.688 198.976 cv
880.688 198.976 li
880.688 205.769 882.694 211.156 884.379 214.478 cv
879.918 216.738 li
cp
f
923.379 420.705 mo
789.995 420.705 li
788.614 420.705 787.495 419.585 787.495 418.205 cv
787.495 235.189 li
792.495 235.189 li
792.495 415.705 li
920.879 415.705 li
920.879 200.492 li
890.292 200.488 li
890.292 195.488 li
923.379 195.492 li
924.76 195.492 925.879 196.611 925.879 197.992 cv
925.879 418.205 li
925.879 419.585 924.76 420.705 923.379 420.705 cv
cp
f
987.81 305.788 mo
927.25 341.787 li
877.7 258.431 li
876.732 256.803 876.537 254.829 877.168 253.041 cv
889.666 217.629 li
890.692 214.72 893.652 212.96 896.699 213.449 cv
933.779 219.389 li
935.65 219.689 937.292 220.803 938.26 222.432 cv
987.81 305.788 li
cp
0 0 0 0 cmyk
f
940.458 242.149 mo
940.458 237.59 938.449 233.3 934.946 230.376 cv
918.186 216.436 li
899.54 213.449 li
896.493 212.96 893.533 214.72 892.507 217.629 cv
880.009 253.041 li
879.378 254.829 879.573 256.803 880.541 258.431 cv
930.091 341.787 li
940.458 334.032 li
940.458 242.149 li
cp
.0705577 .0231632 0 0 cmyk
f
932.648 341.487 mo
930.093 337.188 li
984.383 304.916 li
936.11 223.709 li
935.521 222.715 934.526 222.04 933.384 221.858 cv
896.304 215.917 li
894.447 215.62 892.648 216.691 892.023 218.461 cv
887.309 216.797 li
888.737 212.747 892.863 210.299 897.095 210.98 cv
934.175 216.92 li
936.786 217.339 939.059 218.882 940.409 221.155 cv
989.959 304.51 li
990.297 305.081 990.396 305.761 990.232 306.404 cv
990.069 307.046 989.657 307.598 989.087 307.937 cv
932.648 341.487 li
cp
1 .943023 .192264 .0637827 cmyk
f
894.065 241.342 mo
889.822 241.342 886.383 237.903 886.383 233.66 cv
886.383 229.416 889.822 225.977 894.065 225.977 cv
898.309 225.977 901.748 229.416 901.748 233.66 cv
901.748 237.903 898.309 241.342 894.065 241.342 cv
cp
930.232 235.832 mo
898.559 209.414 li
895.957 207.245 892.175 207.245 889.572 209.414 cv
857.9 235.832 li
856.302 237.165 855.378 239.139 855.378 241.219 cv
855.378 347.719 li
932.753 347.719 li
932.753 241.219 li
932.753 239.139 931.829 237.165 930.232 235.832 cv
cp
0 0 0 0 cmyk
f
930.232 235.832 mo
898.559 209.414 li
895.957 207.245 892.175 207.245 889.572 209.414 cv
888.301 210.476 li
889.571 210.648 890.806 211.153 891.849 212.023 cv
923.522 238.441 li
925.119 239.774 926.043 241.747 926.043 243.828 cv
926.043 347.719 li
932.753 347.719 li
932.753 241.219 li
932.753 239.139 931.829 237.165 930.232 235.832 cv
cp
.0705577 .0231632 0 0 cmyk
f
932.753 347.719 mo
855.378 347.719 li
855.378 261.761 li
932.753 261.761 li
932.753 347.719 li
cp
0 .132723 .381628 0 cmyk
f
932.753 346.55 mo
926.405 346.55 li
926.405 261.761 li
932.753 261.761 li
932.753 346.55 li
cp
0 .268223 .467811 0 cmyk
f
919.898 301.856 mo
919.898 316.122 908.332 327.687 894.065 327.687 cv
879.8 327.687 868.234 316.122 868.234 301.856 cv
868.234 287.589 879.8 276.025 894.065 276.025 cv
908.332 276.025 919.898 287.589 919.898 301.856 cv
cp
0 0 0 0 cmyk
f
894.613 229.031 mo
891.641 229.031 889.222 231.45 889.222 234.422 cv
889.222 237.395 891.641 239.814 894.613 239.814 cv
897.586 239.814 900.005 237.395 900.005 234.422 cv
900.005 231.45 897.586 229.031 894.613 229.031 cv
cp
894.613 244.814 mo
888.884 244.814 884.222 240.152 884.222 234.422 cv
884.222 228.693 888.884 224.031 894.613 224.031 cv
900.343 224.031 905.005 228.693 905.005 234.422 cv
905.005 240.152 900.343 244.814 894.613 244.814 cv
cp
1 .943023 .192264 .0637827 cmyk
f
932.318 264.105 mo
855.154 264.105 li
855.154 259.105 li
932.318 259.105 li
932.318 264.105 li
cp
f
894.16 298.78 mo
892.847 298.621 890.359 298.335 889.461 297.377 cv
888.182 296.101 888.394 292.802 894.16 292.802 cv
896.443 292.817 898.88 293.918 899.729 295.323 cv
899.754 295.363 903.469 293.646 903.469 293.646 cv
901.965 290.643 899.827 289.614 896.479 288.969 cv
896.479 286.057 li
894.16 286.057 li
892.115 286.057 li
892.115 288.966 li
891.307 289.101 890.506 289.216 889.436 289.58 cv
886.442 290.597 884.34 292.683 884.34 295.898 cv
884.34 301.823 889.848 302.438 893.872 302.888 cv
893.969 302.898 894.065 302.911 894.16 302.926 cv
896.63 303.239 899.721 303.941 899.721 306.218 cv
899.721 308.932 896.883 309.706 894.16 309.815 cv
890.457 309.815 888.071 308.018 887.359 306.33 cv
887.34 306.28 li
883.284 307.998 li
883.305 308.049 li
884.643 311.181 887.539 313.199 891.458 313.731 cv
892.115 313.822 li
892.115 316.997 li
894.16 316.997 li
896.479 316.997 li
896.479 313.661 li
898.401 313.394 900.274 312.978 901.988 311.529 cv
903.579 310.183 904.42 308.347 904.42 306.218 cv
904.42 300.301 899.283 299.479 894.16 298.78 cv
cp
f
857.654 345.039 mo
929.818 345.039 li
929.818 241.033 li
929.818 239.692 929.229 238.429 928.2 237.57 cv
896.633 211.167 li
894.952 209.763 892.518 209.763 890.839 211.167 cv
859.273 237.57 li
858.244 238.429 857.654 239.692 857.654 241.033 cv
857.654 345.039 li
cp
932.318 350.039 mo
855.154 350.039 li
853.773 350.039 852.654 348.919 852.654 347.539 cv
852.654 241.033 li
852.654 238.206 853.898 235.545 856.065 233.734 cv
887.632 207.331 li
891.169 204.374 896.304 204.374 899.841 207.331 cv
931.407 233.734 li
933.575 235.545 934.818 238.206 934.818 241.033 cv
934.818 347.539 li
934.818 348.919 933.699 350.039 932.318 350.039 cv
cp
f
894.613 278.135 mo
881.97 278.135 871.684 288.421 871.684 301.064 cv
871.684 313.707 881.97 323.994 894.613 323.994 cv
907.256 323.994 917.542 313.707 917.542 301.064 cv
917.542 288.421 907.256 278.135 894.613 278.135 cv
cp
894.613 328.994 mo
879.213 328.994 866.684 316.464 866.684 301.064 cv
866.684 285.664 879.213 273.135 894.613 273.135 cv
910.014 273.135 922.542 285.664 922.542 301.064 cv
922.542 316.464 910.014 328.994 894.613 328.994 cv
cp
f
896.484 229.009 mo
895.824 224.052 li
901.65 223.277 910.293 212.035 910.293 198.091 cv
910.293 191.895 908.977 185.874 906.585 181.14 cv
911.048 178.886 li
913.825 184.384 915.293 191.026 915.293 198.091 cv
915.293 214.093 905.182 227.851 896.484 229.009 cv
cp
f
793.097 420.705 mo
737.262 420.705 li
735.881 420.705 734.762 419.585 734.762 418.205 cv
734.762 197.966 li
734.762 197.303 735.025 196.667 735.494 196.199 cv
735.963 195.73 736.599 195.466 737.262 195.466 cv
737.262 195.466 li
797.504 195.47 li
797.504 200.47 li
739.762 200.466 li
739.762 415.705 li
793.097 415.705 li
793.097 420.705 li
cp
f
955.171 421.108 mo
706.671 421.108 li
706.671 416.108 li
955.171 416.108 li
955.171 421.108 li
cp
f
741.003 463.001 mo
740.282 461.802 738.303 460.662 736.023 460.662 cv
733.083 460.662 731.673 461.892 731.673 463.452 cv
731.673 465.282 733.833 465.791 736.353 466.091 cv
740.732 466.631 744.813 467.772 744.813 472.782 cv
744.813 477.461 740.673 479.471 735.993 479.471 cv
731.703 479.471 728.403 478.151 726.843 474.311 cv
730.144 472.601 li
731.073 474.912 733.503 475.931 736.053 475.931 cv
738.543 475.931 740.883 475.061 740.883 472.782 cv
740.883 470.801 738.813 469.992 736.023 469.692 cv
731.733 469.181 727.773 468.041 727.773 463.331 cv
727.773 459.012 732.033 457.242 735.903 457.212 cv
739.173 457.212 742.563 458.142 744.152 461.382 cv
741.003 463.001 li
cp
f
762.183 478.961 mo
762.183 470.471 li
751.863 470.471 li
751.863 478.961 li
747.903 478.961 li
747.903 457.962 li
751.863 457.962 li
751.863 466.812 li
762.183 466.812 li
762.183 457.962 li
766.112 457.962 li
766.112 478.961 li
762.183 478.961 li
cp
f
772.803 468.641 mo
772.894 472.091 774.753 475.782 779.703 475.782 cv
784.652 475.782 786.513 472.061 786.572 468.612 cv
786.633 465.072 784.652 461.112 779.703 461.112 cv
774.753 461.112 772.713 465.102 772.803 468.641 cv
cp
790.473 468.551 mo
790.412 473.981 787.083 479.411 779.703 479.411 cv
772.323 479.411 768.903 474.101 768.903 468.581 cv
768.903 463.062 772.443 457.512 779.703 457.512 cv
786.933 457.512 790.532 463.062 790.473 468.551 cv
cp
f
797.343 469.122 mo
803.282 469.122 li
808.353 469.122 808.322 461.682 803.282 461.682 cv
797.343 461.682 li
797.343 469.122 li
cp
803.282 472.751 mo
797.343 472.751 li
797.343 478.931 li
793.383 478.931 li
793.383 457.932 li
796.683 457.932 799.982 457.902 803.282 457.902 cv
813.542 457.902 813.572 472.751 803.282 472.751 cv
cp
f
817.623 469.122 mo
823.563 469.122 li
828.633 469.122 828.603 461.682 823.563 461.682 cv
817.623 461.682 li
817.623 469.122 li
cp
823.563 472.751 mo
817.623 472.751 li
817.623 478.931 li
813.663 478.931 li
813.663 457.932 li
816.963 457.932 820.263 457.902 823.563 457.902 cv
833.822 457.902 833.853 472.751 823.563 472.751 cv
cp
f
833.974 478.931 mo
833.974 457.932 li
837.903 457.932 li
837.903 478.931 li
833.974 478.931 li
cp
f
855.423 457.902 mo
859.383 457.902 li
859.383 478.931 li
856.923 478.931 li
856.923 478.961 li
845.883 464.772 li
845.883 478.931 li
841.923 478.931 li
841.923 457.932 li
845.133 457.932 li
855.423 470.952 li
855.423 457.902 li
cp
f
878.612 463.062 mo
877.202 461.711 875.103 460.961 873.273 460.961 cv
868.773 460.961 866.043 464.381 866.043 468.702 cv
866.043 472.152 868.053 475.721 873.273 475.721 cv
874.923 475.721 876.362 475.361 878.013 474.041 cv
878.013 470.322 li
872.643 470.322 li
872.643 466.782 li
881.643 466.782 li
881.643 475.631 li
879.572 478.001 876.962 479.411 873.273 479.411 cv
865.383 479.411 862.173 474.221 862.173 468.702 cv
862.173 462.791 865.862 457.332 873.273 457.332 cv
876.093 457.332 878.912 458.412 881.072 460.541 cv
878.612 463.062 li
cp
f
894.723 475.242 mo
900.782 475.242 li
902.402 475.242 904.712 474.702 904.712 472.721 cv
904.712 470.831 902.402 469.841 900.782 469.841 cv
894.723 469.841 li
894.723 475.242 li
cp
894.723 466.362 mo
900.782 466.362 li
903.273 466.362 904.082 465.312 904.082 464.112 cv
904.082 463.152 903.302 461.532 900.782 461.532 cv
894.723 461.532 li
894.723 466.362 li
cp
908.012 464.022 mo
908.012 465.642 907.232 467.202 905.282 468.072 cv
907.742 468.822 908.642 471.431 908.642 472.751 cv
908.642 477.431 905.132 478.931 900.782 478.931 cv
897.452 478.931 894.152 478.931 890.822 478.931 cv
890.822 457.932 li
894.122 457.932 897.452 457.932 900.782 457.932 cv
904.922 457.932 908.012 459.791 908.012 464.022 cv
cp
f
920.853 462.342 mo
916.952 471.282 li
924.752 471.282 li
920.853 462.342 li
cp
926.342 474.971 mo
915.362 474.971 li
913.563 478.931 li
909.273 478.931 li
918.692 457.932 li
923.013 457.932 li
932.432 478.931 li
928.112 478.931 li
926.342 474.971 li
cp
f
948.872 463.062 mo
947.462 461.711 945.362 460.961 943.532 460.961 cv
939.032 460.961 936.303 464.381 936.303 468.702 cv
936.303 472.152 938.313 475.721 943.532 475.721 cv
945.183 475.721 946.622 475.361 948.273 474.041 cv
948.273 470.322 li
942.902 470.322 li
942.902 466.782 li
951.902 466.782 li
951.902 475.631 li
949.832 478.001 947.222 479.411 943.532 479.411 cv
935.643 479.411 932.433 474.221 932.433 468.702 cv
932.433 462.791 936.122 457.332 943.532 457.332 cv
946.353 457.332 949.172 458.412 951.332 460.541 cv
948.872 463.062 li
cp
f
216.051 463.001 mo
215.33 461.802 213.351 460.662 211.07 460.662 cv
208.131 460.662 206.721 461.892 206.721 463.452 cv
206.721 465.282 208.881 465.791 211.4 466.091 cv
215.78 466.631 219.86 467.772 219.86 472.782 cv
219.86 477.461 215.721 479.471 211.041 479.471 cv
206.751 479.471 203.451 478.151 201.891 474.311 cv
205.191 472.601 li
206.121 474.912 208.551 475.931 211.101 475.931 cv
213.591 475.931 215.931 475.061 215.931 472.782 cv
215.931 470.801 213.86 469.992 211.07 469.692 cv
206.781 469.181 202.821 468.041 202.821 463.331 cv
202.821 459.012 207.081 457.242 210.951 457.212 cv
214.221 457.212 217.61 458.142 219.2 461.382 cv
216.051 463.001 li
cp
f
237.231 478.961 mo
237.231 470.471 li
226.911 470.471 li
226.911 478.961 li
222.951 478.961 li
222.951 457.962 li
226.911 457.962 li
226.911 466.812 li
237.231 466.812 li
237.231 457.962 li
241.16 457.962 li
241.16 478.961 li
237.231 478.961 li
cp
f
247.851 468.641 mo
247.941 472.091 249.801 475.782 254.751 475.782 cv
259.7 475.782 261.561 472.061 261.62 468.612 cv
261.681 465.072 259.7 461.112 254.751 461.112 cv
249.801 461.112 247.761 465.102 247.851 468.641 cv
cp
265.521 468.551 mo
265.46 473.981 262.131 479.411 254.751 479.411 cv
247.371 479.411 243.951 474.101 243.951 468.581 cv
243.951 463.062 247.491 457.512 254.751 457.512 cv
261.981 457.512 265.58 463.062 265.521 468.551 cv
cp
f
272.391 469.122 mo
278.33 469.122 li
283.4 469.122 283.37 461.682 278.33 461.682 cv
272.391 461.682 li
272.391 469.122 li
cp
278.33 472.751 mo
272.391 472.751 li
272.391 478.931 li
268.431 478.931 li
268.431 457.932 li
271.731 457.932 275.03 457.902 278.33 457.902 cv
288.59 457.902 288.62 472.751 278.33 472.751 cv
cp
f
292.671 469.122 mo
298.61 469.122 li
303.681 469.122 303.65 461.682 298.61 461.682 cv
292.671 461.682 li
292.671 469.122 li
cp
298.61 472.751 mo
292.671 472.751 li
292.671 478.931 li
288.711 478.931 li
288.711 457.932 li
292.011 457.932 295.311 457.902 298.61 457.902 cv
308.87 457.902 308.9 472.751 298.61 472.751 cv
cp
f
309.022 478.931 mo
309.022 457.932 li
312.951 457.932 li
312.951 478.931 li
309.022 478.931 li
cp
f
330.471 457.902 mo
334.431 457.902 li
334.431 478.931 li
331.971 478.931 li
331.971 478.961 li
320.931 464.772 li
320.931 478.931 li
316.971 478.931 li
316.971 457.932 li
320.181 457.932 li
330.471 470.952 li
330.471 457.902 li
cp
f
353.66 463.062 mo
352.25 461.711 350.15 460.961 348.32 460.961 cv
343.82 460.961 341.091 464.381 341.091 468.702 cv
341.091 472.152 343.101 475.721 348.32 475.721 cv
349.971 475.721 351.41 475.361 353.061 474.041 cv
353.061 470.322 li
347.691 470.322 li
347.691 466.782 li
356.691 466.782 li
356.691 475.631 li
354.62 478.001 352.01 479.411 348.32 479.411 cv
340.431 479.411 337.221 474.221 337.221 468.702 cv
337.221 462.791 340.91 457.332 348.32 457.332 cv
351.141 457.332 353.96 458.412 356.12 460.541 cv
353.66 463.062 li
cp
f
171.922 1023.75 mo
171.201 1022.55 169.222 1021.41 166.941 1021.41 cv
164.002 1021.41 162.592 1022.64 162.592 1024.2 cv
162.592 1026.03 164.752 1026.54 167.272 1026.84 cv
171.651 1027.38 175.732 1028.52 175.732 1033.53 cv
175.732 1038.21 171.592 1040.22 166.912 1040.22 cv
162.622 1040.22 159.322 1038.9 157.762 1035.06 cv
161.063 1033.35 li
161.992 1035.66 164.422 1036.68 166.972 1036.68 cv
169.462 1036.68 171.802 1035.81 171.802 1033.53 cv
171.802 1031.55 169.732 1030.74 166.941 1030.44 cv
162.652 1029.93 158.692 1028.79 158.692 1024.08 cv
158.692 1019.76 162.952 1017.99 166.822 1017.96 cv
170.092 1017.96 173.482 1018.89 175.071 1022.13 cv
171.922 1023.75 li
cp
f
193.102 1039.71 mo
193.102 1031.22 li
182.782 1031.22 li
182.782 1039.71 li
178.822 1039.71 li
178.822 1018.71 li
182.782 1018.71 li
182.782 1027.56 li
193.102 1027.56 li
193.102 1018.71 li
197.031 1018.71 li
197.031 1039.71 li
193.102 1039.71 li
cp
f
203.722 1029.39 mo
203.813 1032.84 205.672 1036.53 210.622 1036.53 cv
215.571 1036.53 217.432 1032.81 217.491 1029.36 cv
217.552 1025.82 215.571 1021.86 210.622 1021.86 cv
205.672 1021.86 203.632 1025.85 203.722 1029.39 cv
cp
221.392 1029.3 mo
221.331 1034.73 218.002 1040.16 210.622 1040.16 cv
203.242 1040.16 199.822 1034.85 199.822 1029.33 cv
199.822 1023.81 203.362 1018.26 210.622 1018.26 cv
217.852 1018.26 221.451 1023.81 221.392 1029.3 cv
cp
f
228.262 1029.87 mo
234.201 1029.87 li
239.272 1029.87 239.241 1022.43 234.201 1022.43 cv
228.262 1022.43 li
228.262 1029.87 li
cp
234.201 1033.5 mo
228.262 1033.5 li
228.262 1039.68 li
224.302 1039.68 li
224.302 1018.68 li
227.602 1018.68 230.901 1018.65 234.201 1018.65 cv
244.461 1018.65 244.491 1033.5 234.201 1033.5 cv
cp
f
248.542 1029.87 mo
254.482 1029.87 li
259.552 1029.87 259.522 1022.43 254.482 1022.43 cv
248.542 1022.43 li
248.542 1029.87 li
cp
254.482 1033.5 mo
248.542 1033.5 li
248.542 1039.68 li
244.582 1039.68 li
244.582 1018.68 li
247.882 1018.68 251.182 1018.65 254.482 1018.65 cv
264.741 1018.65 264.772 1033.5 254.482 1033.5 cv
cp
f
264.893 1039.68 mo
264.893 1018.68 li
268.822 1018.68 li
268.822 1039.68 li
264.893 1039.68 li
cp
f
286.342 1018.65 mo
290.302 1018.65 li
290.302 1039.68 li
287.842 1039.68 li
287.842 1039.71 li
276.802 1025.52 li
276.802 1039.68 li
272.842 1039.68 li
272.842 1018.68 li
276.052 1018.68 li
286.342 1031.7 li
286.342 1018.65 li
cp
f
309.531 1023.81 mo
308.121 1022.46 306.022 1021.71 304.191 1021.71 cv
299.691 1021.71 296.962 1025.13 296.962 1029.45 cv
296.962 1032.9 298.972 1036.47 304.191 1036.47 cv
305.842 1036.47 307.281 1036.11 308.932 1034.79 cv
308.932 1031.07 li
303.562 1031.07 li
303.562 1027.53 li
312.562 1027.53 li
312.562 1036.38 li
310.491 1038.75 307.881 1040.16 304.191 1040.16 cv
296.302 1040.16 293.092 1034.97 293.092 1029.45 cv
293.092 1023.54 296.781 1018.08 304.191 1018.08 cv
307.012 1018.08 309.831 1019.16 311.991 1021.29 cv
309.531 1023.81 li
cp
f
340.371 1037.04 mo
338.211 1039.17 335.421 1040.16 332.391 1040.16 cv
324.592 1040.16 321.292 1034.79 321.262 1029.33 cv
321.232 1023.84 324.802 1018.26 332.391 1018.26 cv
335.241 1018.26 337.941 1019.34 340.101 1021.47 cv
337.461 1024.02 li
336.081 1022.67 334.221 1022.04 332.391 1022.04 cv
327.321 1022.04 325.132 1025.82 325.161 1029.33 cv
325.191 1032.81 327.201 1036.44 332.391 1036.44 cv
334.221 1036.44 336.291 1035.69 337.671 1034.31 cv
340.371 1037.04 li
cp
f
351.081 1023.09 mo
347.181 1032.03 li
354.981 1032.03 li
351.081 1023.09 li
cp
356.57 1035.72 mo
345.591 1035.72 li
343.791 1039.68 li
339.501 1039.68 li
348.921 1018.68 li
353.241 1018.68 li
362.66 1039.68 li
358.341 1039.68 li
356.57 1035.72 li
cp
f
368.421 1022.37 mo
368.421 1029.09 li
374.45 1029.09 li
376.971 1029.09 378.051 1027.41 378.051 1025.73 cv
378.051 1024.05 376.941 1022.37 374.45 1022.37 cv
368.421 1022.37 li
cp
383.061 1039.68 mo
378.351 1039.68 li
372.231 1032.66 li
368.421 1032.66 li
368.421 1039.68 li
364.461 1039.68 li
364.461 1018.65 li
367.791 1018.65 371.121 1018.68 374.45 1018.68 cv
379.4 1018.71 382.01 1022.01 382.01 1025.64 cv
382.01 1028.52 380.691 1031.43 376.7 1032.24 cv
383.061 1039.41 li
383.061 1039.68 li
cp
f
391.04 1022.28 mo
384.381 1022.28 li
384.381 1018.68 li
390.441 1018.68 395.57 1018.68 401.66 1018.68 cv
401.66 1022.28 li
395 1022.28 li
395 1039.68 li
391.04 1039.68 li
391.04 1022.28 li
cp
f
767.283 1035.87 mo
771.603 1035.87 li
776.373 1035.87 778.263 1032.39 778.173 1028.97 cv
778.083 1025.7 776.163 1022.43 771.603 1022.43 cv
767.283 1022.43 li
767.283 1035.87 li
cp
782.103 1029 mo
782.192 1034.31 778.952 1039.68 771.603 1039.68 cv
769.023 1039.68 765.934 1039.68 763.354 1039.68 cv
763.354 1018.68 li
765.934 1018.68 769.023 1018.68 771.603 1018.68 cv
778.803 1018.68 782.013 1023.81 782.103 1029 cv
cp
f
785.073 1039.68 mo
785.073 1018.68 li
789.003 1018.68 li
789.003 1039.68 li
785.073 1039.68 li
cp
f
806.282 1023.75 mo
805.562 1022.55 803.582 1021.41 801.302 1021.41 cv
798.362 1021.41 796.952 1022.64 796.952 1024.2 cv
796.952 1026.03 799.112 1026.54 801.632 1026.84 cv
806.012 1027.38 810.092 1028.52 810.092 1033.53 cv
810.092 1038.21 805.952 1040.22 801.273 1040.22 cv
796.982 1040.22 793.683 1038.9 792.122 1035.06 cv
795.423 1033.35 li
796.353 1035.66 798.782 1036.68 801.332 1036.68 cv
803.822 1036.68 806.162 1035.81 806.162 1033.53 cv
806.162 1031.55 804.092 1030.74 801.302 1030.44 cv
797.013 1029.93 793.053 1028.79 793.053 1024.08 cv
793.053 1019.76 797.313 1017.99 801.183 1017.96 cv
804.452 1017.96 807.842 1018.89 809.432 1022.13 cv
806.282 1023.75 li
cp
f
831.662 1037.04 mo
829.502 1039.17 826.712 1040.16 823.683 1040.16 cv
815.883 1040.16 812.583 1034.79 812.553 1029.33 cv
812.523 1023.84 816.093 1018.26 823.683 1018.26 cv
826.532 1018.26 829.232 1019.34 831.392 1021.47 cv
828.752 1024.02 li
827.372 1022.67 825.512 1022.04 823.683 1022.04 cv
818.612 1022.04 816.423 1025.82 816.452 1029.33 cv
816.482 1032.81 818.492 1036.44 823.683 1036.44 cv
825.512 1036.44 827.582 1035.69 828.962 1034.31 cv
831.662 1037.04 li
cp
f
836.852 1029.39 mo
836.942 1032.84 838.802 1036.53 843.752 1036.53 cv
848.701 1036.53 850.562 1032.81 850.621 1029.36 cv
850.682 1025.82 848.701 1021.86 843.752 1021.86 cv
838.802 1021.86 836.762 1025.85 836.852 1029.39 cv
cp
854.522 1029.3 mo
854.461 1034.73 851.132 1040.16 843.752 1040.16 cv
836.372 1040.16 832.952 1034.85 832.952 1029.33 cv
832.952 1023.81 836.492 1018.26 843.752 1018.26 cv
850.982 1018.26 854.581 1023.81 854.522 1029.3 cv
cp
f
875.852 1018.71 mo
875.852 1030.74 li
875.852 1036.95 872.041 1040.13 866.762 1040.13 cv
861.722 1040.13 857.432 1037.07 857.432 1030.74 cv
857.432 1018.71 li
861.361 1018.71 li
861.361 1030.74 li
861.361 1034.52 863.522 1036.53 866.791 1036.53 cv
870.062 1036.53 871.921 1034.34 871.921 1030.74 cv
871.921 1018.71 li
875.852 1018.71 li
cp
f
893.522 1018.65 mo
897.482 1018.65 li
897.482 1039.68 li
895.022 1039.68 li
895.022 1039.71 li
883.982 1025.52 li
883.982 1039.68 li
880.022 1039.68 li
880.022 1018.68 li
883.232 1018.68 li
893.522 1031.7 li
893.522 1018.65 li
cp
f
906.541 1022.28 mo
899.882 1022.28 li
899.882 1018.68 li
905.941 1018.68 911.071 1018.68 917.161 1018.68 cv
917.161 1022.28 li
910.501 1022.28 li
910.501 1039.68 li
906.541 1039.68 li
906.541 1022.28 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.1
%%For: ( ) ()
%%Title: (J_0269_1.eps)
%%CreationDate: 4/1/2019 3:50 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l!)WZq`+Mdra(rk6To<8:pVg*9"G/Y"9HI^6Q;[rg=euVkJcn.J*q[OR:O`(D=AdJ/Z39ka^f#OI@2Al*Yb'V7^^f,0/W]8
%af1;sjd%c(F`Nr:kdb9V[I3tMK*O&F#@V8<AmWqDSQ3/jMPFp2O-\C'_e(ji?.EramS^C>]*]M5rH>L[FumTS^"MhTjGL^(7W(.E
%LFY[YI9<[3J*%+2TQ1A5GamiP?`Ss2Z[ER1F&lUUL&)+fq+V+^Jd1^+/%8;4YFt)5lulffco+pS:u$K6/b]RjH/!:T9nb6dmAd>*
%^*le^?X-#W9KT`QnK9rtFh6t5>AH,\5K9#%9oF<]$sNa<JA)!kn8A=[k"=T8d&VA)8@c5GI-j,C@2"R0]bZoUfNhNQ@5l(ppcnTY
%LfaHP/Z\Y2Xu?%a^M>hmB2Chiq^(SrUC*<M1JG<[nJfu/%^9Jp%?_mEh/$@#mE<e_BT.-VKibC&cj^kBBSNDGD0E*tRWdP<H:&(Z
%bs6*V;:UZ=Acj3B<S,[jVJQAc[]5-MeM-QKBr_*NR(:'U[IE?OmU[57_`$[$YMD@Cr<'^,Wg])P/a,7l`iC*Ol='QaUXfU)/QV!H
%X`p8bYRYls:&4I40pdPap<IFn"mtoc$^/r>pQ3lT3Ca\5?M1IEJmT\l]tle`CP@bCk$'`WePQc@W3,3!a"_UL*\a?k0NJ@g:imq[
%=fa+oW2aU,CW8TO")JG$'"ureL]"@eEj=6!S_"c1bI3mEG$L7(_<#:(?)ttS@r")[hH1S>7s_`*`J4uFk]Xju5`i":'R(i(<:[YV
%]T8hGhUQ<bW$*oRLV9']."IgF8jPB9W`uK4"6og1'n1;C%U<#l:Y5-mZLH[mn\&$=V7M\Z\rKj7*O"`h?1iVh45FLO=O"/@QXsS_
%bJJ"[jnkcLf>Tedbne%*0"]q^Z'suf2>i3t=KP]DC;hCR=tJZu@M.r$5$mo1b@7sX5$%0$\qpVc6`(GmT6(fd("[S=9DlS?#T(3b
%22"Uf9@j_'I)e8R'YZBU"ZkjZKF?]-(BT<ZfG#KeRRWt>S\^=nYSc?9?4!Md!j%-LiB,W\I4Q%2@Y6%%'.sSkpeJ:2oE5.'T12?L
%Zb[#IM(8.QeIY2ta/4ZS"?BcJKYoHF%:Ks8-IgDe#U@(D0*IC3!8mV1YmB6l)T%=!6qh&+68"5tq\6]Y"tqr-OH,&d\Ar?;4FnH'
%ScE/NVkHu6e@$J=<=s^_#6>N$M?'s:$$*V90]G/p,@3kW#qpBV^1//d&8i:h/gQ;#7strH$[*:Z,P[9.Slg`763rF@/Rb9k8%>Ig
%$$g@VJhR6i)Eq18rDW=;!*uKe5'R]>ibY>P+c)TVfcRJ>/H'Z$gb,B]Q8=)n=:U/9KabniaDR'L8P";(D1V#?)E9'p:3LuC&i!WG
%AC31j9Xga!^d%bXW`%r.RRWY':\ljUqAk(6+5Cb&<"si1T5E'Gplk]m19j'aM0aC@TBFUuplk[a"o96hdN@7N.T'(@8UohWrJj,,
%:Po(\Sjs^Y440CDMdQ+50PX))0`;V.dt<-F!FBBH:UiQ'eR>(pqp7ubaaaDthkj=Cq\6`)W&!Y%h*/P&NTK&MIFP11bJ+5X(sJnO
%AeJnnULs(51J4%]nbXo:l'$#"eh+0]1"?.coR-/CgB?j@pGC-5Mp*$@o1Q*7U[^uL6*Lm6TY-B95^u76Icj`O,;Y#pe(JQAQB42#
%QWYf(X6sqPbeuE*b5;)M9M:2\iEN<!Hq?&+Gjt.\"fUi%QD(mR-GF!#%UgHsFk=GiN(&^dPRX2g.Bnd3i$Er$qFr+1-L(`k%4BrX
%94P30j&l*7#o^TD_n6dA%$nND2S[MDda7f6+KW\'[oE:W?Y'r>PqjMFpJ0?V=I49I+;dUgW*C\':j#&DfDcbH5a0i4i"CerK?cmj
%XFtD@GXe4`-S[*K5tS=k_8Ylm0TM"GY,8fr%(k._s%>n76o[JkrhacV^KW19NjNf%*5.^D%*t6^ku$Ni&;`?43,qSbe`#^98pF4N
%N,@c/<YuC4+\h0sLcWIsUPYa2=+^.q.j(>("W"U>M,]`n_ee!7S5L8B3:,:]a0_@C64*/VmBMaL3=U7!f0MilhraW68UeNY>_+Ef
%cc<pLl#mK6l2YmaGaTW()n;H&Xu+;A'9p?gF3N,#6F)]]@Xn_V^Xa''b3;)nWtDG<6K'T8e.!*0gGV[4"0\u%RS3"a[/e=\TPH$c
%9p.:U3'uaO_BBj*;.OO]^bc9F5dqjj6/G9Zl4CBq.)LR084'$4g5`;Pb>*LAfS<`fFjCX`:-&]lJYk^h+Cl*'#RE0k]hH`TYWO#;
%MCU6\Bg&?\`fUfAP?es2clBZVK.knhbs<i=^]@(&D3t$9'hT#CF.A@:no-T9q'5IGOEG;9IVDoFL&#V>F#,QXkm"0K8&eM<koI*,
%/t-\*eB(OT3r[-c;<$/."!u.5(d0jU\?6JsVP?jdNZb3,nXqCEpQ4\\%=6NOHlj\>,ICj0e"+[Gag<(ELKc>)DD;>dF7FIJlkVIF
%ZojSg0=\^R"*r&MaU(N[V&m0bF?RaT0j(KXDnA\^+YVIo?n`T)<E9d<YtB#W8\<$CS$3>rgI)]ZogDueO&Q^%<!#3!P/]f/Uc6H"
%,Q;>jOREV:FU?Dg*C)u`7i4)pKklgp,9)TT]9Z0o&ZQ![(Co1J+b)5@3VXQ8`0^]n6c)_QjE]Q9ADP,YEM%@>8E,c"+B\g+q'aPp
%'AR3PA^BI4i[5rq_2OP;T9;u3g2@f(Sk5JK%L"4"[Mt@NkpMuD--3U6Bb#PahLuA\lp6Z;E.XaK_GCKA32!'`,U#Ja]!dRtn/((k
%F7I_#2&Ad*/2/5l>TaebF#OSk(a(;"+JuFhH>3pf(GAUg^/$GHW#!OE9+<U/a7TW&*4)X'Q>GfQ[51D.R>#c8:]euGp0t)t8X)a!
%CD#_17l%)TLuSVtj"LYO,9i*[]b$V$cQLHD;).cPdUc9&BUj0R@T>G>Md\O]`*>cg:ePU>l$8@EQi(u&>E&.W,EF$"l$;E7$;]+A
%aUj&c3[hM,TK42.9V;PK[h(MMj2q_iS/!8'@Y[)>@abUP<0`T6KMNE]a6#q)$^F#TMQq=R1=5eo=LK5dNAk$_3GCY%Fc6U]#pH@0
%j<D!?,GVggg3JsKTm,Ia!',,Nd(?M^j=/BaVP#KH2"ioX)*-dQ6:[]@[KsQD.[nT@W1G$EOMGBN;2R.4I:OC0F37>"e:Qg;G!Rr/
%hMVR"TU!VU+Pb0qE,;CLaN'N3?m3WHKh(0qr*&`k'sc\hr)%QA;Aj!PTHCT*RMlMHI?-d`fqks1(WdO=I1%r.`UKD&/_>,3dn@P<
%Q>EL<jT'\,8>6S\Z?\>qTBe4K$U?BnKb9?MbrDHn'W(s4,lrNj-;k>,qLYH(1l.ks`q'\^'iBK,%G_R]!AY:D0^-8>MN\JjfjZN3
%IEiR\IF(P(3Ml6(B`'5R<'e.[EH&I#jpM(_a:A&<'04&``W6pu#H&*CKe\G2";?VO5[YAT_rq"TOLDpW4qeeo>mq/,cU;[YS+G]G
%%_8W.GF+3VTBU?6dP`tA/7aAMV-bFC3J?SW*"#9G0Sj6KaY_a%$5J16-(aq8(g=g1;OW7cNAPS]=U!ru#Kr8>g]8VqRN;em)+8RC
%2.,!@W3*90)QEd5(%IoW02G$u23<n;OsuE!(SVe(kYV'W-FT>JZL&;!Bo0i'"EDM]q)h,5K*T',4<?083n`%n_?eEN-C7)M>0rX!
%/2/'^bb_'"fk`.%[$Y^`G,trQ6IQ'odK!,E50>9oQ!$S@C8f5@U8qBEi7PXhlmh95]p*7G$bk+LOd;CAib1VToID,!*V/TZJY5dS
%.\h55O\s)[GEJ2#MZo@`cTu#0^(%eY&&^M?qW(CBUa/L8;H)@*D\:7AK>c)<B]D>q#o_p(M.oX".?,$1@7<-nP]!:sqiD`l2NaqY
%11FKKB_f_0-B!X4\D;sidPsY7(13Hi8InN4gW3\Hg+<q:7S3o6)3t=B6;$kQ&G$UL3s7A1HCSL_DAYNDZL;$h;Zq43<?Tn`3>IM9
%aY_35*$hCXV3W\s2*[CN:e@U,n0J2OI6*\CnL5kQAjYg<XCZ/1>Jqk/BW`J@7H(1CX=5#b,[<q9W]&%(i%#FA9B7Qj16.L'PgHdi
%H%X`\Ori[f(UJf&B<D;N?-]h@]28p#A]?"CnIuTSGtK;NDDX9q[-Z0/UF_TAJJ""b(K^t5SB.ldLh9+l>1?8uD7Bn:"Oi8\.Z6&b
%5_9Wi!9:>UnE9alSXQ(88/b0fq@J6<jO4_OM\ero4AR[gmF+ilH3o5G`bI5,$2%aP"_9su69Po?_n@%X69KT[6pbc905cHUPu7C3
%rJ^uhi/]%GluRJ:q)jeXosm60VGR17Ph7Ys-"hpp.<P2s*/q$tPVb>E*lXb=mLr$Ln?>:f*V7;G8e2)NZ8"A9JkD,M26&bdVht&T
%M^'A\([<2e,&%$"(@>PGN:Adf/so<IHiue8`:datobis%:+98(*g-\Q_$H(9+tq]d+IR`EbUm@.kjjh].+"j;6(OC+l3&a3aM&e=
%i8mK_2u[>#-]4;ckV8EC9`-NM+q\^#dKh^:Q;8KJ?]fT\jPf;f0X@on@n]\-ZG!2#F,:3l;8!N,ffY,<5&llJ=d8\4WV38U:pMj^
%Y[m\X\rS"39WJ*B=C[MRj$#tFbXR*A=;^>/%".j5^l6q=4qmX\a@%1)GJ6[#1b4J\(m?U8Ipki-X7;9,P=]h(#)X,:4O*jEBR6%7
%2;#N4(%L%gL,n52YaLHVoUkB2IShX3!2(a8F3_<M,O-[pl@2*`*];&K):N.Q9a6;RR\(&`3"hg`7!6S`H&Pl[s6c$t`N\`mWarZ7
%53X/?Gu@oBafs#%9M!0!mZ_b"88=OrT\6-u:jcV*Oh^LUVPl;"9"k8M1:dEN@)o4(/.6LuUqg;4ceU/=UHSifr[ldC@/fm9jPC=1
%Z7a5s2c,hn9Mlr+HdHC^'7HM#%-\e;W\ZADRe\a[:9K(^9K;Wf?[qA7IhVEfF;L[8Q1&V=9T0eJ57@@ecPS>8%d`5oR!Y+5#PXiZ
%h([>PNbou+q:A"]m5%J$-G_T"(/0OGVWFuZFD)VQYMc;^;s4LbKCYqqK5:g'.pq=J,@W)W>PtMLU(gdip\Sb?ou[+0IE[VnS\rl?
%1ha<M^o%p]GJmru5&B8'"kJY(;pnEts$^<MP82?#7n21l/#j37P\?<tGDg&2fm%GNYN$m=1,*s28Fh]#/0eG03HOX:d]Pd+;T04"
%l^qAsF05M!2OY7Ge-4r&0GDZoNAdo2:9L<<&>KrKR(Q-@&mrImH?%Zrjf"BoRIK<pCm>s3QhC1j#VrV`OZgde,%tRT9Ys>BpN[i[
%'bg=]?_/@C?r)op#VnS7S@j\Zq>""X\WhKkG]Lap`)NVT^2kSH9pH6WK,`lsZOari>qmRooF_:jR2dq7k2'"!ag.!r;_3[BeogQ]
%4Pm6gHCD/&'FR>_:-T"E,:j+c_6>,,D2]YT%Tm&Ia]H-,@^0atZitaO!cO<)Q\j$sl$l:V`Pd\6DV8LO-Hh<'^eAtfE2oUf+p1%<
%T2-l`]S@S#\'4*9&kCr51Hr<>_rPkl*'V)`L%?Ttr9a"Xna,so>/Bq<(V(&(+//RlfIQ$faVF(EBAA^B&7Trjj(n/&$?(+"==TI\
%Ddn/2:oE=$"^HC@^bN$UZq,dn*#,Pipd,0<\gj.EW(I)]Qs^RSK96]>O2rW^fYgD[':6\V9;F[Wi)qUr*+@_LN170sS@1E`o$Jqb
%R!d;i$aq^>mo(B3]oa70"=%nd)+uV8#=]%8NKhOJp/rqC$53"5cOpTn(Q0KR5E_6XV`UkK/Q.`qXgFd51:1/JZDY)+abuulRZE@H
%P>%8P1aK1P"i4\:.iS=s`h0n+>+Cj7P`^%(#W--R0!.JPjJBtX4431Sf2e)6Fn(%u2F$TLPN[HP#G0q:$caO$D/@Uc(,]8\O?ANq
%NaH("Kt-#L5qGKk24hb':'CGJHkVE-HZMm'R)`_Pq^CmR93181Y\#\Q]Q\)@=%oH:W)M.mF2a($c<#=R=qEMZ2(d`+TkOfWPVgfG
%9OqGg.\CRpTUGe.iN[)hMtF'cmAM%7bbNd;DX!9]9\Z?NB-a9">F+Klp`[>k-e+kj4t25LgE%>)JZX_a8076X:*i(QldID$9L(<C
%b^I&G!CDBT(i6e02%Gt^a;hM3!m)Tj045g:2E4u[GR5^.L-(iL+!uVFccbVmn<1FrQ=aX[1qMrr8::+KaVM"f&TC>=:PY-.Vg/sZ
%"NKd7M)3s3)+ToT]YqQ(82TC"e!9S7Vj?!%1K5KmIYBk:o2Po1$1o6AHbe3NQB@WGC)V;/!SQ6o0clN=Tj;%a,7otF=VD5Gdk?Yj
%IRI3tW'i#%;\RA/7qQEGM=d@i,nT%Fahu*[6nU,rDoUQtK,.rQ&u'm;dP<,jV]E0P7?@lkLl"GtoDg9M\^2.NKh,@@I4)c6jU<//
%dj5f4BKY6;$ulYb+phK[=D8,+Z$!FjN,/Sg>a`;u'HKarR8On$1WY_7L@<Oa!gg)W<2[N46OA<4f12nX:F?tD6G`kNrd:7Oh]q(+
%)L:jE$U9?9Vr-)sI0aj:=MkOpIGPS%XLN+W.Zr?dZogo_.6V(sKG,,\fTB_p$j)<pn^4XUqTV7\UokZ!-XiYb7.6r9lLQLe(K1s<
%^qt'g?ml^XEFb)t0m7&lJ;\N'_;[$.M"Q6KMA0+(s#!3rZ*;2gL#[C_2`^uR20(Y&m6Ih;I7P?1AD]jfNQ?^6?Q6P6/oA6DS>0j*
%Wm*iKk-:*dnZ0PfbnFm:qDYn+fT5-HA%phHjOfOK6+5c@)jMj0C%0LO8<,[Dpt6C?L-TmHB_>60>DETGD^bbUrZuhWBRj5LLIk`%
%>>V,hWWMY3*[W4mQ#s:^;']>qFA%6+0C59rA>V-JSU7^MQ%^`Bj4'PPTlI5-FHH.\pju1uPc75MUTFO+c,-pdV1L.2NMg#j,<^@L
%@qs;HmfXVFAc*sr`A!huVfF"N-@i!t#F9%C^`;+G-(2-@JoRa/(;R7VRP$4Ca+]?q8XL(I&Td"_MX?,gdaZd:Pr&PKNm'pA%$u(`
%Je#HLE7i_nr+'It9S:AE;#ikEkkE'BnWjik6Z<blD#dtYE(-m!$iQ!"<rlGH^9Q1ah@"p$#[S9HPt)FH>Q^R:,EmaAh)/Bb`tkn<
%q",cI7>fg\,!(s--sa3O*HB$kk9?b<9h):,B`WI`N2r`,<e-?h(c`C%JI2o),HI#k+chht7!#e]DST+BV7S^iUd#jbf79B19]A'n
%$N`*3W'u*!Bl,r#EEXRNo1g_30+a;0?<s#$M;9G)4"\<>;D_Q:"jMb.nRNlf99quW@mD?genpR.'g6mD!4e2B_fVHj;[BcFSa'Xh
%oo4[t+Gj?u4u2@0DAU<A`k@bXa^gP:m\,AmEnD[AU5lqshdF:ML*r9RM\I$&0FOHo;oeLKL9-NdGqt41>G2MYRhWmOh/hOj3+ape
%+ZC"D7WGk'HC6$_CnJ.qaC:WjC_A.fne,0i*E/J+-&<rr0Z5<><08&_0UD\^ndJZ08"9&DmQBG>$;QXY2kV&mO<Pih-X&@ddr$EV
%,I;/Sr%>'bX>Y;J^-&N-MA_2sH_VEJ7L''Q1iIqV.r^!M1\;H3NTuArRDbL(_?EM(4iRBY.W-pe.S1c>Y)r.@d3;gKYr>M)cI2>\
%9["*4M1`b=U0Zuifm,h_;L4I:D1)/fA-sf[.O07/H*MTi(+;n<9EIl!Ljef8]b#%YQ*[[Y&h)j:\2SG`p<,_F?66`_Qq,,2bc4+4
%q;kC-OX!CdA4pO`39RniB-JFD]W"k&JrG_bL<`69W`gQabUe*gc):?dq)+Vh18ChUZsI3A)3:UiifXtCCl'c/"tTY^Y+`E:``(eG
%e]3'si7V2?<HbHtMhc5i)]KA(MFHa=hP]_dB:[I-@r9H]o:oWeRd-(rcPML!\Eo:P'[DPtI:\cCH05\[q<2+"J`a?eOU"*@kW5Dk
%7P/!De$+o4m)R;j_=L[_n_/;thHM3^L4P3%Vm*E-<sJp?n].A!UqCNd]s>'2]#RmSMtAB6hdg/6hpQkn3>j%43`h/cAr7\cjH?6H
%Tn-j7_g0>/BKe#ec\=h-b8mhiSMiF2g_`h/E0WuIMNlXf6b/480ei\#(o`=**$8tO-%!^\)_,G+<+A%cMLg\\^nNq.V=j$kQ.i(^
%>Ad?fIG$e_$(%f/j]-LlN7;u6;eEtRII]PZf3-";PGl*bVRtO3qr9Nh^WSOaZV/L5Vf%jPpbf/Q%bnoQo5DH/>0H-HRs@hJ<:R4I
%r+iQ_Kb*spLVhC_A+n[%HLmY6NIS0JLLI[D\jMOs@0J$^RW(WrJ^:1'o7*t-RWGcAn%lu&G-ffSCn*BOr83*-D4ZKm[pc,fCtJXm
%X1>pmDt)e,DLjrT.X0AP.aSCtNp>\X>3k^G#5rkp%Wc_,mU\W%B9rEfiE<L8'fSCSji3@chJ>am;nX_6mam(\d*Am(;1gs<+)iM+
%4N1$(`N]4l;k%4-dfQn\<`kp,p.&)D/nO9^Vq)\uJs?N,ma#MB&d_UBpXfS\RdGLtG;ubE_oo8g\`dsqQi9a\SSkVM*r>bP2R&`Q
%:]WJQea)_"fW<\?eZaI(C"H*9J\*"G062bmfVis;ACAek:e3\ubL0iSJ2*S'K@WJnOt3ndSVu9#ZWW>m+*'O08\W1siLO+44oBGF
%g8rme=&CnsaZa+C<iLk0^H11))\_8LVqR-D#2s2+$=9DJ!3b4TH`f7&J%)oNY$jK0`EDKfYei(MXH2G=W#o>.?+hqK52IZD5-@ld
%CPUa(W[3+"9:d$!PcHZ<,UplVA=^W1!@Xh9g?BGg7p;J6)PCqfLV6kMN!6k>e\YrZjpj%r<li3Te3&\Z1f(oub1:WZH)t:O'tSYb
%ForFb(E^Qh2#<eJJR@khG@!/-+o>TG<U__g62T9$9<5UW^TZo3\@;s7!DESM5T;=A7BbMWqWh*5C@u='Cp4g]mcc&8[HJgKFakRe
%E,e0DPR!7j:Cj/H`d+l<O.b@i[=0<V;lV^,/#iaTi:WD5)OQGeG(.i`!0*p:.<)Qmo.'n_^SVs'^GCE0pZ+SQ1+uaUp?QsZcBu,J
%7quXd/Q$jm:jSTY?G1InS>bJaX&Ur@Kp@t0NHj0!@^jrQm=@3!$-2(XmM_"CW:>]Ee7]nHCLAp<K@=9%n6*,$3&a]]@O`_.R,\3/
%%6C3?%_qagXBBXW?i<OsVi?J5dC\,5FFt['-mi#e'MKo]j2#JcSR+I;Pnk)j.\!e"X/!Zs?K6f2j-59Tk0]Qg@\V?jBagD+rE*i5
%gkESh3&$f'OC^.%^_0_>'L7Gu?Fphf:s'phM)%qAipsrqYRZT615O*_NIlF^is5(\'V=DekFp\\!Ab8JV@/'&-oXkoS1tQ9cIr</
%]Cf7M>%\o#bsX7P+oa6kZ!7KQSB#[A=Df2'c"";0/GEM4jc%q.b@L`eAn&;^m1r*2fmoI\GRbpg6MMe,+'o*#k0NkQPqXmCr;3h_
%AQh7Z::FC6J(+N>:So7)Y!+;E:@#SM9/XUno1%*mFD=+:O:L)gqop#2XdV\\=/S.$XCflFeHr8KCuR2Bg8fLBed8r5Ug]!hI?23&
%P>[u\Ys>5=4prk!@3qjbaTj/n:Q!unkS<,-`CdJnCp3cL8<:e(p@D?D(oc@s-2^PHi%k>G?CK[IO8<6No5kjp%&!%=K6I(Z<jNAr
%Z@FfWbJXD)%UZKok]DGm_&(uaUB(V<Omk:N8,m*bb!-OJLXg3K9RB`WAqD4R=?fA!A%u/^FEb#:KpHUo(l)?qGIW'l8Z1a?H%Ge8
%^smZ7s(rijG%Nb39`nqq@kRE_`5#!/@]^'9m4p6oP(:B9C4Ge0Mu(,WT_?VsLGUt(0W6e#VImU^#45Ugi[X;,R8]\+X*B9gjV,ea
%FP.6.F6!$[+b/3^lZFtrZa-H<2f,+ALrl(WG-VM0mA.d^Naf`Fk>1o*l?njm)Di+7jc^"@WQtf]J76S:q>=k`D%rJaHD)@6s(%M*
%]C"pOe9m"Acg@B/lXccoW&Q6c<bq@Nb@KrJ`b)\kWEBEBAnFdr$U+KnrjX\4Ze95%i;&*F%.+a`+`fM!okNhO.'FTDJi0[7ba$ep
%'ER$AorsiB_G.XeB:(KD*Vl;B/rc>5n/5O9Ru%R&/f=39rNirE5D)$[UV$CZ/1[@'h>O6SU6h9&4;i[;'uMif#8Eu91Qo.Mf"Dl`
%h/nd9WMY.GafY%::,B-)ltEF.^g'B69kI9J_ZX05,%rgMqI*K=%i*2AT/LZ3Uu4>U0Y)@Tp]bZ)YdGq13j!^)$1T/q]0U3Z9obAM
%s)J3Ke\p)01hC%#pi)te<%F)F=6iog1m_Y!G:(2=dgS7Efs+Bf3+26QFBfD:c0gU$[HZ7\R:n>BU7Pr"j\29?OWc_=4&V[OR+o>;
%jXfFISMTudZRdVglB<HkP30p.8\+=QPP3r--3[!Gf'G<$3!mh9_N9<geLW*7:p!<?;6Mjo+N&O#8l2_X2R=rMQE!]bJN@R*YHisH
%X#;CdK)3gO<sChj>LO&8)6FP%S.nMRAg;pp%P!b#<H#f2()\I0nta'9LFi)C!*Q^5_^C7PJLd`].B#"HEAD4%o2c?VnaIjj:Gf?_
%)RZV>gpV<',Idm^ZRn91PpfQCTN,mY8sCmBbY%_@L0(*[,/^bq`dB)TXK=n$`=EF%E[KPbX[T5EVR7gTJ=./$1ZN7J1:WW+Z5+`"
%;bd9qP[!)W<,U/gPUsVof:pL@UAPt]k#SWR;?$`6;)0S_BijW0C+W'>2Q]Ei!mI`je?ck),nhl-?.<fY>*R0H>)SOIQs#RJ5<2@m
%Med&_dIJ2ZA!43hmDJNNXmhcX@eL;0QlSNKkU7c<Jm3AHTso;F@V<QJr8A(3/D@9Y)8Gu=58-8cm++=Iq3n5*bk9\4oU7YhCDfr&
%f5#H@2V2_#U"@G(.%.\_\'&%bOf3?'2V2^DD65^?eo$bZ2V2\bXnJC<C@[>1aTUb8V[Xpi;"24paj/B=i*;5D01PY?N&%&6/k0n:
%9(7e=jNJ%5&IIZR9FDK0\s)^)r\KTNg9:Gqf(\LHYEK:ZH(6d!Xu36<=fmhcXNJIRW)aaW9::gpOQoSueEub*R<f"Or*5\IJYHb-
%AHiWel*Tq^Qgp`me=eMd_bdYcBmpoA9gLY^C&4SPThIrSjj[:)af-W".lhjV_KYc[KaYG\g#Fiu#in#o^.b#3FM"./pFcZ\P?FNI
%ks=>cZ\Ugb3<-s/r3J+H1%dWN;\diac6?haQtb0uQ0))Ifmu,1YEu,ar^VAp8OZGid*8@%aH.d\9Nsh.'*BaZ/:il`L9rt;":W9Q
%?0;VMA5U./'@ad"k`?!]!X<df0O3'_SpHkCZtnKUX0A)4`6XZb]Uhug.3!P"LG.Kk,<:Yq&_EiGbU`sen+<*qs3BeWVfVi]!XB62
%)_]P#J*6F<oD.;$K&]lqe71]B4.lPDci;k3pP:W@R^/C0PFTtp:2+<Ub4?qN3T'Y&msNFT]&`W$f'CSQisAVeSR6K4_K#g@W6@Ms
%rYm3HJ7k.<_i/6A-YcF3<7T^U=g&JSRgj=.)d-.X^`=*[)D\8^?Mb-N_Q6-u<hFEg2sloso>rR>8spikB?93QZDDi$m#RU@q."@+
%)7"OBCn;dh/lW_*NnI3l;&$Hbh@@HC.X6g/.N%1!H#rXKX]Z1HX6m.&g2%"Re9UG,rbN45bK5jk%0!53ot"k`;G?SSW&Z:ZZnd.F
%f&9]Mr0^N._J,H:NCC39W(eVM2Pifm`XZ'c1Wf?`N,E^NBV'U=lJt=1'ir-#C>[[hJa)8W%XIm=(:^T:14"S^9FS]F[RH/K)C`kG
%>NUd/H/`D,GaTpck)#Ej'/r_"gk^9G-XLCCn\Wa+P^).i(m]Z>-XNZ0!hC]FY*4*uSGp#]l[5QVJTSs8SsdkHh6noC\*fW?CF*-G
%.AKILVV+.L,0Kufo>;oP",:MSCa.&R):O&e7.u=Jdr,t>m6MCEpaD10q<Hf7TU)$bT,Yg"<bQR73$!+.G2mfd:1CeH<&-Codr/&p
%`\u+<@(KVk0O9=6o@'&gV_:c%:&d$4'HLK_e`P3R6Y^MnY5A^+:<e"E:Q8"$o@qqS4=IM(iCTlId\Ktq$Og`m+9BC;dk2\?YJ$B;
%B:Z8bda/K))--7/ao!34n\5nCr!mjfB.u#VPe!n,bFV4;[k:!G%HYEN%fKP2Am1)3lV5OYWHo=f0#DGJTV@=-!bYXn1Ot\.+.Suc
%Qjnj&%cIQh_>d[[@t*)$/^%X+o/t#$`ABBCa)Go^*[;%$o/t%B7_5oQoCG)a4HD46PaU\hk';n'a^b6m,.)6LBuSV>O3];*Gj3C^
%StOF?.c$csW`dNNBV+W2$W,@NKXSuEG&,o+>.-*sE+6MU>!:?;j$`9+!N5!7*-?6?F@*__Id_uM8sUTtYPt>*bAtNqUNa*N%/V7_
%`T51*!ihD,P;P.o/7ekE[]BB&5smGKcqlpD"&6AO/EX#o3@O#[%&Lcrq'1VLg#B>]o.#["Y\KARA:@WY(64k+Q?6&%AT:iPkZLK@
%9E&2ZfV"^+r#GC`VnG.LHBsbHo@$K5@%$rd[7k#GN213l\&iEW.*WCehkgQaR=L]n"^bD_RI]HG=[8?-p6q#@K\-ks8NV^d5Eo=9
%NcWD+RJ<Umb/>g>2\hrnl-[^di_d@+hl<5m/2pr;k-<^V/iE66DB@'IUUbhek0_sHReq"mEu@+#gE+Va='!RL4I>$^L`$Zb1-d`.
%kN:aY4IhmrF7XA=^E(Uf[jdij"O,)CF3Ei##jAPp0b<NG,G[D=2QQ$.+H%,MmIAtKHY>^"Qsb@c_rS:3ADBF7,EIDFq/[kEk@;f`
%Q'fC/,pioQm872>k(&E4,bs\`aO-c==&/'Ij`34K7Enk0WHE]mABK@E]"dN5ZIHPDV"cS&':3?$N\\I-.q7Qaj3=A6rSBOho-EM+
%$I%9eR%RLGY_+!T[nF3Tp@Ij(?=_d??K[Bp?61D*11C#tQk[_TIKn>2--502,\g+0<;`_o`Fa`cKfr(Ff71i:TZaR&Usj+O"dLbl
%d?<&C!UTgh7crn$cAZ&OrWM1aT(#eR%'g]I;nM=+RL>'h:5Z8VL?"!)3rI-fm[!-5$7'4c-ZCEY9t=&r)RD=`fd:6rDK6jn$1)WO
%Aa[f;Tf4q)%&V`7\CSQPB?!$SE^lUM]_luSfa'CEgOlt/EASgCH];uRn<UU`1j=gpcmbF\7"9S,LKoRHg*rID:nI75rO(F8\J$eq
%G5j1/1)RaKZpRDq@UQ$(Yu_\XdcU390Gr7J6P_P,3C,6e_.gVWX-8'"SK&'ko:FEL'n^\3HZ9d4H;).K=i]:*#e=:-mK^/L&9;Y.
%Vc]Y;NT5--@G6]N(-5.$EP,m_1,k<DDc#T)EV=80/7t",%i_$>VrqZ6a6_157Ro1s*-&S3_*(#FBXUY]]$1K(hTBKENBOpeL4-KJ
%5F>!d.K&)-Dc+W$]!8GA(fF>'"_O9NdrcBjEu@a+QjKOq!I&`W/4l=>/]"mem#E:@FK:8Qjm_*W,<g!o8),A$B]dX^=O,j5:Al=R
%bI?GpN18!G9a%!"Iq_.6,c-!F&"325o$"mSafScVG7FRnl;[m\,p:5Kh9+2sB6t6,ok6/SXJTTTh"+59dk[UPlmA5[.@PO;qR.j>
%G@t@=YI,aFs-P\OCUjlLn8<2K&)V!D5:1,@MV;kXIm.^.8T!J])O5rC<$QZMVrZuV2EP``0q3!VcB['6EEQ_EMaLU&K3Oq.g-MKT
%QK:[F;onR^?C*n&H;(g.3>6iuESY.gl$;Q((j4Jo2m6P[7l\9,YOa'+2m^HnL.6.,LEJbL2HAk7go*[Q6XjUR(7i*Q2YNgZG/hla
%0/&"A[>'(jcMtRmZ"jhTgTUA0I?-OY"U=$fS#9\td-c$/Ek=U^3"OcS]lk.13::79XqlY9]lm-TSQ@sh2X=/t]iV`]Er"t[>b2H3
%J4L15#!bg!+$u&I_T.$EP\+Vi<DhBVs(Sk:l-GFJV/'DLH\a&$G<d4Y)pOuap'ZRpi?RhZ!,CmWYg+b,'.1&@[B!=kN%-9e4a[oY
%[d`1d!)!g[/T81[VEeOY[qrsd%/ch]Q=@]I>B^Ms0<)ObR961uWbK$1MeT]3G9/XeQ@ZaHKtk(SgG^PX$0]Luk!"5pEn*6jnGku\
%HEP*bfd^uPA!rrp7$%Q:Gb".+os!0[$+Tq4KZ5oT>>lCrY3IcUC^%u>MlWe2C%JS^Houop3o)^;*!>mGN-G:E7["YVr82s7)"n^T
%Sfp]afR!YV7Ff%[/#MPrO,Bg8Q;4nUpTC:LJ6YHAD%"*<Ni&:CCV#8&)%(.RMd(7-QP%'^1u#FW_RmG]"AjX?nr<m'G&gEZC1/oe
%)E"9>Wb#YC[Vb9?*]9]CWb^Q08'tU:9/^;7fSU;oVHTEs3t*1GVVt_FX/"=-Td)sk@4RXs+o$UB=a_.8>h^r<hMc6N-MrZZ@qjfM
%!(U5J%#c0qdI"Y[%)m0ZNLDS=6`4P#'aN.T'%b.JBF8Opm;E2Z;YXo^eZoHE"$#+&KK0=.7!=iGdYtnP/:`E$<O!"XjA]1aeH'(Q
%.\XjJ1:^#_&LM:^XW]HB#I*T713"L*01>LZ$Ne?b!)'cMN+P'gCW<Sp7oagj2A&L%RjR.)O(hk[ACZL(7T"<!<<n7ZQi^)8`R'G+
%/iKR^4R7s$"H/1-5sZX)*<]6+(g:!;G;)R1PGoACdL@ClMb)H2J/oZ;Nug5p6i_#&BU"LnckQbh$>drYQt#<g_b('])Y#d0`N_6]
%&j6=C%i>V'f*pNsINd9-Oe0+T]&!HFP#0PYC6#=lVKDkDJ6b;8F`lE>@oNE"lkoA[VY._0?#!Dd=(.k.$G(bP#:E;9!Ep'4R;d5@
%5k9J]>Yb#ATlT3mr`dYFTjH/P^BZ,2?2"RO$P+2IP93*&ZT?ZULWXjMCecW%9dfaXk#$8)CZ$uLa0-bD\q&5HYks=:,QkX=l:Y%V
%CnoZ#+3Hm_HF%W0N]h<?NC6bEP>(M],@Y2*o\^u6X_X:gc6O91W&o"Y?XG7`r5c#VYjQTe3Pnq`Fh5hu.8YLQb+^DW!$a/(TqH))
%F6^L`2i$E07K2'%\Qtrb3Vtf?r&k.N]Ml"6DN>^F<8Gc6Naq7D*eZh-"PfCdqTVJB5PBHpn3Q:#63O-rA)YW)*,meMkt0fsLN$DJ
%2(Pjib'4PZh/pJfnS:_s;^'<."9%ksE/i\/6)0e_\8k@Qc/pF!:7GO.2g3'EmU!MK5(4u7%;,+,WUVO,b,!]4p<`HrE%Slb9uT)p
%_JW0RTBd!r`r2M7F0E_"-^f3SWm-D8+f^6B(flb8hb&mK/UEndRYt'#i(N`H3PQ(%))f?TDSI38_JW,+FJF#m9fKO#FtRe?6)P[1
%C]CV$GO?U?2!_hg'm8CCHbF<tf?J7B_qhQ%m0&F??>ptJp7&0j9:/K'eBR2(2]&j5Vp1l?c*7L`jODt14,bRtC51lH=4VDi0qJSK
%Os2_P:p5$$iDS?/d(/4K\fu['[VC(bBF.qNJnh]##Ba3E5s0eW$R9E,,ka-;?E`+BYS[$'r?*fm"2l+[TEU#9e?4,j5f1&Y2:BGI
%5cp]=#?(WfC/q53:H6uD:e,J1m]t6A>W./AkNukLQ^#'=TQe`l!RW&`d:=Os4%`#%-+H@\Z$#)=a,WFI,;fKAPEbd%0R"61h9D4c
%[;KqeX4Or"KWCF,kY]f\WJa(&8'j8TZ"j[Vfr-i*KDImdlI@s`KS`:n!W#!c==5aD2-]Xj6&2qa?ia3qL1r0LWgSaWFAR]2C?^Ij
%6O!02eWQ"(PuQMf>g9YrW%(e^b;gmIeZ2cCm1rs_Ef9CH%pmook.W4JI&#*U1,eO44k-Y=Lh\ENX&rj30b)%N<#f@.+M(P<G6-AM
%*ZAifrdLti)%+2:SVUbP@2k7cm+-W=)^',JN4.i_]4i1s^jHQY^*=O`p#"Ymd'26G+XeBm/tc>f-KRkf/2@JRiUpA!b]SK[LK([W
%W^3CabCQ)jKUuGqe@^s2;0_>BqRq2\8AeXK2NSNRVG]J>-67j6QU)F*he?,C3a/KmX"`>.MJ<7W@=,>FW%24>_R'AfSIla1DS(03
%\T3G#5e&+/?siX0<!Tt)n4-S&U-e5%@B\2_/^h`]j7B!cHU#AjX'KM")b$T0COq)SI*piEbK`se#0AFRd:NSnq$1jEBJiUB!BZc]
%?qBiO/YV'j@T]0X+os0g8KbP8'Ha1#AkR<\%X8YXm8+q]YZ/HEM*"hQiWY_Gn5\p,Y&=iQr<desCNlK7:/k.bYDI*D>$]+YQ"IWH
%<eir)Hhsbq9jWn.RT#2N&b05b5Kn[m('[-n*ar&m!95-8[TO6A2C76OeT0$l7Q[R"cpS(t.eg+BSKm9",k'GQ-A:O7?-N9Vgm.5!
%A`LIIB67@4hQH7]-#G+)ZH$PB0HjXl?%WV!.N&b^9^G8#I,#13[GI0*Y0W.B*\YFb-nj11AI*6;jE*P59/9F:Po8.0@u2BGab,&)
%9S)ga<iN+cYVhlSbiNRK-L,tAAk$a=T.sZ#&q\M`9%HRs.')i"NFUnEhjUJ=douJq5V804503D$k?"#G;`'-OZa2cJgHst!lX'h_
%bK`A$Fi\Nbc1a7BYV7lE!_,\do;4FQVcGld])q\$p>Y4iO"759#7E-M\814agJ#:HcKR?DRWfb'8ZS=ONsu3!Eg=CsXhKuX7Lui[
%'GA#S$I=7te_KDm>cA0mL:lZQs(3]Z*F>_oXlgRSL[Ao#>?)Yd?)g!q3ilM]72'W1,VRSD[p^;-ZX44\%ndOE3p&C?[`@<0*Y#s^
%3*ddZol`M3qpTjf\K"QD.cJ#L'f"9?clkt"M.<XC8>q=9#+K85qC!O1JiMC-R_r;c[l4Z>FuA/nUWnrhf5rpE#%Q)ZiNCUF!33XJ
%JbQcOr?,1Z:@5\+$o)p^7M-UU7ZUGWXO]h(T/2W9_hV^tP\9@&[.lH)ieX0^-jS`)<N^dVNpg)u9Z$j]p5nZOQZf'DYYiJYQA_'o
%>1U!F=49PM7j9bC:o).LD0@Sl+=i/.Qk:?KBSbWmo+rX_D-,J_r)p4#M(q$C&67^*\20#a=O"($mW*FQ0)ohN4$6hWO-bh@o4W?@
%YDk8'%Q0]WC2[@:8on6scBqol=:C@1gb=bARR1&CdkR^L\7)/Ejc)jZCn/$$X4eV69pe^>XQoUH<I5Pr6I!6s91`\]G3D30L1;b5
%aMQFk7`c9YW`?8#)PnNXV+RL=9!Mm&DQOu/21nCHGsgg-!9*3/CSYXL<g0gG[_5O?@I82V^#_f6_lAjdO]9nf\tJ#o[I-TI(*dKt
%V+Nht"\N)W;m?ci);TL>BrADm!ro.K3#a1+e2O7e:4r6g"ii+$V7#jHq''uH1V!8@QmgXpm(?nC4<DTu_)Q4Po@:G5O_&3'*l)_q
%@?r(PN9CQ6;V/&E=gKj2Qbe!=hJ"7HqCkNa!/ZPKeZ^O$22q2t&\O=JQk`?GBWh^l2T#%ce!?bEeQ$E>)!Oh*Vr4('6rWr$SI+sM
%(I9opLEh'[C5#s#hidXRC?Sl4k/S<a<&c"KXc$fgTCFa6pr0;]KEL?=4Ads`jXUSB.3fH<j5T`?<0)ZgH<m>Z3[;.&Y!4i45[DjY
%eDJoIU2.;_Rbus+7W*Fe-JMc`\gk^L6$HRdS]b1Eij-Sc:qCI#:H(RHp/*-Y\[1p"Ij.mm^b\@V23R2WX>2@,,q#lu:SVr3Eg(+*
%X4siV*S0u&p/s@+$[rrj#^7G`WrYG1IJ!Q1r(jG7=mpG5n\$>-&Eqnc>ip"o_/N)ZrRo.jd"q</hk.Abnp/4_m;0,Z-0A"c"+adh
%4h?m!"6)ci$(5hA_]a)qr=^i>N@</&>,VatG_a8_9uedc?E.h:h#l]VhSYD4CWFaBXTn6[[e,?%bD#W_`mr&NH/n=YIs5Vc;6^nt
%485j90?_q[Q1['TcZb?b.m'@EmB3pF(#(BW]?UN/0^^A^Vt@*5^80Ok?i?.;ZG*cslE#3<[AVBrqWcA^[]$Ua/Y'S']sGFbKSRP#
%ZfdTO56'hoTWapOHg&g/q%$Nm%ia?Q\'G6<_t&t7e_KBh-Zh!WT3M&9I`]*L>kh?LF:?uicBPH[Trm.[h)"rql]7[NULO4>HEVA&
%Q-\c3Qi?1@Ptq<nZ*a.rk:^XNc_)530E:@[?E\JEq:I=LfB_m+c3bBDie@=s9jm&J_brqZq7aT:imBJ<"G?+V^RTdf_RG<X9:OJV
%]7jhZgO8O0q-J[XnLgd6TH!X[_IB?H0jcRJ08u+F2=H+qE3\nIl0I>Tn^/;j)"sO`J%Kjl@^T)?0(E._Z$a!$6!^P6e%fkQmXJNA
%IG(V9l472`>&H!Bl?PIH&&0=hO4RIB/p-<s>(-9nh.ot2>qJ7p?%$HpI<nr#mAHL2h.p(Me]#]H2/9Epg?Q<Sbh8%DqcHq"/%+Bc
%!/R`E5$M,q$4D!'s,(3/^[kjH\@HeO\@gmk\/2HXq9ceJgb(M"/?Z[gIU(8qmsSg85&WO`OIfZPmNG^s>0#4[#,:C.iUX7]bSg%i
%F[o:nhqK_G%FuTsG8EKNYo='(Hss.].aX/qqU_U\IOm\WfD)h_j75+Y0.rO);JY!5D%eo(S[/%gH$Mt3]f:M])`iGV[T`Y'l3jA!
%1h(-:Y@*6*TN5JO)T(Z^#jT:5"0<4UXN\=].%N&6Qbq#U_tmbhX*@.2Di:HuVq^+P61F)e_)d#9g>.8JmZ"\W/F8_K%VstR^OKQM
%LMdI=qkFfkkQe0bTmWRe^+C2j]KO%%mJ*JZqdqus4hH#ZmMF3@W.;eK?Z#\5g5J+8%_l@fH[@hM[f+Y7l8E'@i0m%6=eONl^Ku<X
%2Y^#i4h$qhIJ'Q9QZogem0s-KLKk-!Jf*t1G=>Gc+@1?Cga#r":jm;cI9h1s;Z'>V3obk#YA8RnGiZup@\N%8l).Sq\MA..0o16a
%>]b9#:C)r=Wi_g$mpo(&I'^96>5d_>S8IFPAaS]6pA"WR2&]%!,?F9K%K2!9XiJBgleo(]\<HYsIK_`VhdjmlYZsUd>mKW*H3h=B
%HX&\J.!P%.b*rLZrh(;+dp`8frGA;!^Ga6X9;h23ZFH7[FqM=UNcqI]TPU43V8COTb@0FB<Mb!\n*MnBT!G5,)oh:gqfMT2a8>O0
%^LVf?(8#Mm`GK]OBE2,qbV,;V]3m5Z]k+c&YJ,Cr`-O!urRuQqpsuQR($^df:%.<*h0isHHSK9.<F0FSdenmDp.+T0m,AW4pA&.5
%>26[HWq15pm*SH6`nS-KPurM4m\S:od)5S?,Mc]kJ+aBFrR]JsEH1?YGu3`NlTOkMN]u$bDtW3LVVP^nJDJ-YRTmp<iGtVlo@GnM
%"\I6o3-Z(WBE?j3WGY]rm?JKZI6W`D:Z#/_k_60f%Kd+M#:_]?(KWOWB;!!ipWS6CX+0aO^MXe^<S.,Z^@nk"LFQZgJj.h4=AV6S
%:;"L$OV(r3Pu4GFajk^LZLX)J-4B+fpM2GUM@J=s%dkcMh2gmEp;0fIhPp`j>HN5DD<q-V(V[S0%V<Jf>c+)/fH&V(>W(G`DD.Lr
%`LYoEgLGH"DW8-`*iL5sXlVp`(C0Hs>D]BLat;IE1dJ,g2oN;<.eU7o%6qF6l`s^R_kAgDkZB>h#hBGNb*p7W4Y@^P)/kMN`O`n?
%qlphE]"cjf23&\jO.c=D6FqTG]=/!PhRnBJO.M;)f)NURFb.WAf+J]%V&pbl'!6QO@cUuW8SS^4mraK77u=_pmI#_E(CZS\s7fil
%.Y/23(]PbX@I/VP%h9cmROhuX0[Mc+,eofCM7gZ<PJS@cGiQ]t*>u#I?O$&>0!K5JiJYK_a:K2NTZ5,An]D\:Jst^R7Tr%7E"h[o
%C*P_Y8QlGYO3\KQ@XHVj]B:Fu1!,TS-1kW0<$.2V9OtYDib^(K197^p^2_k7L$PI[/CQ;S^E_Y^:5c%mhaI$[?MlBeA7XX!'@N7A
%A+,J\4n4M_KRaW8O$4k<_C+3fg[0a1r[9m\38dJom>(!b^j;U@pg87&YP<=6jO(%XiTZ4E4FlPji6RW?f8oC63A8stS7kf^V7I4_
%C_s0Ci)r3l/U8I/>J8"_H>gS>2,DW+)&=+3DTf?sV60HTYC2NFK!`U.!t5m1+;k![QE]&b^%Jjq((-mQIHND._i.`*2tlNl*T&[)
%T=ubf>\Mpa[bi/b&m']]<r;R5_tCEKqleH!i]T(0%moW>_/!l<R1J+dRL?%VV=7'%LOgs`4n/E6a*00BL<YcLhnB!5a.J+@p;/84
%a,A:4XW@kRP6G0&Vf>NU+7^a`C?VP@X1f14)S52)WYob<Q;Cq;.Ktfk@u*.R0)`'_ET3\RC5U_mW7Vp\69pH?4c)MgkMD=:4H<8R
%2hfQEhMtV*f?0`V;='Pi*ID?,]W`j>Ie,STB!2!rcJd7+r^W(-o(O=/Y%rN8*$%ddMC"=ul*6lSk.rA<(Gc:;19*t0bE$!AQb:na
%2neV=GP=C^(;InWK5NXh^(baQ"HK3oT2to"p$+^#IEnV98A`''n!1a\c4;m'(eTj]/]VlC#8/GV"#5Qfe;ZfN3r^%P&TK"&AP666
%k\D!igu_bEeu;fKZfR8Fg>dOL0<rYuTkrLW:\e+q3gD@+1P1tIf@;8G=@$)h?I]d%CI?oe8o0`>*SKbZg[G0rB`3'n2e%=QN",KB
%dge=:hgj1I[C,ZdG?kiGV>F%Q5$R5b@H$=q__\k8n[qfH[pQ..$Ulul;#9MFp;It\AbYs'CLpLkZ2,2f+cP!:1Ujm9'+DSK^u)92
%bC\+l.-f6M:)"=jc@Zc.pr.;U\!Nit8&k:Nc/V+fd?@D[HMQ/B+?[EKHFe-*a'E3/DFj5G\nb!o7@`&'MpX^nhCDo[]"8$KhoSHa
%nbdRhEd&+I_Yl888V\sQ9C:Egp]<7)4=J]OiSE+h$MCWr(2J+Y4otmlG[458?[1\TjnFOh,4;qKlhb&7b)^r=od8o"NRnQVm[E6#
%jLY3D<e86>:Nm=5H.]FJZ@[\W#5Q8;79(t^ajr5)n]PKU&eSj<-/#Etc*Js1/<9qPGiS?\#]fE\%F&()]rnCT`U.u$PF,pC-15K@
%<kS30"GsU2^CI]AbQb`[r.J-srr%`&&*J/g^V?_#JsMIDSo`UHVj%08_\%^Fq>8TCriSg@IC@\o.%;;;etOutH"AKcc&4-n.g>c1
%>($/4P<hB*P^^tcIX:&q(&&22q1Iu'qT>k^>&;&bm\B^G_j:Vs4Ss3m@sP&ag[j3uod@"W__[#uLu2tfYtP5)5gVK="-$A-?].u;
%1bkc#Ik>MU2ckoE0+/!Z(tN#-Za0?Eb)THh+7T8rMWYfT1'HqOIlW:bXUjOBVoh$4IAfFj/$I6"CZX$?LYn<`%5T[[SYLu7&,h]=
%%hJT%IBSS)mF1%35C[VY1j&c7jO6b8YA>!>p?P00nfVe:f0f8R>$G*I0=sC9oomg,@<j/8p%>nj3d4s,O5KDM_5U>5d=n.1BA9Vi
%V<X>X'R'ut/hDP'G_fLF&EbnqEUD/mdu3_==4'Jc>m2-ag]d5LITc\W:ffq=l1`?DGOnj"E/AlXGc[E\gY3rgD-GhhY%e&=lA#oJ
%P=lJ0rJt0Tb*<bRc-l=Jh*ZDd_)HkWZaKCaeVf^;+>4IFJ).TD4KaoW&;A\55D/IYNMdTYDpR8SOO>`6D<+DCDLAl7UKR34Q_-4#
%mOP3L;_&"40>@/"HbFb'5]VrH+l.k#<bK/JEc0tt*c-3bnJW?bJn4S4RUWu2j1Th_h7`UEeNo]u]ACBOqKLUEk@8iGIdPDoci1:T
%>[KMj?F,]84nOcIjoFFUk2l>hq:PQ%2-rKBNkW;t?g1*4oDG#Qo6.CQE';n#:C1'IYrS=IXF#H5+N!_mX*O_NiUqi#"l1^gQB!.J
%l^87Ad>Q3@[HFYnhOCFtCZX#8VNk3D/_Gct*OLl6UmVd`0CS^*n+/QP/YDg7rEX8R2k?f<k46nm&>%F1Idos_24@1">PVCt"C?iY
%MInuB?c:Fq%D@0h]J-tp,):JEP8c`8Aq7]Wk`cmU=D+r&%WBOmPJW[Z\+dMjK\V#fdmX(;+$N=OUIs)Z<3E;>h;lh%N4`'$_sYQK
%l0RBP\mr0MO4d4PCA;B?@L1FbB[/Ljf6M]7jIop3\51J,HNanOf.I;85;(#VXfV7hkP%0RLY-.2;Qa,_f0&0jel<gLY(gl%8ni)8
%br\b'0:.6t5Ai/0'&q"q"q\&#pW<*.]R+c*,N%^:fD4iMC$V1iQ+u[VIP.032=bb!CG/=.03A2]G%"s?:Rsco+iT7HroUcaeb/X)
%Q'V<i4P9eA1_.;-/K]8HHZ5Pjb&?>]_7,?Dmm9G!]Cba`PEL.:fI`@acVC&@m07;C$go(g(?K\LEkLi4$_,RIqS89Ai8-SB2p>Z3
%J,-\eOUf@Yf%i,.XW-k!D_Je`kAQ<bB>-@[nJAVm>Ud#u+gNlt$ehB_^gh>%^+/5:n0'@6T"T)N9\Xi<^2*Q4AQ8I3\.tRrdcMm&
%78F<a;RlG^05pm`#F$0HQ3t70)0EPBn/.2So14M[B7B=[:KqI\WNI!Nm9*PQ@$PaIk-GTLo9DJF0@#nE9ethWpsQ]sFS+KnU,93J
%FQ(J'N(fl90VAPt=oYqjT60Om`=>j0m"E&\h#Op5q?j^HC]W:?0+<(J7u*F].cW^+Thh$SQf]g-I(J[@HNi!l<qRKK[>D0O84V_0
%jh6<0%QK$iLEl+*Tff?B=D2M5.#%K2Y$$Q2H?]+DolnL(IcR0r[Iu=T!1>C5aOHW/!JS)[.UgnaN?@jt+cB`m/Vm@L$<1c'3k\^9
%RY?(%>VCL%[_H/&XM4+g[MBX+e,l-*DiZdYhl@!@F.SW.%l`s7Y.&`$]k";BX)F=r;)eVcCD?RqH)uJLpT!Op08q3Mbt5l-<j#D)
%&T@?Rgu2gg7$F5_R[%WqEjYE&bA#<&qF/!tGQ3AgJW3fmM(nHb\bq7<_uaW>eig(Gh0nFXeFQJ"h%5X53`#+-08kV0<U=?RrGb10
%9k"6sn`Wj!<KFV]HHo!X91og+Ne5:)7_Jh)^T:Ikh8VRHpW^LY?PHik6i@/o/cW5mp0.Itbd7"E1h.Q,jQ@*.[?bcLlRafC10hH^
%ABH^OqQ@CnFMk+^cbD]t.TMABAa)eRBk:k";?$p]q(N0FKs$<_<2?*L,o.<`J$>!JhJ6U<#6OQeq.b=Z3p<R[^THZFQ)nZr%i:j`
%jf/LXc9!YL)kSd7NP"LSrf=)G4o/Di[VW1Cb*0RgG^?gk@>huCM;Y"Q(X*\oDEbq!m1Ykap\,#]V+9Fc+"F01L,@R/X6:SZD=_<V
%M0:&LgHP2#4Pn_"/q&+IE8#':no.Sqhs%cB!+b0dbDi9\-ehLeP@=;.R./\$G>N4\fPc:S6m@oTlW>agQdqjj&'iQAn"@5_(#-WD
%\C<u3@2eha!d-JiY8=eL_Ig#a^"KSQ"Y"i*PYAbo&9I[A0Z3d>V<o>;G_is%!j&:7X>c$?G>"RCjU6M0S\:#$?DMC$P^MZiLZ+4s
%gD>RqhL2G4F;gH^+18+2@.-`u"8.qe8**A30CU\'h&]NuDTXO"qU7U3UBS]mgO=1%$[$4"6]\g,*Cd0$YkY*BIcNB"ZNZcQieG0`
%Qi5>]bD6[Gj)f]lH`mhD[e-`[%<ud(#6/brIg"SD4Rc]q3.%-+;kQD$YK&\U@aq7:#;oPGaf\q=p2lj<\lo"Gb:rmHp1A_CXnlVl
%i+8FN=^10V:AomA]*n=PmH?\H$Es`Xn)FG#=a<o_L/tG:r!V'(gJrhPnf@0t;kQ(Xd-Id#'r,0==7S,VG%fQ1?g_9`gTZ*2/?J]a
%K=8,\iU14;lstD9l0bJ<-MkYb7`T2Vo8B65/AZ:30*CEFHbf79M[rccrs3Nq1XbC@72Hs4_D`%P<c@s6MoTc9ht)(Q?uc9SM4N.[
%C!knVa3AqD`tk1(gUZ4ps#4cI+tc^I0DQtcmFp)CY2df(G<\%t2\R_+#M0NF]&FEbb]O<aT$pQ33!djl!=rD@/#jB\dVZ0NE]&8S
%*!anqp4]9"YS6/NG*qT%KK6a[0\6WCG]n0Vp[]SFj>t*f,X]r"+e9[\qZO<G$Ul]3i5Kq,V`7<rT6o$q%E!OJmRoD7X4b\(l>UOF
%OUJ3I]Y]ChNLgB_7]t=8qf3=-/ENPbW.>/'KY.,TTh:]QZ!H!JXrbr<^[TaBT[g'o.Wh7Z#9WdB"5^uW61);s2b#t%rW%R6(j5F$
%*`/u&lSU<b_$p,RhF&MP1dfHOG-*W6)knI4+*>*7iT]*#pbN#kl,9N(['FsVh'%PQN8ULXZX"E]3CLZ,e-:kde^5Tq(af%7m**\a
%'CQ<#BpXh;YT#F!nPKdkWm[kIGcF<0]2./q;02(_JL/7SLuJ6R`5$PcNFq:Hh7O(f5^YWjFl65QTps-+GI0lO>2gJK,oJ+p\.jQ2
%SRb\=38nC),fP#Sa*+Qsm:FdFTO<!(o6"OOCuVm<n$Mm8$NuF#Ud"U"/#,#\6qkhubPEo+:i\dimE:-eHZ>4E0/abL[[2*B$7o"8
%X$q@D;F[2Hr0H;'%#6'CJ6f6l+A3p*2>3)#l6SLQL=Y$NAlCa7,^F%2_rJ`L4GI2E_&/"ejNnK$QF:G/hq0$+^WRl?1^^1*O?J>_
%KGGG@'Z=:\`grhHmbn\Uq'Fj94^#n*:-$ARG2#bV<$V>f3[k(aIM<lrQu^6gj/5Ag",bNGE>ZZG)q\$7%?E,f=/V%N<mTb*Ea^tk
%cIg<J&&HFtQoL7QdV@o(R%SaRm8HkP)PP(*.?_-mkT1iWAO/RJ"%cT6[[U*:.&$V#l$+F![SP>TV'Uk!<dC@UG6MSCX)]2+rfBQ@
%GkRoscEPhhp_<(T3S?!:nJZiZg*fD**MgqL"[%e1l*h?k/!FVna$TrDs*E`c)S,gUhl6/rmH/-0h$JOaOn4KD!g\5>Qc1B2m,,U(
%)?)[mP<)&n.*i!f3+ri[]r*;(GOIspig-t3$UENc'4\2/:3_fnFN2i5RCu.pFBAk7M5)#E2Zc@]BX[Z)[8@s1g;2)YD5D&1o]l+e
%&CEG@1VS>pT#\S5K1juQ(>`Y`4h%\bUZ_"*n0GqWie4gmP_/P/\\:QT4huh"iGQRqdY!l'n`e/<.Y#ecIc:I9C`!+%3>2dE:@J,<
%66W:4i]4$;VKNk/_#a$840\_/Agt3P9ADe3''08aGS?W*LSI#K#C<W[mCiCBkPoif(p>gVWIC6Wa/9fDQIf-mbUolmC$2Xll0-')
%.b[H.\ZV3A<QDpbl/n4>dD/m7+pQ?m$u.:C5V<?$c4^]qa7:6YK#<M>'s=XNKFk=.[cIbi$p!gDoKo:oQ'Ggb%JoN9!*?_;ZD-jC
%*S5E)Wi`/S'V[8P??k1nN?99#e\:QFoad.YDui+oPncIRI5JIp?.f4g?>[*rh"Oh*Ct.rR(U/7r7=-/*e5tBL>5\Y]g2GfDrmkAt
%D\DM_n&mo;jF,ai#UsMX(-X*DeP^:2.E=QRU[*3Mf%cD3r[qEua3lC^OiHj.&>)MdZPFQ-ZoT>Uqd:DI3[pDZRd^dN4FE$bQ!8L'
%H[!\5+t:EF4]bO&*RIcg@E7)?M"4/:F7IL(`KKrlK4Bp3UT(7fPY%nB\9qqf3Zef@ipLeR+0[m@pkdt+FYIV_K,>T^l>5)ff2US=
%Anl&>1H-k+_fBN$MlQ!DN^pF:G,&ZkZKt*mJRss/nu8]XK*)RX!ZiH)_#X[#4CH>H)T:14#6rS*7>_YZo3C;@4Ne]3ceFJVJtdE_
%/T4jNb"Rq5>6EtKIH?37"/,-MDC;PkC1jV2]`u!8U?H8nbQ/PcGG'>]Y?Vu]U7J[^)hUG_o8[>6I5!ps5#AuB=.U80e4s3CNPV8+
%loF\?0W<,Zq+b:B@]WHhC#q8V6\8Zf1N/Y@4s1B1]MBRg\5g"DXe5(2b2mgG/.A\9c^T+_jM>g?b'0$1ag&kQUm:s117b(j,eF@D
%`9$Plj`](pDi,#2I[+;3n@d>\>b2pNgeM&Kc+tOeN<BZQr^jm:QRBfl\!'jAF"lfq??P3n^KuL%qoa3[aqOVAC+$.]`oOs8ncf4@
%"#(SC5l"/^H"*jQ4)*e8#(qT,"><@A:@M.dT&c<LS[@sWj!>"-#oFq8-X_bRP@KU,8Lr*e6OI)YZHJ\OX+2WGFg_b/`^dj!-nI<\
%\1EfPD;YoEihNgG]PG)\DF&@E#0^K:WXVM*1n0atG]-\F0->"[<33ib=VF/&$n2Z9'YI&7GBM8+*&g)N=TLknqUi54cO,WP$8B':
%;Zfsf)?AT'.&f>aQZ<<1`3c(OM#gW(nuA]/e!q829n6tm#%3#1[t`jFm&L5U0m$+H@NsE][&7Nt>sm4sFu*.(!<@"Df3FN+6PZa5
%<@n`95ip]u2,0F[2)F^"[`c(VC[%R@Yl.e*4]T[qk>^WuF*=shmH/9;9[e"![&7eSe"/UFV.LY1B3KR!-@3;JPm$3GfJL(5)X)Y9
%9LmfQ.Se0<+p=.@Wkf$^b/gi/^R0W&ntsF^<6MZ?[\=XA)'VY3AL0UDj;en]c6$.k#F2>oW(ek]aX`876=iO/l]u,O660s^67\,>
%QaHerE*PP-_%o^%YF#g-m,VI([%K06lBYqc6L^!m%DE;SXtiUh0*@Yb`H%KRRetDE6?.!odULSW3WpIR:DO&B<aO;rU'0CI#I)S(
%<QNDi3WQ)od/aZFBj)iR%%&fgJRW+3jU*Q5+_,Uj<$3M"c%&&RJZb\&kh4ND?Kg#[(-6tVh'>%K3#BEX#j"N^G?m*^$Sc;"b05lB
%+l$^6DJgk=rurV@"^Dm0BdPe3R_Uf+Sli/?4TbrK:`]cA/dttI1]TJWiGfTO]<5gP8cWpI<8Q7)X`G>$O>>Y"bdkVFG8OrC@/r`2
%>=M);5li:i]%L-Zi0"EPo@^V"@fQT@-:*;VN[;Oo`;h]fMm*Pi&l2+c\ZM#h!PN0X"qRbV]U?Vg-s),.*S14le=ME_NqP["g2jD[
%Vd+RP<bbSjW'+ET)=9$^mAYYtANJ;C4J2N^CI2-<hfT?[-'c9`#F3D::^7DaDTV"A:f11mB'(sP@qFS.3i4(_#$gB&a;V9JB9H?a
%RQ*#Qjp\Ja/R#Md"6'I(V+)/W21gMhGd(.\kba_QYUk^l/h@6(KQjNVX90E1Xt$/$r3WHM0bbub<*V=>2F!m4R-1Jp9/k@FIR7+@
%?>ebiTb&D+SHAqENM>^Nd#>tP5odsML8`O4/[-4cC1t7k/@T?U"3,/-8S3sl[UJ\mgU)3LQ=<7'/\4ZmVTo$_JS%j"GQu3(Mp*AI
%2]W+@-Ws\K'I!o=JfrFmS4(aF;%<U";&\*(2:TIZ5$fZnMl>c1]HrA6L^$+@?/slPN6!lqX:L!Vh!dXOJ0+h7psN2f1kT&qkaZWD
%n-Ph/p:!fjprT![Z;LJC3B]<>fpj#.0i2O(0pY1oDoh$:ki=<mBE=Q<M[D>r&qp;lk?nt:1(',:>Vf)bG:8-CcK9(5W2tnD4pDQY
%(&5#S>;1.c#"4'/V/dhi3Re[:Nld'RF*Rel=bbtt(_Aq<&MdPR0GSlSW1#iX!fiKsB'oX3a3^Pij>0&R7HnU7"s@Os0=5$4QYRER
%D\fo_UKk:-BVJc\f/S-^&X=)?O$Z8P#*V$2A_Z@$Xp,6J_FFf*UWG6d/$&cu8[]sBBkj)(Knc9=U(H=1N_1EMa\,#s&St[3C\El.
%$Pe#mY`DWoEabqm_kNZ_US)]j>fVHa+TYsa!.r["5c=%;[ST>i,"9%3g'f[2-n6%k+jJoC@"=[LNoS'bJ3KFk]M/rNh3,sLgMOo`
%]$>CI'P`paL^$cE&ht,+-K82qp-F8m=J9<,63^CXEI"5p"7V,kWJT_k:'AEj'upn:<_^DrMIZ3C\D6V`!1tg?V6HJUcFFkCSPAK<
%Pi,FT&W1SR>JpfEcG]k)X"iOSZs^PfG+#mk,/ND8F+SosGbNni3(Y^]8LO^_WB->9DsD#n=<TV+.+jh3`W\J5\jBFs<&$J/gbo>F
%K*4.j%)BWN"W@II!aHGX<)&?2N'qhH6RLrU.!N%I,"&'+4+i68Ca+c@Ad!*p"L5:K!cV5Rf[<L!GeiC/:"<5tJ>AR*=EW,l=;YL\
%"WRm^m0tn$ZSJ3m33T:h>HZWKjIb[ONa0j:Q+.CL#-s5Grdl@%R@1/GCoXX"O\5^tW3Qd!]MPq.QPYN6J7jC'A>E0*7u/#A&Hd]C
%:I%7W@LMp$[kQ!_KoW39*7"h&?Y\8jjX7-+GIY8;;jET.`;H>Y)V-HIG=R`kZX%AaV_;%+C00T?H1518(g@)*_-kj@m$V<nWiOf8
%POId'?!=C@;5(%h!]J']1c!:rWuB$4!Ibe+)JW$jiJ=fS'bQ4]^1IXkW8Q[@L>ejU$FL/-5\NNmA:j6*EaA&[1lA(m=OtMA$*f#"
%7PRmd9*RGb`(?VsR%:Q8Zo;Gl(i1AZ*F<QN!_aUn(YQ[CE(mF=L,=@cE^=b(OjQL^qMLUi\t[C00KS\->XQ^i3$t,DJO13^`XBWK
%EO]75^uD/_R&5(0AI&/;iVs`Ae"';@KXSCV"n$Q/(;Q5?go5;/_4essn=*ReVM2=V'(6_KELEfSZE+DB$=(.o"-l%@i!g5b5Rf4H
%ghSg;7'\%U_Sd`t.X,5ngomW5\Iuej%M2B7n[Jb?.rarj)TpXPd6WLD*'OQ/V-=\;TP^ZE^qe\7#8tm(1W,r\GMjApc7>D#Q9nM(
%0eF7$CjS]]P*u^6eIc;%^B%,b.C:37)&HA*8`cbq*F%VR1"a\\b,<Cq?k]UVDJuRp9k.BaFb;l\i?FkDb5lC;2)*Ni#$aONOnf"S
%WsCYF2,"o%M/>=*!](ZPWuS%Gb)E`ZNi5ROWA%Q&)Ak#;&qqT3F>;/GfXH[jL97aI==,@7CsE(h`Np>_ld,b8EV>+g*h<#Q=;6P?
%<_7fB??BRgA@Be2Lp/npN<"tpq6VGU&cuY,0n;<8#eU]2K*3[\XBeeFelEVs?%p"HY8GA&05&a_DX>"rbdhoTWi`954UmV$qLK)5
%B_E/TT;/'L.ZT7$[$V1W'U?(6M`'>3;OC1U(;Sr!7>aV:MS9g]lSYt]#"r>X7hGeNP>%^-ZE4K4!="=<U5:$8j'UTZB\S-`>b+h2
%N51;*5M+=Dje:J6oI*lfb%##%N'(3S4&r`]8*E!4Vhn&IDE=doR'*Ph?,^c:N+tEFno1V[d=g_!#])r^"4\)rctjU$MLsq8BJYU/
%M'0hBK%Z$CAd^O!d(HV$o.2QXW4)mu=O`+iZ\H^Ng`g*o#jp\u^'GFKA"i4K,dg?YodgNG>a*JE.iPt2(5)gn&iZJoNmOX-](Cr`
%KH#gU&=cRJ+TRHFH<+bF[)-5O($9J0=t11ui*[_%(pLQZ_`^(;dQY5l\R7aP=Ur",d"354?^MG`Tb5uj^0UiOL!hA+MX1uPN/Z>F
%ML?=ia;q(p=;_n_K1dF9X3hK"2pqaKdiu7("Q'ig(dHN\gZn"&`lgZ&*.f$#1:bcs[`Qp)X/_PPf+!M5]WdpS@ji@XlI`@c.<l`+
%#'u-L<GpZ8oW`'P:^m9"o0,Gl>%BWYZ5fR2a\CuSDrfW&WL3+iCd\&.\Wf)r'KOO,1I(&D%H+.)ioa=JI21883U_$[S"f-dn!'B)
%e^&$kkC'L[j1d_HUZ03fg>qAR`/fL&BVoKbE5"U%B:/HkAp**'<>BI%GQJ`F`%9l7JMW"$k#+52J6\[T7)*)M7A6]:$$B<.q!<li
%;b*;'kDf]hqi3'@/RurO<Oq\`q('h;i(4mKCD]0[AJX%](4kRA-o5ID4?t&3fNFdC>RT"p#5M(>2M<iAN($c4!Dh!ub&pFGPS*#[
%Rj_p'L7uV@/0TY"1cH$^MRZ+<``T7"[a0(bb^_5"=J6nbWT0Go3,gSemYsL8@@0fSaY5S(MYl%R!G4)<h%fo/#_u!N$r](gWM+Ho
%4!hZD4EW8I]d(ZOa%<Q:(<-Zg\?(aH'&arW7?(b$L;#2+pY(WHPp:Qt\1_8mWkaP[Y^futoHj=tkVHn:V8D">&KTXck-k[-d;93j
%JB%XQ4>4^\<&V[_ZlB\$,UQNET;KRK+Qg*P/R"?VL_ZGqH/LL!jY>/Mdi+LPHlNLU]aSpBpdR),8'Er=U/2!SL,E(5VeMo:@3:Mf
%.C^Ijl%(TK\Q`mG4/eQ0ft]TeB-r_MRY<Lm9S"'19d,9g_b(D_cP2o-!0h0\)X8$+6(s#1%#(&`1^%euN>#C2&7+Ho1^$C;7;"44
%]Eh67U>ojl7)"DTF,L)SXDD?NNeNLj$+)aJ6hs3r!?*sB``*[GV1p"\IGn$B"B*l'7$tEc7A65dYsO7NH"I[&9SQ+NV?S3'l`-\b
%@DZ*s/quTV,uunh-B&rP=o(;h"s'Kl(';MaZ-tsPns3"?K4I,+R"2CuhD3C"PNHs@\AVp>L3\3-+,GVEbY:AH`h\8]#6P/;Q?3;#
%6SZcA'<\!FlDtu9?5$8t9RB(!L$h&Re'TYD<2S@0c,8H?8i(57,,G@hK0!<"%3$-'ZV7gEB$?5S.s,_B!#?brD:Y25p4Hp_E@hts
%ZAurAApVg9(5]MY!`"l[NGC^cQr&N_FggGe`\]X:+'D$?$s!tCCH)u""3(N&1hElMr^U0$fZ&H*AR%O@<7%_WA0EW9L*;BhE+uo.
%c'[:]k0WrT)KIr&%9ND#VN]uc+c')8.O:C(5ao\K&i,>dMrJl1A:[OIV:K\o`9W4<LDL:I)#tY:Sf3Wf$E=m>@P2s]#M=c`o6a;.
%Aej(=,I$g1bZ7hX@to[339!7DPFabC7sl;]/B!@SOrO'\bhPJ]4Q^R'Z6\'60,kZsZ6VH="^3!e=m*b/b%qI+6in"CUM[97SJ=W2
%MhRV>7i]]52W0,ViOU42$s7D:BHSN'Jh7fjnr-S.%Cum]3F'$^RL/.'*)$pnGr\r9\=,e:<2SCoKkIaFG`Csr83=,G.Mk3=S)R+t
%BfKA.`Ms`t'pE@V=@m"rk1E?L7iIpMi%TH9;R-;4*X#q,hQi";L.gV<:=s%!5TC.JX="Ab1m<sT!c-J.`KGqR8(KHMPS&nC%hBOU
%O2fBE1!k4oJ7]8V0$YU'16PbW3a7`?,r)E0hLa&g7C^rhl[c(ZKVFbiS>UC=_G\Q,VQ\c#'BmYo9_&N;W#[c@&ht/;=Mrfe9k$K@
%/8!ljG9jFEl7'Ucm;h@/=UnAqjFFY<@^:r)TnM(&G&b@&c"==/)8l(ka%e1F\7h;cW^q57b8=p?U6eF#=j%/qM9B'g"79Mp:,,ck
%=Qn0AI&(MU>r5giLepfg?>dA+3>_!9/CZQ2BeC)@%KQ!obK>qc<mdTsA7\@B@o2)#$-eB^MT0eMd*Yt:V`,fR:+`4tnT&LIW+GTJ
%SV480bCilXmh[=L_FGsL'.-A2=:?gfD_`0H&BZ,:Rp"\q&fBUD<a]#P1U>"Ug*=3]dmt=$C,hr%j:p*h3G3lpK8:Bkp,"%lMVJhR
%j+n"q(IMFI0s'I+`2kQd7^3q$Ng,V9P+'J\U4sm!PFT!^(+"/W'&1M#,AE164E;0.9aH_$\WsGbO;uVLcU>Jsl(:L"7BS4"*%<Va
%&!#22j>"]d0ljHh)%0F_H/k]Y,IK&4m]hA0SGZKY7hGdTO%B.<&HpdJaAc7W7`)7gfVllFK/#nC_pKOWg1Z#-BXlWUB[2pK;4rPZ
%*-q9dk5c.>HoSZ,!?Dm/\:fm1:m^X"K0n0e*&=t<YmrEDE>F0X2PskuOb,=W/,95r1*9?pU_Y`e:l+El$k^Ds3:k%8!C`h%N%G>L
%k0HLs:I1\l,?GIC\I'FbKmj[Z(\q"+WE:Qj9O)dqreTq[6=+K[MVTK3,KS%o6ob'(L<p4-*8?*4,V[K@i8bk^]n1qrT+8ji+&a"W
%]T'R8=rXP^ccBO1MSueS"d^u0+munj`8XWa_aTENKBp$aZ04JRpmeY0:,InFo7>QXOcO0r&T^6$?mj1EeA[:P2ZH3W$JA6PZDJlE
%,!66e0CM2^*7sl6H+@XOUS8lKFVI95o;'O=YhA#ET<7BF5O8>6Hge7M=ct%eI6mmc08T_@@.2.i0tY%?5_*5qM'*$?+G1fX_#X*$
%1_ETmA*<]2ccF>OXt4bH.SJg5*IFfcksK!M;d`bCbJ')V%HhAqe]_ucYb[uEH_JBtk6D]NnqYK:-+I,l7;45k)*6<GU*55qfM,;+
%!4;._/;4R@(q8l]6bR<(DmoqHq=<sYIkNOP4a2t#F3*YReU$T"8;pGMO+#4i8L)n1f@LusLFpM/b<DU;_f##32YG/%X#*&$FiqL)
%#^&A7D-<!*1#7D#m=9>;XPRSo.GHAdciGu\cAgA:21Y1`[dr:2I48/C/SZg)>mpHn%.2j-]enh:T8*He;9Nk&?&&Y#>):('-2XLS
%S3q,k4H_Ds&hlJpo@k.+N-W02m(B*EdG:n;PQU%:?liLIZTo>0fL+aO4'/"9GNP9M=rMe%EVs"NoNA)Dc03u[q&ip(#/X#-ns?WX
%K4h78NdQ`P7_tpR4*,kujfPR,>0i'!G3X5JI4al9]']T$f*S;2rnPUeM=h;qYhbm46]Su]\5&Q'V7Qo=%,Ye\5PU.nf;1Uu]gIph
%Wh$=ji78?`M"ujLF0C!/><QUi=#[Di9>"'`19.rLUTTH/V60C4]h72K^!reeRBNX*UJ_Wq^'-9NU7,tH-*nl2TDQduUNQOtF!'\\
%1U^fQg9bg8(V)6nmS<C&N:S<ni<I(HIoc("r*j^$T%>Da'fL'DT>uUX7SX"L]\gpY>hUg$L]&$q+KHR[QXYIO>4fD;<64nZZTShI
%isfWIGAQs52JBF&FQkPg;&>5PdX%tUd^0pq,1SGH&G8G4Q)^.V2U>+t_?#qoi8'h?^T9H7;ltO*_n.C`CgR;DX:0CLPK3*M;s9Rk
%d=>RlhlLVm6+aVUma\l6N]W!#Do6Y?IW`5qmrRPkXj=:Kk]JO#;h*W]a#a$=mk+FJ\p:NPf\-Ip-*]DP@<#NkCRZ^*aa57MF64:&
%gTE\UT=qoK,O%5rgS.T`qrhi(lkbl?0g!UelTcMGh0"%Q't>>5<Yj[qUH_LI1E7b(V*b`&oMR['Eg;O:$>NeV^R2[sSa0s$nYPsi
%"8YoYgY2Yh^*Y;ZD4U]9^+!!rLFI_PlGMiCC43i-r7PSh^j])SZY.dIi_WR]B9-=NVsr`)jND2^J,4SlL'\0j8g3OA3Hf1ghlWeu
%SK2_\.qJ6NY&.HhIm=/R.kVd`2h&6Vj&Bk;P+\4?oe:Z^A_5$5\jl2;<72sHj-f\5W3&5=3WhJ<h:<VFVL0DE@R-775KW1.@;SjB
%/bRf[;>S;]JXVU"4WD$]$Z#?f*m>3$pOQ<e5TZgU(6gNhqCpJdkZM'm%r@UX'IN\sWZ]p2=tMC%\`Lp*oTg^7\ol-cl!B+/AfTWt
%b*a-)d$hjic'EI0]ph(V26$5j=)/\M/]fTPPW>M;UTJrOdlNGD^A8#fUX/MZP\,q!_e_f3A>h^#Ggpjm!Y#p`)7%b%6%iU:5NqV%
%f5@_Dg;SQb]Zlt_@1?_OX,.MfBU"dM'[o=Q.,?mV(sQ9rKQYP92%1:\VAM`Ua`A(Ab!oskAW2;1I7r=th4!^LCeE9JpomF\kfK!9
%.e6?t:JoO$LWQmf?QiMMoM(,lJK>i?+R:,P5KkH!\AoC1qWpHOm%4'dXuC4-F!0u9%@Sgf[@RqKm?KF#2#Ai_j#-Kmbs%s)0ln7#
%fA)-lBo_@;Ksf:HK$MEBZ;_4Of>H[X#?^m)J@BU/ZnX/%6T`Jp+=buegT\ej#d[^Z`N`ouI5!P:f\=&kZ:p7+&9*'5Om;,Ic40AK
%@doSj%iINVZsn;!XjRKmiS%R-(ID0G]UKe.9L0oqApXS__7Z-H:L/0HoBsA1b><IGPmrC^riBBT-VIEA.^\h[8r/ppianT/:k9Rl
%]6CBM'_>:br8B^4VDb^#o$@i2<4b1$<WpcGB:7UM7E]u*LliG0:43U\BZ\uAoKU!3aadc=JHVI7orQ5u(GW.gX;pdD2Rjaif`9cD
%e6;\GhS\E^n'$qWGR5O_Ze':<"_'<^c?$qmpACH"8d]Bd*pu%hf47dcos)uW3U;(\_Eo6o!Y&`20Ka"T^qQHPPHP:qHhI'Scg-j'
%4l:L+lAd/1Q8E-!M@IHDIYkT;+6Ed\730@1\Db;l$7KRpB6eB8fI90M")>=J+KZ_Uk2BbO?b;?M&h_AV]mk2:-V@Ht>DNr[`UEh9
%R/jqUcM6F,'Ne/J^q]LB@d'T.8%LP_KLr"\;DV@J_.[piS;M('mNoqi(`o`>%c`UM,',1poH@0;;-bu`jbR,`hD?ZcNjpL\:-P?)
%c,`FS_82t@&_s!%>hXQ@CDg5]Z4s89PP9>`b/&4#gk:-Ugfgp$81e1UjGd_!#O7msYC4*T"5+LL3GQ;dhef2@b?_UD?GUDLpQ^,$
%rk?%kQ,5t^][,3Pat>*nnD4>8%<:a$bM(>*15D3a-GGtI8hIItj4i71mU>`mHi,RYY4Jl7WHWEGgA0F1f>HBte)I-hTnZK[;/jNW
%FAVZChY*R`#-+B7c!Gdbh"+-O>S_YYTL^mNR%]f-&@G8W+Y,dRje/IHA`F^$m%Mg?&6JRnW_`4[e!]1092BFe>Dd^leSUX;9HLe#
%+gg4]1:?cj-Kb1s[83ueCgjfcDh@qPcs8F$\fC1!0#XXa$g$Dik"Jjp-0AQ"/h0cl^=u;bUi_gl);*a2T=tRrJ*`K^&6,"eDYIEY
%19<1!doWh1XB/(Zj2gNJ/E'`f+sng%[2(SLl#1]oY*_'H:Zi_Shn_5rdQNhBfSSts%#76LNT+G5OdWXJ_+R]i5fR?+q[s;nHLYgl
%7]!?@>u=fe0*E!=BA53jW[ZQ>gQ*Ytp@pK^]E/nk-AcW1!K7cbX![':3j3%,m\LmWc#a<E$eo&f?md5gncV?Ql7T7X="0#igMV<+
%fa"0rV%H'1X_NS<emL,/$^09=J>fj<+EAZ\m_P_dXB)s%.].e7mTL-o[>:^G:f\PuH"r2*.D)WG(g.FR+be9.*Ztm4`DR%E13[2/
%7^ZE3)M@#[J@mG9T9C"k5s;D;Z!fU`oii+8edstR9\sQpDUp$"bK<WbO:i.l).Q_T&j;u0BU"D`TgK+%b?.JN7PsP)$BrkUmWC,(
%'hGiiA3I*ma<o^+ZbG7KEU&6q/P*]&VB8^m?1oqG5!J_sA+(DmJWUC_(g7NI2T,?&@i">=gIguk@k@L+d#I.NHqc!h0p:m\4nJI3
%XOXp`.A2FI+<?JBAP'M'MT6JDk"rF5@?3p1K`aG)4"F(0[3*e8O,fce/;cX&?WGaeL,a'(cuXiW9IhZ44AH!\^QSPAh5?$'[,EZ1
%Si$%]H1`6)A;hSM?7(/L3tF$!Qf3l*?X:CIJ@H'Od$pAUo-Ip^`;O-rnWh+nDXrPT<%q$g]a1>/O>Z/]Y$8+Ij^OG@;XkKO#8'_J
%[%sPr:L.[4aW%u#WXi[TIKR1?9H4:D(sW(Fr8:eK1M=?2Im\)'cUp7!r;Rl\IS5>mp2>-!bcLbn\d9MBg>-8p^P'+qE]P+8(W+2d
%n?+q0([?#_6YZGrI>tR4kD%]SUA$52d(IW^_rP,nb6cK`0A9k;hCFduQ$(D)U#tm#nuciFZMX4sW/``ogD6J447apQ*A=d+c@+m$
%]&:;(gS]APUSPlO1^:1Lk\3QTJ+-0IiJ@\:iVQbTb5gOjgS8(K<Pe40/kaO?[Y))3>gE$,a@;CTlClDmm>kG:?"R.Ne-?MJLUJot
%Ucb$s(%,6PdJf`/K>B#Xq+h&7$U!=)\RuG::U?Fen*%WL_2GXr(e[oQ2<oXf(2`KD6[ctaC#+QdMZr:QMM<fflJu".&6`qc.t75@
%#oH.`KE23!l0Q<YEXMR.F#;f6Q$:kFk;SlSf_ag?TE^N`VX*dmZ/;\OC\8S9]@c<!V\9lUr6E@$o4Z7$H`[q*JN@tt[]2))h!_n"
%^h%7oX))977Z$h=E_D*%N4[WG#BA#J;4"h-n(,mo]+7!g3XXX*nfoo]N3nA^B<YouU`(p-8Frhp#<';eVg"Vem]R"8grrBiM[9'o
%'e*eZ$Tb)NI19u"=kLM(cF.PcLotA8/`E4C5b^ZmE%YE*A%JS5qTr#\.EH@`b@-/F.Cb@5e,<]qH[mq<X-l;_HF<A?o'rjRrbFs^
%Ih3!>;8B&14O/%,@W!G4Y&U=;rcjTI*W5&(gO0>Si_+Po=uAp_[D/GeeFQEtjL7Si[P#Gqq+QfD2YXO('IDsOG*=##?$[\>Z1M1J
%%/*1&3.=Bq%T!9!*/`UZi82TukO4M1!^j`:h1U<Z:`TBIg7[?l+2#k;+_F`/#Q+!3T3od0Dk"5TZ]oY/8e0XG(-f8!W>rkhF$=g>
%'Cde]J'NWTA;\n5@E$"cpL:t#S7Q-A[:$+C^?T=a'0-?CN@Jlg1qU>VJch1RU^J9RHin!.a5[CpN4nUsWsm&DM#!ec<L[%?"P9Ch
%"F?pAa+M::kSK_E_=mYtR=W;oq6;jlp;loC]:/OT`Et:]O4?job^.#U^Gl=D7L4AT=\R4^7N#,bKo\S\QB8PCYK5GVA--'2D2`@r
%U3K55LUZ._?i3THIe68A%0#]kU;oNK9&erfIWh1s6n[3+KFd[,/T[I]J4E1PO(P)Pp$'M`&.)=`oZ6j=cfD^#?V@j&SRqWlen@Nb
%gjg#Nal[hJ#o[[(rOt5/bUm2=Er?hcRCif$@F6`>8SgCVh7)S6/mjfNn$o1Kd?28!6Yd.qE2k1:0F(AX/(LE2,:<Kpa;U1D2HXg[
%9t7rL_Y<r+\,:6<--EQJ6$!nRr4:u_33OE:6/CCO7DGYijc](8H9BB!8rq;(PQ,A$DdI&*N@5\O9%CVl)(XC[:&_ZGQg&jV'jg,f
%2sjkZENSi[:*QW%rQtNea6k"thtC,95Eh`,I!m+9DNg23`I)+<26Xs/<:*-HYj"PR=4oqg!7C=P^[M[uFr%U-g`s-+k[k$iNmC7S
%NZPG`4eNAGRq2c(m@-pjrnYB%9i7&ijn?A(KDAE/r%\.)C=B2ndPRc:/be!X.uASq.?kd2Z:^>Ll9'a5<tEL@Po(6\`h%-lXi:;<
%dom/*#9ZCsBe]h_F3D;Pp0nH)l7r-W/]M(p`RkX0UX)1T7SVLUD_q'Sr0jUW\k4ZA@aaZRlKWT&XR>)g9oQ,i<6loENI2p6)u7%6
%$j9p3hgd@$cP``:Ahrmch/^M$%?Yp0<8]Jgndr[9jiLJW\4>L4b*\[5.^s#]`IO't^'^S==fK7OS7Cp@D'UJ+`Xrh]Yhsr#!/\p5
%h9kR44@X@KcQ6^egj_bAN8t]AaieX4.&)/bo;a`os4Q]JcFcFba)JO^XuiXcl1*Wia'D@TKo;!m5*I)5r7hkei4DNOS0Pgb_)B>N
%#cIUOf;"n_j?GJUht^)RmjY'.e*J<6\31N^*+Vk9a0Rmuo(MD?X.B:]0:)2"lI55L^A@IN5<j.ro9oO@dr:G`ppB$a+$Y1;T:\*t
%q+Q87oT*MEfUBg`TQ:0^Kd1nD9eQ^.)?ReSh+QFBZKQN5fY(V*bL.n/P?kAp^Ej-]aG?>(3D&shrHY,3]51JF..5D-V,&^(!/IV%
%;^[0FTP%UYEq:1qhu^EIU*^'Y[0o6(SIItcNDM-uicri+%/Gj*YsJrK9Q)9.I*0'N&Va<,7+Ck)R`U*EX(cq\P.hOLf=C$Na(VjS
%.@0dB[Ip:[S%k)W;j3]rao25'>"G1EiZA>3j5la$T^oc^=L)tM?$]\dT/"<7+kEt<WaM.md1J)47+O/qC\itirh$9)It-r\][;h8
%rZg?fN:%l?mmk/Hf<%l3EW"F#4ZbfC05fEql^O;W,N5@J`n^d4\!$.CP![AH/ZnoZ=r:1E.edin\W6!)NI(K40X</ac@NjRP$F$a
%hIX2/agkN[A*.==GkJmlND2&",@JDU=l!\r>o?_Z`$/AHqCjKOC(cXrQ(dP`<>:X;G*kY2RS@2un+6&9cd_.Xq3PIfli6q`r\88=
%gK)n`a%^\</c/WLo7-^'s7?9`J"6@l]F6HCHZ!BpR3D^(?iKVF,M7!Nj,;goDnjlHs5h#on,L^`48Tm+mC[rD#r(nm7X]]6D"'@e
%nRiigpq%s];$&SoY%B>QL+@Q@Ykph."&7o_Xcsjf`'q_d;6WS*BBKan[&MA'?T-4C(6QL:/0D9R-BrY+*b5;X:gT+]Yp)7ZRFU,6
%g'-Z`W`0dF>,qeGR,?QPEQM(BUOal$b[u3IHT;K6_+lWJ(Jk,.X(So+[++EIEe!TF(3igXnn7]tiW&/?p\,>Y#3&PrH_fWrDl5O?
%).>[5oA&It1g/dp->t7;Hh:W5EAj@oPh@cY2+oVS"3IUqaafNZ5=TgSN]I`&`@c`^""Tj+7DIWqputaaFTB7@V.g'C'Qm%f6"lBS
%MT@!GD\39Ufi8Y+*OCs$dN6<;K39K:"?`>^VhoF'WeuiNp6-M@bIT)3#)l6ZZ)1O)`W7WFkYO2?28-@m$uVu;n`h;kNBjmVCtk3=
%k!8tS!]#2Wk`!V.nmp-M66Hmh<BV&%kI<D2Gg#S_jJC^q"H$H-Vg;$rX;90]V<:ePc1Y-l%-m_NCO@Eb/;.48-u*HX\WI#1!MrS;
%3&X`3>cQGH'@23uMX@*rH;N?`(UGRuZcZ%'m*4t!i;clq5B_3o4H7Ss!F1'qn9?fP<srdn!@AWC.0hjai5NB'0"'UAW)]po3,<DY
%QZ1Oq9ESBO9:5Ib,?9f]-d%H4P'r1nD^UiZnu'`rDukSXrmN.rOg*9`8jb;IbKKNen,@.40\fC2.NP`d1WSl_0d(ebgMGWH;R2J"
%7bVlu8%Tc3Bl<iMmJe&A@=4s\(4@<2&NPp05EVG>hLtp0%o+R^P\9)$,NS5S3a9=Oi6*\J0d%ijH4ksl8M5;VNf&p>EC](5cU)j:
%kA&f/^<3"IRbeM@PZ<@VD/QTHfOZ,r>&r[h9'(\jF/e+WH;dnSb*.pcMn9!_OUZ73O1Ho/9Bq5#b\Nfc5K'#X!)UWclO`c(,_>D5
%`;O;uCln*#$(sQQST;fH!FS/p7s/74lu=@(QnKQ(2Pi6t"hBu-MG"m`ihYf'dg!>NMBc&NIcD'@6G>hZdbi;th*mi+\^N`/IN,="
%p>"_/BTs4.^,'aVMa5jFDA7^L,T@8,$RIN=Cg;d08[Puh]-g[@__YUdRAY#kKRqmSmM=T5h)C#g^DMPa:;M'9G4u&V[Pk=;MLpSQ
%T7kkH2/f\qoBcEjT#;`1X(H'%Ma%DrW2ANQ;D,Rob>$Vq$'cdo6E+pSU#tW\PT?N/Sir+@)I@=pg+S#D:rG/%Ei*L[Qs%4P<O4/V
%kQE8RF3"_0?2/8t:'H)B5OKVI`P?>//H?X)dXr]5eabKE:`@4Q-$Ds]A/$MBN);E!8U)P2\6S_'S-n7.o5jH@"@"KcR2^5er)D9n
%%j@@gdah]!4)<1,&>Y9lNs-B/!$bgN'iaR<bm(:cY]=c$JhgSES)D"j_JR>P(IB5*f`HH\BH\?[:?e3/e-].kSeGu9Q]g*<XW\oa
%V.L1j#Etp*AKR-qmk]-(,MOsE[Z,<S+hY"tf,=-d&nq3_UPsuDoK5%+8:9<8BjST0"G<t1b%l=*$l56Z':;t,g#N4:)Z#c^ohtb-
%KOMr[O_"ebaC8_m=91NS>rpn)<@o/<*hb8M2[KFa\=8f,N6G0@$2f1uB2P%X&fSb:mTZa]TY0J$#)J6_LC)LFICN+c.=nI0GRM=M
%;U:0%ou:da'FMLDKud]d60c#l;\8`=]7[++T!?<SYhV2I;c$Bp#gdgMQr*P<H:'=&cR`;CQ%90NmEAKh6!(*]%Rc+*o/n.ul,#Wd
%jGW=Q2?M%MnF_H>-5^&'`U+/J3^hjUH(KfHIQpX<iqHqKE`@)Tkl,ooXQ<tU-\(@nU'=)nLRM:lT5U*>+gYaoK8\X.9;.i@!,Vnr
%(_9j&Y'Y3iJfLs1G!iHe6,oS"V5&'m.<J!Ip;53^Nk.p<GGC+2]h#*COg$=tM.K9!RqG\p2@p'):tFbCN@9I6cmS14jfX/taFU<F
%\FlSW[L7+`oQ^lnMk'tI-+:%31[`N@R]3k(W,:GcXUboP4"2rq?8E]'RN!!P5WFDHl>fH8/*/5S\l["o:9)9D5!Dg]?Ueq$]A;Hg
%b2#6=hIlle#Ei>BQ;qJ*UnX<1n!;i'/:Te(;>9#>Z^oG'7m$b4q+oH):V6Q#dl<_u54P'=B]o3?+h[f]bF^uSB6j<0cfA_#:S7&b
%]_qDf5C\!Tf:W%A5!JpeDm)C]gZqZ0nG3fjb1laVhiujd=hM!L?;fbl7YS)eCoO.bhWTVY<,ZIM'`eO9oamMFP(D"UHu9,]`e4a)
%VtaO*b!<#/R'oI_<.mm#nRMb6%>bOKj,O2WMN%F%Uscc&9FkhFbi5eV1Si^(AO%@D0nqNkeNdad'qJIZ:bkA7fnQ"akq6r*Ar;li
%'Tr\i_8qpHU2B'=bVL10FX&P/G:MMOLuK^3!3fmm.lh11KLrSrW;"Ghp=t1Q3fF^``>Jko&%TNtONeLnZmA+Lo4APDNHQO)Ot+G-
%O^n1G%7Lf\nH"GR`-1ZaY1]l&-f<nmrd\\KGjocqhYH:Tc:=A!@4.i/*q[8LO0q7n6XHJfDUDJ;h^BJ^?rlee%r<+Z$NZ:tjHgh1
%7Oq$>1mS/?=po/['jM$d=Y`%*aV4A^lHPa2JH!P1)Y([<5_^0-@pnB?(HN,V[QOXu75NSPWQNai#h7V:8[3HN!B;'7148BQF)]4(
%!IK$7cN't&XLiff?$l52*&$TkqhX+d4[0t&Is;t.%,5;ZhXN!XVk"R]5c?Z.Ljna@I8B2U"mdteLOV%hXZnP'4-.7d;cjW<K!fF?
%9Gm&,Z^dKrn68;]dk9Jr(33jcS6Hr:c5#3ho,PQHe_BTbiQ$Zorq4(7LA)9IN2<18q`KfC>'(P3+"%jkc]C=#3lFk!VC8lJJ35T[
%F(c(R6X\'-WWn"-Eu7+/Tpbu?[2oIZHC#[?luWdGpX"0#mj`r'FK%e01)dF;Th\I8^0[#@eF?SQW)p/2(L9(j1e(J+g=84_^1E5f
%*nh]%/Fn=sh#T9Un`a#;,X<r_2[9W3qNDI#6hqV5"h"hOc[,I2)^\eA;r9VDX.BLrVQae$BJs>.97"hocP^30ND'KB2OtTNfi[6N
%i[^3[_ek[g1/sU#Lp*g^`\oSO,MrP;#kl.A&U^pda"&//mG(i\\RH5+F!Iu!!-+9$DO\);gCbJ)[_42o@"nIU.'VMo#SHe9oAliY
%!1=[ZPTM[eKD?8UJZK\bn$gchQ;Psm2ff-43u^X%Dn!#X<t$qg5uK5=<="8qdU6A<W*u@Mop^F,`T/6\1p#psaDs0qFB<eP6FL-(
%f8sa7,pVs0W,*;qVWN,Im9:7.;A@C2C:_j<E)Z"9(I=^>?3'7D&1a%,YV1o%G[2h$"8`H%B)NYHG%%A^]5.:]4,.][K#`-1NVUhb
%aQ@-mYWfl]RFcS/bkcI%+%rtZH*t;OFB\p`R,$9m1*M[KEZ#hJY1eVe[di4-gQ(f@*1Xq!Cn>-P?cLK5%^m\Fk<m:%)d[9'+0j![
%3tC:^c5d.6gO;31qk.k3OY'pD_9L+iHX,^rTk_$<.M]<je$a+iK!l`4%,jS6>pf0:*k-PLFhH8h[`>5*\*gqGpT:2$)h4p[r>a2_
%Z*jU\4m;mt<s;9g_%PP`;E9FQh]La)0Yk1.$S$=bIi^sS.XGE*!=s9=@ZKcFdl',?=q\[`nsqS@fET*'EXo,gFX_oTOX_Gm;.g-)
%43Yn41.5L)4N)>if[LC`b[-4_V&*":R's4".>j&D+R$>4O>atAJT$]>g42d`#J7&HQ&+"TNkNTI/gL'qr5XWI/0Que/3s[+P[TAV
%UW-.N5\Ie"eSlg&Qq+63gWn&]pb8Np&AEgGK6H8H3S%c\XmXjecm(FbfJMTF(5E4M7IbMkDFLt7>7).?`R7>,/[$1:7.)hU1CDXU
%hak:$BOk($=.WuLTSD?^SJMNLe**,E5PK%&do#]mU5i4p8EfG`?t?=4Ag?n>=p@>$cBgL<i7&m>QH=ooDFRhoI)Z^>_9#O`V5U\%
%4h9ColjCgmko?us+D_<(l6[R6bd\p=YraNfLs(N]F3!]"_*f5L6IaM-BB0s:>q]W1<3o=H6\A.:)0A=!)lPX_Enko!TXmHji$lTe
%=(X%&B+)9QPP9?P;1sd\BV=d1I`0MoaC?@&ghNJCbsktsXE/401cks]kq:sQbt]<E=JB$VcFM!WAr#q\.,K3dd%HDQ`Jp4AeY!no
%!2+?IO1TJJi3qq/cT!j"Y,f*LGh^NrN6-">\IOmAkIkq^PEG,"f]*NT3)n3+!I4-3Jo0]:!9%tQ32OZ0_j/+ml<$fXmo4tnE-SN!
%ge]<c5jQIILE&9$XtiVuM]Q=`K,mV"-3M7K1_)]<$@(gFXeB]BV-ub&;J2Gl@_c*oHbtmrOXO.+Oh-D>ZfoY?.M^4:k!oRN="&Vf
%-]%0W<7JQ:GoeW8%U"Vm!Ie8TXTTiR5O9/b#)NUjl.579>A#'q+l<P*#e(8a#419M2k*8'p\,a&^rpkdX)CoH2Zm;H7Y+6rQ>Rpr
%2ih0>-5IuMnE09=XMPA.>XgoPJ_2<"*)/KOWH5BbEe/$7iu&k0g?WGa8.[ifc<bl(Q]Ce\;#m?#KXd,(mDN%^I?s$+q]>/6&EG6`
%C.I+fHjkc.^UH%1F&k6f2OYN]'VcN#,-j6<Ka7/dUh]V^C.JH-j#VodZ>N(.IUq?\A^d0kduO4@>YeCN.t,3&o%[TIk("Li";_lA
%+k=f@/nZ\hE4'5c1uq+4Ep5:Wf[9)]+]:6;gtOPRebF$2W\KZX'$Y*s'WlnN8K2I2>mT&jgXqJ7d+A\cZ1$uUh&L^F>P=biJ$g7K
%*aQN2%cMQ2*%gM-81j9`lH1k>YO38SLu3+h89`?1h1Q^>rRuY.Q!04V#7B58'ZZI':(I*eSG[e\*t+p'h@B4`YhLjVR+uk9XGCV,
%Ac"pi7]LCik1[h3Fu)%O&g?(uH'mAFXt1YU)m:hG)l^6So/t*e1(;gqr+lK%@<.pHb?35egf>\G^<RDY(8002Sb?nQ]!ghBXhASp
%6\WSgFn^:9JC-=`;Jo<+c"VW?hb(Lt74)NSp:!u^d;6h1EN$op@_\DMc*Z^na^#u!bJKqNDX,l"WbLZAU+_3aDm'4J+C"m7=2`!=
%ESWala--U%MoeU@r,M;t-$,sCn;=R5Ugj,ehsHuo*!\+Z]5I?,^:0m=osp(ZV//)G$XRtT7%^R*^&rZ,qrtBZCK!0MD5<ZJhZ;Sc
%VE<K!nF((sZa7r]a5kddb(OFBV/t<TQ0qAB@#mI0i4BIRC;];>`6XG?p5=!%TP#T[1`!?_lc6XF!c#B+dkYa2*:1>d%B1<b+dUac
%hf+G?!fT/fES68)7u(KfjO$HX^Y@^5*^["+#&Hbm<UrRU!>i668BC<fVf3Du=(P%u?U'.W[+a]17];WXOZbomq.gV@f\GH$YonZ@
%I.Gf**$_[$9kDg_Dm1@I%&l6$([8I6]bKi;"m$KD^R:&/MSbh"-=rF.SLf-DA19?:b[bs['/?.paW&5OBfLRZ-Q*f,#"fEH@$%fd
%%_.PnRd[X0F^J(dOsISG__8fI@dbb<$GpKK@`UQDG"W]r+#.D,h,h%qMLhd3]A!C[(Qi2enBU?<V\#H9QCA&ObZfa2OC=4"lZ4>6
%cgC"8eD1A?(eQUh]fF+)Btji\iPt*3"R-)?Er&r:MV>C.2e&(5Z0.\G65a%[+orC(BqEL#13dR7Ca/r<S&3aKhEos0[SJ$O8\[.u
%/>_;60%turl&Ra$fWep0-_f.r[:,Nc$$XC3$>Alsj*Nfs%@i,,?`20Z(sGR7iUS8*pMQsh`ouB(D!=n%3htSZG0JW)g3R5o"NZG2
%HmfL^D"E!&)Ysf3GX./.*^b0V)^r\!`F&iUFBeUe>]3>Ls&>$TV7RNrAI>%P]uCSp'-63S@#]D>S3"5Y8(545=k<9n%jKX)h0a0_
%#e7R0$-'-/I47_2ON.af^Y+\8>%(g(%)Bme,[iL&h,aM4]aXYs[QCCR+YhBnI3AKWj=7qQ#Rg"bGg;AAZ@0?HI6J`"%r#:401Tl#
%-;+4RJ:A.,%/ZLi,IplMW:'bpN+gSJD]$-oLMouX@PkX]N(;)NTmQ+Vd>mCeQ*UJ,M<l0$:e6fg1u(8$PQgZSld3]X0gMDuR12.p
%;ApSE`pC\9#R!S@oNTuOCsh$g0PWOpgBK[>UkVg!Q"u)/ac3+Z;B^"n1ac+]We"h3*IhiN[6"pHgH)Fhr+<6^eXOF.d#]NL)X3cD
%UW4btW(3n8(K!VAf=MQW-eGu5U`hQGmn93==H&o5]"_Qh02)9"=+sh\GZWa>PtQ:+5KD[M]?5J:hqM5%pXk&:r>%LbEF"pOOS@SB
%*Nae"g0O'/D"H>BGs3*a\7Y`Oiic@F3KPm)Xt?Zt#BtH!l[P<@a%j1(P%.^5$c]m*c/+t.nRs094Y-+pcEt9sAOt3oIN8S0?-V4B
%f?)](R\)](AMWHd!9A-A,B#$2noc)1D'li`Y#kXM>*X-W5q,dB$0Pj[p/3!!Z$PUP)7IY0:qMhV@0kW*:l6h"Mb*JG<FtIpHm83t
%l,W&W,dPTb,B&"ANVA4Mm9*bWTO!FA--\u?N^q=6(XL\>mnXhhCY:u1W'F6G5s'XVkctQ*Z<2,8JL"?2FiX9]i_#Srn1I9!:=KVR
%KPc<I6".>N-R0ffc.7[MG1q;Jg>+fPhJEk@3H50bL7+sYm91WdKUWo/r`q9)-,oge9IY\E.'P5k;&!B478Sr7Y`YWlmmK:5(F!33
%'A/D]P.0T^>\qW,),>*QPdKN)27Ze4<`ecbs'g/5:dQQ7,M\H52nD'[jk:V,11@i]_1bNk`9[rNq&?b.RAT'J0f;3#+i;Za:H;rX
%S%#pQ4X8A_M&SW=Z",<";j`jWdl)XIH@;*MLprsu:;Bd@kE@b-c"U:+Q;(MEEFRNi83:s5D/<e5j&.;9HG_.m2_Lh>N%=[CXqq1#
%\J`b5'ON"'EeOBmbG93'_`ubDM2.T%]0St55Z9_:-:L7eI%)en9a49NBOfBOMKO6f>_^GKo==XNQNIaL7W519(J?)Hqp>IC-6h5Z
%hlLbi7Bi_lVafBg[dLu:[kuQY3sW(5mE\Yi$3F&_cD7gM6Da.BN,(mE1]?tlfQ3*X-t4-d$\^)ZL3tj`L@ZA9ka>o3*WWgp#hep%
%m2"%q7-"]F>78<"0l&T6XU%JmJ=8lCk.P[>'gMIW\op'hLlo^SFW>Mfc*ECe*M6*bBhL!;c5LIg9/.61hdgF%YD2WKj+e:Js.8"X
%#G*P<G^O^US)jh54V@(lYmJoFF.1>OAf?F.e\U"r$47b+Zh`jtZruQJQh,L%4U<!OBhobk?PZEPgF<qlPI"GmnY(=RY;-J</^5cg
%U5$-L8(UAA/C!2^:nF$84Q:3EVPJ^<P;M:qi%npBp/q[]/#9KT[2f13`?`+2pkq:=f#!YupXY8!QH_F-"+cdlh$1"ZNs&)5G0Z3g
%Np@$F:D4)f7F)J5WNRLVSEDq]ZhrX9[sV>.EO-dcEn^Z:A'*jHgm\I=05HcjF(9KYc#D.R2W?B%iRH\f2JiU!LMBJbh$meML-B<A
%5n1^B]^8$,SR5&sN,sH?ZO5K8gP5Sn<k*EF^)c*Lp:t[N6U1"]39l*h5BR'eaHBQ=]<qot^"bH)2]OCGeeOFI18PVSLd]su&o9h9
%afY:eh<W';,ort>!VR[G9NS3.3*n`3Y(%Tg;uX;/W@Qe!q52`nEeX=XcYMGTPIIK'^qMT7iH;aP/aTOZqeTWp=-r[7\p)tOa$?dH
%nJLr55!<>u->?hr^4%u8fA1hurH4#?$am29Dt[Z(j^oZ\MOX!abF1D6b@Pl;>AG0,g<=moDPK[jH10M2!]kN"ALeeA@2i6^GorYq
%M#Ce'4):25Fre`K]K6Vm2?c7ebmsY0*BhTj[)6Hf*dVAOUPI"F[]:>'.Vd_L^R0CnmXZ=sLZ[>,oV!S?[4Ue18p)*9^R33c'_"$@
%01C:lqj14<0*<[#I0o8,KI>+!NId<[517chjV3/kMgUpTpBU9P5f'3t+5@;7/A0k79@%E2k9dqM_+H/+gsL]]rAJ4BcgAc.n7qYc
%+#I5++X%Uc1DTSj$@3la0lN'<oqg;V_^sE/HiiB)O0bCt-ga-96+<V)@/[E%+ZMU=G0j<fc5e[i[Zg[er-K6/F._FtoD[c;Gd[CA
%".G[Or_9\e(E;gnWT36(3QurpDaFFs(S:,k"W.#f029@FnK4C?X4\;;piasAna@l@c,-cKT=UDBaQ,9'q<OGaIJ2'Ahot-hF[#j#
%'(0@=p#4Y$,['tl5)2=(`_VEg)WAifp)8bP<'&nakR+4rYlLSm$?]c"EAq)#538f.mTnW:BeUE5$G=)Vg%WPiBr/e%@2L`E+?Z'L
%hj8pG`D!3&>H<MtfV#/Om4*#U'1G1BGsYMRa@9gYgHtWC#1rNM^phnF/Zk"!94Jh\lc?JakV&tiXjFe+A`lWu1e2ZFRZHLZZou.'
%/1)E1B`/IJ66-VZ^I?7JLW,+7PofSRVS[p+>J>dhU<<Rr([`1I/JSF/2mWlJJFZZkF5JhHK>N^jH#l:lQ['CA1>1O;5k?O"cLI!&
%Ufc]ugeqFKBV*2!'eMh342rs^OE;_q72^SV9c3U3hY5gCnR>+ifl6/Zc\>ib-q")(@\p^+0%S:+oF/8sojd#LR29?_C@5Xf!T#/t
%g`QV)_#1PR%W12V8p(&X.<:)b@#sMD_2qU&W-"Y&k;0+K!(.m0#=>3E`(@%mEt%"^QWUeBCLPL6p75c-7%<7gTWn?`'-'T_nh)&o
%:`gM.jkN>e[Tg1BacGU;RND!J&jG^#pKpS9s,o>A"kuJU>/9I&`k)9Ued"S.PN_Hn0MI.I.ASu&Q;S7)Qtl83+@1u&o,M=$RM)m<
%BH3.A-OD!uM!uYq)T\8P>mU)&DLm0$Q'sVq:Dt"<`4cK]5D;oNZ@3JF*E7,>A55J'X_g1pWBg6O%:KbQ/.QVb0HrkOJ@nh^SDX^*
%4[NRUb4<-<5TZ$D?;98Qf1Kk^CMWn`l@?9PQ[)s'+&n%lme6=l_T5SVQ=8e[949lI_U<.\8.-i^>N\tcn\mV>2tc]'mom4;C\2p-
%5H_YB6rO_ijJ<_3`/#0C;9P[!DVG=U&?`L:[2d2.*3G@#CHM`OBO_P9E!luT_(S6U9g"NiKF0::VbAfd$:J@npK[r+"75\GpgUi@
%f*Kf7Y4!\"8c.k9IG@o<0gG$@:Nu-rP5Nh#q4m*'#855;?s:72SF9g!+BU6jUgD+OBKjI%K8j.V9h=sL8U`\o5@KHK6DP<7b'$_r
%r0*B);t+<31PF(dkb"XbIt(?'5UE/?p]j>=@]84_"'PG\YYm_rbYMG,iP<?<QB_Ne9^@l'eWS"1BFdpM^(3@l;'$,[A6EVm\:Inj
%J\3_r"r*of6uk]'E8t>$JBUg)9n?Ro%?s<bhLm[/eAdu>/j[5LTOE2S\.iiZP%9RTd%8?OYl3hu_VbQZ"Hm?dW3*Z1-To_o,#CP(
%1=mu]kQW36!97Zje.[jmLkrpKC&%BLWq2j6C`e*UZ9@,Bl?tI<_Faj]dX!9Nq#oB"SL9/qf'WC%LUR4tr;XLL'YhVj5iB/TQS8f]
%]DN"hK2Vae&(-X+]Lg4\.`QunKiebV'l,D?hQ\Aqo6)D-[CMKu-hq1jTIeh3>_9![SA)qY)$rS9mk1G):TWDjh-u!"")*WBUo0RJ
%r$`=u#`j3A/FlgFjk0Y=Ra"d87Zjb_D=UN<R"t]Dk;SQPmPS(irVT\ajQ[8IhhYZQG^V.B;WmeTnc/Ja;uF)q$VKF4c(W/T`;TI2
%"nn7[::aF+U,G9<+;P3[<AD8U&3Z8)8>G`lnKJGCd9+9N1^J_Q)l#]$ODHM]>b#MddR,(E*.Z+(#X.Lo\J\1+1?;qGZb:8]WsUU"
%G>/R"k=qKn[B$nGN]BV-m%%D^m]"iKTc]-sO9VqrRt*F2Huo7GmkIX4fl,L"RThf\593q*3Uf!KKn]n,';8(PKNT:[1=7^?NkaA<
%Ji>Cf#$;E3rRPa;1K65ffjYr^&XJ(VHQ)=:!'I,"m`6c=F-^/*Bf$6[k?4j24-b5S:6[;RGlb8\HcGnM3S\')e3<WJbVMkoGkj3o
%nKq)]9G#QbmON@%+p/SoY.8D@dgh9A&,eF^G`;b\#,2pnTkfDAhpik#0=+c1&eH&S0XP%LL!a=Y\57_\4Hb)P79lJKCN/YN^[^Sk
%ZWZb<%[G)LapCGiTh%(n<X`+]al)Y*?O5@Y/<!'\1,`69Td6Kn+m?_Uc58HjG-jZ3&`SP)DZD/B72Ln[WXKKe="TGX;aHQT^'Is%
%"LK5h3/WO6[DL>6dHN%apcWh-n&8ci3n1>i^m?+qhkOc6*jG53V9>"=h+Z#-R$K003;_4\(BP7q%k;dIA1\7#V(d"EHV+7<p)ebc
%e-f$FQ*APGBjL.CFrkLe1F-Q=`=O@3DaJ-%mLq,XW1f;/(Z+oEc\`9g4*/$?AABFF1(%_G6Ri:A9TsANoso2CAbQIj%;1^J\\g^@
%`a"EF94KFUZ;.%Z>6;A$Pac-^7Ed^Y&593O:nnN$H&'#e!R^^'i'%RF?C1$sNu<4Xcs=2!P)SYEfGLH^#:Z';"`iA$P9e<`:,?]f
%rmL(>-d%l\QO[FP`20'@dV.;sQqK<9C_r#7e<PC.Or)/*?9,h5>0,i2cAuaj(<7WmZQ=V8<%UbH^RLkQ$AQ#p+fL;O69#>ULGh8@
%bS(W+hX)(^qf:>8-R[KBnkc=Z?neN8=oa4ih3uDW@O;gna>LMI-BF63>H'@o@`#\2XQTg_=&\rtL,k/^8][d1Pq8qFFa7tPL:**8
%5q.HaR@(2*/4e4#mWoLc(hsVW]RA*r!0>@Aj@S^aP_X,\GYmDM3MR[os&V#LT;a,cRkE@$C_I(f-is867mjG"(T5)a%q_q/#RG_C
%ZDhVVU<^[io&0;I>&lSdb%)3:GVR*ZFX3S#;=/XZi8;V+7,q6q'L0g-n7Z&pN1<P*=Ba6Ls#08;%*M<tUkpdb5Gnk;EMKM-Wk/V#
%&XDF9M%Db1[mgJBB6Ufi;/G<V)).'2q$="W9!BQmNGao=!d@N]?4K#9O.g;\%;]X68N(_rBp#?*l`c?o*%GB8J[IU19@/?p.mk6s
%E-AN`l97`$P'pTlgMtOWE=6n$Q:eLD%VJdP$lDK)[5tZ?/3]Lo7_pa.i^K&ljc,T"66.Q))\0"C9Oo6/S)+]#JbY5VUfi,mMQFP?
%1p*lBU]b+L+r8(19%/Fs`dO-<CE6G9ahSBodmR.pXcjEKi2:2R/-F%p5B2L#WSK2`Q40s]`hoHN,O2$p3-$-9'<WkPR[VTGF[FDC
%CEPugao-uOn.B=[%keU:*aUcXZV3P8`;:nio_8Mn'u)3i"15cpmTUq[TE'Mq('/bFGYTdj5C(EsMC]J>V'abR1j]H@*L)7FABeH9
%%f4iWQbf;DeV4q.+"@%bJ5>$Crb(ldoB6]aDYn)=kH>j'JN8X4iK$EW!]#OPqk<4L7.P9[TDePg6;%6(T3>-4@Y9I<-N.h&HO4M6
%dT])Y?PG/b_EpCFlUj)3SqJrF@_a>cXhhJ4Cc'-D6o4-tKaVa`$XGngAe.q`;GgUSj[D'@'RNXTgNaJuTP/j,X%&\9)X(XL1-k1,
%[M3Y1#^<_RI\F>RH/NrA%,Bp:f8EL?^,_!TD$^lGCsdpZ@b8M1JkEr'>$5NT=3cK&`_)NID4Y^]:3(OSD:@\__V\S#,S?Z(6!N<q
%Q;r![KU@l164@maXC*4k9on3g_<#BQR/r5E-XWLsN=cO+4B5_'"V.KjJ8bYO+M(VPitaXL1fU72PW-/\5dGbF7:e6k$+91=]`feI
%Z\F>;6!<?2&Bo>QciQIn$tHMhec+/9`ZHoab$&Mcb*PhgLBUk7?`bg5Bn3rjab.&fRG9!SC,SWX8t5=,YbO=]ksbKaAl>^KX:tPn
%AQ#0DHqi!Q9o:StM@.4sJ!q)O5;=VFH5uIq9FB]([.kj`-%A^SimV-F@&:<u(kkMjQbr3iNnlB*UX1C>$!\`l#]c9jVHPRYY);`R
%qk5HM'2R(\K].F0ROHM*<fRSirG5[ZMqtu>,(nJI"M^TE"*n]ip%ceHnW3"lh`$D%m6]-g)CaFC8ZP5H+3NPfQ*:f!nYig78D,Tu
%cU-2#$^^L9Vs9b:PU-<k+JD":]^6=Yq6r!W#rK6;)@Q>5L+>:&DC(PkKX4\Y=Mhb3QlIS=Ko:WJU(Q/SDE7.^;XF:8Iie2W])7$?
%:9LN]P3n(:+[i]ORlhYEqBUC7)eJ?^:6V)g"_>\^S=[s)0Y`K-O^d>T5U]@g1]aBrl>@mBH^JgX!Ni"tVb(;.ama?O"2q2jZ:/q:
%*2?j`bXk9&g.XI8#ojH#=I!\G9>b3D0?3p6>m/g'I0;Lo;?+gl:ggi%'.8;M#R:CIS9N*Ci+kW5p]^[Pbh,EV5iS9T#(35N*uo!@
%$j`06J[u(TD('0(E=[FBptB%sq!Y4T&GYLE7=[/LX1/S<eSn!?lph"c@:ASC+[a!Qc`"Dq%5a+dUY79?LkQ)>`idZl0t^ArX;JW_
%GfTTA!:="64pFY18>!dF/8P=5Y/Prl;lA*-T]I,/ZqP\mUF^!qT+\r@3aX.80ad5J<.<iI=nkS3o&o*=`Li\?KFEB<9arRS/lZ0U
%=DAoaFoNU?K0C7QT:Qnl42!:$I[h/X<>fXS1BO!MqR/Lp=-kW^M6?BnO8X"EX[ZVi]>N5p>BTrGmspW\FFQC!-QqhBB-C]r=T3n"
%>u7+4UV%>L!2#)_<tFm5YR@`F:eb"#$&.1EF]X8mV?MgRr_8aa!\qS<=FLO0U\G[f+um^of8LS=_d+,FLB`(WbQc[;JWMRe]@@RY
%3WS8q@tcW_b?P(OJ?]WJ8;[<qOpr8'+eV2aXN1UW((A@tP$:7KE^M-a0=i=E)Zqqo]<%%d[-AaBaNaU&r&`-*@:7KlM&NkV9/kgZ
%kE!6mQ;S-tJpYkQ>BcIsNf`;VaRr5+crq#Lj^R>M>oU3kp?$m`#ptUaHbZs+qVEje!!=XEG]hAL%+@K[)\H*n1aa"R+?:nT#*Hjs
%N'6(?d,#B.SG$HGnS%_"@584<$S;c[[s04neLGE^hhDJ\.84(#05,:4+;9h-ZW#qhZq`Si(q]-=Sta'60@A6prj`&Q"Mu`q(r>QK
%7Ji/OSb4RIcrpF0bf!MeE$eGXaat7idJA`TVi(t43/67[BBC#kJU+pADM5?Y=i?15S;JFpE.`CA/45CKS>c@5G,Y$T=C*d=WGG:Q
%#m+d+Q6+-Y+LEsJ$'!D.EqR]=->YUa&'YA!)#3stJ4K.n"#\j6-+@2fkjYgF<?q[BBh44N5QL47FGS*q/^K'dYoS^H19c<LA@MYa
%I2K=F;@&8tKkoZO`(Va&(DV4c<`K__c\W%SRT8^3P0V&Hp;polgjHrj("Gm-$>aV;9X\KQaVe]JUP^95TRS-'Mj`RlE[.6N<Gq:(
%=3^cF/,50s%k)]*7gBG3U'KT#$f\6k/mgqU'$-'iVXi"\X<R2u"Lt^M#4q>r]GaH?+g`nPabJgDL.hrJ!P\`TGSm/!;W'n^%eDOs
%h=Z:G1?O7Kdh0h&O`_1WAoAr16$C$tGp#^=7\$6-_ZTfrP)Vik*3WkZc)1_*Tq<L8Cc]#I.h_)e;-C=9KfBn"kD+RO,*ri$UJbd<
%-fba;gT(X=$O<iUDq9O%-"GYnZD(sC$R^c\5<VNTMQ4Da$+QcAPD:'s?=p@qfGM<W&'SY'k)$(0S)i<OS*E++piiXd+G34i[$PoH
%L0?Ejpb9$AE*=7CXr*]<KEaG0=pTIMFT>nZ!3@@P'c,%:Z]#ekM6$#SA:I>2S4nuhs5M,6lLD&!bs-5$Td-(L#CMT]P<V*9-UL&Z
%Zl*$cc:Se/%,Y)E,9fi?2gd4I)n=`FcW:IkKsXT5e@Q80!et^n/GG(k/rl2T?e^F;E1sDRLNcI:(;L*cEFO?FnP)h^qG">/.I&7c
%oMl2jqYV[D%qk1]o:BOu^J*6Qr:?cgCQ$/_""3XC!S<uMRK[VK\&X"$kP4bL0o4lW$Xkrlp`cMqh*TerR=ZB5E7n7:RQ5%F^_paG
%ZV6dpm.k4m0!-E=(.nG&P[_0i9_,Dg<pU?&ns7VD>r,[>(-s`i=mdWC-k+2ag0cRWj5!B^n54%CY?[fil,_'5%RhK(@d/[Zo^:PD
%WTVYdW-DuZ0Ah9dS4kDe'`sdOjUDLkU@l@NQ"7gGAS3V?PJ7hAS5>@'Q11g^ZAiLbJ,eM'IfEqhJ*OlMdU8?$qoN4\&.1"\/9%DO
%(+XG$f?e6-+Ik6H#],T$._%E>B_jq;A?,..k8%+MTPIXA?s007Z64q>,"s,(f?&B8)O2jgDTIr8Od)7`70anj-_?MuP3tXD6e[9a
%D2Bj2d)%8.65^`O(9!f-rdF_^l/c2-1XknDQnN0m6QAJaAAtuU*%'<gMre!bUg&:kA[pWOGVp;\d!h.)QJP?9h9(eH7rfdY^Y6_K
%<a*UUMI?@)F'7;0g,uJ)J@TK]=N<>s\0l3/X=23?]3.:8(2-5T_GOFI:C.hJBi0(>K2mXFjED".h>F%a."0H]p!e#t=IKsaMa>WE
%(#%m*Lp)*+GH7W\mhje!pE(o<EXVof^F5.b)K%%dS.t#oqfM9j]U4O?omKJCdg36U%M11DR.>"9672F\^eBL(C3%9%_ug6&]%Kdn
%4MPT9Z2%In]u0&#0H%H^;$g^gM02gTNE3pab^?7t6]L[%cf(:M4e/Wd$::'.IK"2?hX8LVB@Y*W'gPWn'9KmG@ud'$7qEJ;+(S,*
%l9]Y'eFOiTia5CGlm.ZKp</sJSKE<>IRPLo$Nbi!CPL<n6)c4G41J"b_E@lP2Ws9Hb&<Hi?$.Q)8R<JFMkhW]]hO@Q?%Cao:B3)Y
%G%p*0qTT0qp;g]4n<@?#PMj]%,0&(Qq7+i/J)G1F`3A7>oso?3<+_\h_G&X'a7,mG.prk#U*t+ubaGkfl8gbs3T.J1,66jg6q9#*
%%r/H@W+$HIVpQM7m5I8>s.g9hV23'k2ajX=pf;N1IES&HDmgo3JgshOW;G(KVQ,O%j'0p@hAQCTq03)+j4':&,ujr6:gXPj:stK<
%8<ed\.Z-Kld8I_]Q^Y#]3I2r%"3oG9<NG'iF'e$jVn8<>6l*KA^#j3@/X0PA?qE!JF'8/[]?l<RZN:PIeYr_:)]?g"jeA((M!=2;
%Z`7]6F.u/8]LaRA75Z[onWd?\1QI.9Y]o-F_<B*!I4j9p283@hj;%2R)/r&p[gs<Y3>QR505URUCDTeBEB2B"\sY6>%KYW<W'l\5
%SOnu)3`6"?_8DCUCnOe)RT@>=V$saq-<r%E,H=!od(:C>aCL0%fe-X5i9VqR_h?YLRdf&q%->HH_lWsrb'4:3`%'gm>&@Ba>$+0r
%H2b&X$'8cth)62ZP_7A&Z;S^mC,XlU/Z3'pl\+>"Fp%0g@6Q:!=_K[!lThI/G%'%38B=H6lCigWT-L/]GY$$1]KQnXBp8P'l@5u"
%S40'm7`IOje,Lo,*V5LokbOj+3BUh#cF..HR"CZg?BG)mW0$LW?aO9[b(kl6_kq"F`bVYJq:]-,S8*nhA)#gQ-um]T-Z7W^'Qk/Y
%Ct/?j@j'PV01N'X2F+k=NQ:IJ>c,M/haOPia3u.m&aPmTf):`bFs94Dd9ik<I5L(0<&kH/\jJ?>3%Y-(>)Tp)9%LoD!Zm&@?#;Vn
%1]./CNup9Iob*`G]*cgNp0BVO'qV,h)QQZlghGun=Vu]-5B1JHMGdDc@">3&%P-%=E=@EX2`hLbBZVdKdjG*s)r<LW-akDgD;d)@
%Z,a:,XK4@`@)1#3<$>AtI][1%mh=*lMj([e`ct!s:3j>_KC_naYKS+i8cP9DVa^@YH_B`Ka"m?7$K#]2@N$*29[V9a)8+ph4naTO
%/Ab-4^Yo?ia>B+0"J9KOC*eso?M1*M:0\X3n<dN4^cLBhJJB,8^qiBiRF^s@d(7\/[\cuO!Th*.2:+*AKe=HiF!V@#WmBAYgl1N[
%g)1F!DYe@4?e+'V#O(J%YZZ7_X-32<oB]dV8ff[$=TkaOeQi931(/lR+_bEp3re["Z@<Ok?4_m-+i@o_J6g&"6[03<2%3YP5"#T!
%g9qXp0+tFBT=_`PP%fMCq_Ch2]=*p]Ct;)jZ>0NHdk.kVmLg.s*8aqC14*r4YYC$3Z8&!a<?`:G)djf/L%4@0G*roi"sFP9X<RR(
%d=>SHH*7[&.u/P;2PU)DA+RQtQr6eK\-h"*Q?T_*s8&pp)aD.hBIr^V10G7J"tr%b?+31V`.$3`]l!oW"gBS#m=SHNe(Tq.q#-Bd
%qoZ!7Pd>S;?O::7rNaZ$TJBK=5A,(534Dr/n&Au)6<]Hc*29ba_%CAh;aL,=9^Z=Xb2'9&\D211AK$g@n5sG4['lkRmr\s90*u5Z
%n1[->I_+T..\JIu[TPpQI+R2.d48m*3V,"_Z\i?HjqNUGYplcOAc[&)U9ACd,j4]lXR3scn0SJU+lEsH^,:G+IM:R"G*=irC8fP,
%ICuS>VbkLT&9^;[]YC&E]ec=bm,cD004$Wbk&2L2^.cf8JD-P"4ji+q(<;G()%uDHjU;P<mYd=4*DfGM!i/)Z:skSF+'Y(,Q*=Uo
%<'iDYi"nP*psrR7#_[q.IQ.YA2^5J9oTB^fVqFX'Et`=%*<QU3dCc3IW?_t[lI!FUTKVb@V->ftBbIXR=n7hiKQ`^1R6%b.h\8hf
%_93>#m01HT#SC+M-$pbG!,EBpFblNNYiA`r8tjtq-Q[j#:BiL>qsB/+Dm,?9[<__t3s.Fs'Cr6bU+p"+>"6%@c$f1C^ql.J0Qm;u
%bJ#Z$X\^G`^PMrIhfHp'>pe!5;VRT]lR!:;`gYs`0,Od<;]`E&>HI)S8m*2]ZAWQeVX-:d['70oGBGDQA1"epRHW98E%7:?qP);_
%D(qRh8M^;,7@(FpZI+12#E+,]9H[L%$'BsU-4K_'+\[pgJBMG+g.[\tO62'@-8_19eT0!&+Z2u]7PEN)af-^\3f2ScZ+G0>)hfsJ
%S:hm;cfCK<`@Zs:W2T!qOh,VYVWZ'0PBi`:qBkueh!:99"]h!uN!6D^m;X#N3F3+lh-<975-mp7OJl]6l@N$0-I85>D%FF^\oT5t
%B)^>>c@u[ufqoQU-nuPr&T$%/?Qa?De^f3oa+=c(GJ`KX*9(Q)fO`q^!)>3`B)$/NK58.7=to)H(^G@N^fBPBb^l?+Yj&_pDh?Yc
%m"e[UGsNZ%S=eW%I028gZuU<*Q"YG<"4g=*kRp*5M#&C#97>3!?Q26U=X]M8r3RCZ6*=<Q].SV*5r/e>[c(r"I.Qm=(9;U:Eb\&f
%-=":K38m3f(;HQW1@?1@fpZ@r8<9%\_#KgcU%*m^.W-i[G^J+V?Q>5'AG_^D1()&@g6mCqIGl\;3X$pNi-8J2BXN.>8ohG8$*l3+
%@<$#i"SZ^fefk9+LLiE63:=p;&`Lo$JMrCMd/3/.r]mmXB;iYVX,HQp##oSl\$tlg3W;]Z$IW;iB/%pO&qG^F"p1@8>):W@7ZfiJ
%BfINZ2G4e2'SW%WaUsqEMnN$T0Wk!T<Z/]Ns+nC[==Y^8]k#fmW*RPK$?96q.q<*QDVnF"LMe@=]"=j3$:ggief3Z02#IS//O5C>
%/2=nG>6$JlXMp7M().a:3;!4@`<BV.s3If"GQjH*4('*03?[t^6uXOJT-r]K$L%leI<V-13Ckb5U)6m[Js48<#^-M'<IB)nJ5##^
%X6nWAfmFuBJ6OQ!I8lS:8Alae2u;1BAoS09M.iS_@=fp6WPm**.mG"m$2(`Llk%8'Q(#+).>.Rb.BG=/K`QZ`]>8Q>\M8F=+CRrq
%4@8TJ,Q2T&=;UK#0Pkhnai:\'(r,c0:?hI4\-T]0J<BrJ76kDfK47HI02f-)m!sF\AHDjgRZ_`M3(&5B"Lh&^,<IA,JM<$sPjR>3
%n1Nc*k1d>oP7S@8Pf*=mE;_0]$42f6V`c.LeY:c9U0%#s=GjtL!h3NQEYqlsRZBI3#cfFRSAI<<>9jN,/7@bEf>o.pc%['%T0%\!
%jPaL1V6c,I&WKb;kX?5#"aB+5(7'+)Ym3BmKNs="579:K,XVk,_!DmFfraYEgf/fF/.9m1!6D)j'eIsQ&'^:2[KuBa$Emb^FH\hi
%%^6,`1P9.0=H[K?3+X.?TlXX#&<_H?n6HW\6ee>Kg-NU,jVIWc>!Fn^'*>W\:'V8J/9YJh[#>.=W6XX_.gLj0"!D/5oKe`>mX1Ia
%]&Lm7;.QGg1B%j*d+9D=^BMFU-(sQb(PEak`fi,;_ETVE!Z+)h@M&DPfs/"e5*I)5Hp0RcgK8+f.CGe_HQkN@IQpMZMk;>JRWEir
%n7V<eRD7`LW-h^6)2?M/q6]08dS9^cP%0K8qe;(65*I)Ur-M/WDm9C@h:@=R$jf6TN+I-;"Z=8gr:)<KQb5&30YWcQOr=.7RD14A
%hY,LF+X]Am3(Ztf.!=s+Ho[koT+%cZoj(@.FWRqGZP]gDB?>&]j%3Jc0rt(brCXf,RtN/[T>tF+r%85I-G>+;:8[DVL#`Q\]?$]i
%oG.L9MtL>04GDk#T<h#=!7b3o+>:rL?mB-/J8N9`(PTO5(QoL&S+Y%_^Q=(eR^/gY!pUn.j"g?M\.Cej#',nLA'5rinrteQ/Yj;7
%.9F)%phTTQSI9_0Y=n^=9jkio56[&^?$qD='=o3rLKk2%_9NO9=5D0l1#Ff@2qZI5`0bR6S9Re*;W%f[8c6)V6)b*MmB[YN/#&(0
%?$Pjec/4Bg52Bc)H$GN'GCRdXcgl()Dg2$kn^6Tn4'`8Tn]?i`15*aEC?'sEnKaH,?jcO>k;2q]cBlK,^ZXlLFL7$:[N%)?P]MW_
%,3Wl5\*7VCU'WLUON:Gi(M$VsRgk1`h0^S@0W=Q/Z[lC.1M:n_=N2?a\[RXl87pJZJS6^>XE6CM/1DSX(4.J]\Ak9ukV5Yeh#MgW
%L0Vq4a5Ls&h)NY=LB`@Vr8fJWl+]Nmjgq(6rIY#=@>t<B"s1RplFu6=2*Tu#q;Atq!%7aJYf;&JrkC!D7+hj7!7@ZJ;ntA;"4'o9
%ka#1bfjsdZANO`4i7rI$GSiFLZh_uh`8P<7EJZa=TO;5cHU^`eY[^&IEM\fT`=-a9Pl2PNMVK5'Y9QLhE)%O5jF*[)hnmN)_]n8R
%h$uI%c\`/D2j3,7!_YHKo2M]#LleGC`(@BR(%Z_A"WTu@puVFQ,mp?L.JJ"djTD*!0#?)fn?`s)<[f">?I%AG`et3(&e_.;4PF%l
%%;^Red'Bq'!BuFh:AghK/`OeS^EnsDhV<(\;:,WC/OrE*,<-H%P>W$6<ihr'"&`kh[u&qkoP%N4.(3(pi`QLf:63sH@f_.BnFBfp
%.mOifHE\srRQXLfnu.tj&rt?EK2i(?:uAr<b:;3^K!."_9+5iKqEm#*'>>=GqBNPqT\mX%E+F,sW:$!$PIP0PMR-@8AmrWJ2p1W*
%V?iI)MZp!+Q-hq;7sJ;&^=)1dZsKiPq^3odX6K3Hk6%J,A3KI97-(s)g4bNL"!T<r*F&LsH#'K<=>iD5D:a5kYU_Xi!b@/L#<*fR
%Ad8$[b/)("T2A4E:fEGjE4&!X,_R+:8%s[j+JF`kBk$7d1TD(V#ogIiKJ9D`#eDRaZr-rtNG;B9cP\Wg@SRYB7=&?M"2M6C8`1Ai
%$[=L=Fm]#[l:3l[W,WjNKKQ7l]a0Z'%3gEn5gPdMKKt+L7AcM^%'Yb<e8OT,7B;:;m.D'u$d?%NoDW7<&&h5$=f@0_#\1&W&m3ia
%l\5?NbP8R5XaoY7q$f4i]CVTa%aHJG'1sGkR3<8V"DCr#]XhE2!S&[1ejG1s6QG[g:Qb3(I('4qbY&4;qq`(8r5\mfSW3J)dSPY<
%3Q1.gA.a@ujK#'VCgJR!/R1Gp'Ckrl[D(bgK`MNH(2.(X'G--T+Uc2Wm6Tko]q^;S*%>=sk>D=c?jS&c#0J[)3.WF'6GLhI?TD*m
%f@NgA"pg1UiOoO:Eo^b2hrS.KL".ZY"#L.H)m=UY_Cg=FKYK$@<aYos7b6F>q;[ZMs)MoRDF3fBC'G^>!^/a2D-7mN:AsD9#K>*$
%C,>DD9W&',WjkXgifB*!oE0\1NV*RkZ)%6W[Cr$-Zjuol/l.,-V$bNgm<g6Fg\LJ!o,#8t%LdRRYA'@'KB#:Jf(;0MU&Y+Rcie^A
%T7M1C*g2^)E_r,fKEr%YBn#d1^Bu+U+(.?n'+'tg<dW!)GH4W!KU--3*nF7YNntBmMSP<-9e)r[no!iW$1CHrm86qkc\Nt,@S/?/
%OtLF$$M7gHik,M![Qq<@6;g289eEHLXm\fPOkPTJG#'-rD^0eJQ_n'k<Mfk%/Q6fBPh4"k--/SV)<-gcMF>.6\B`-\V\lGU'Aec\
%1I.6,b25_.3nTQYR(/Q7,1/+[W7r'C."<%5CI,M2;(56IgiD2Xo3Id8F/P%1h<:5o,^DbU+ITm9)9jR+\5V2RXtj2%>Fa8]3+2tb
%OI.oO4uQeb$jiCCKM+jhj(OpT$QapDU`oSo"LAmKgCg6LK4/O4i</P!2&(RB7l>fZc8rH!<^_e5n6Q2V1T,NCV@*WZPEGSLlZ(Xf
%C@MM^hdgCI+OC*0B$#Sr7k6`rNi,m[a2WejK44$G_k++p93tIB0jpjZK;[*:UTgrN_LZjk4!pUWi'f*TE>`Ri>7T<h/_]b=mC[.Z
%@I*u_k$]2n..!<t>W.<i*t"^/P+Df9_(ATI+mQr;_Q2Bp<Q,:OCsdNs)2fb47G9/Ndql/&Z4r*\S-\l([OpG&2"CZH,5X53TX_rR
%.coTRh/^7%+>,JFk!rTKYu,*9YX/=Y-_D(ZQ9K'<Q4P2i9bX,Q7;/=kHf5T)4]E\J,3o9n+`%.-%4&-idR7G'K2La8NnkdGDuP/k
%5jg/Gk"`T?E_=:W,Fn!f>E%W8eAu=ZVEB;d+oL9K&)ACi7!sJG)NEgNeqW'&fL!=(OHcNOJ1Y-3L[+=HDtGA<3cL:0DpMIFEP7`l
%__H?3GGb;<3d_CWSW[4$(Xa?_Ee:9l%cMhr/ifN4dUBabh)s"(1nj%;Ok+f8&b`klXYt+'q\3=Vn*J`k26%HKn9+-if?U8NZpVYs
%TG#8G.Xmk8,Ukmu+&?pe!^KQ'=Z*FAS1N11$cf:7\+#mCF$WQhj2Zd$DgYm=(!ppN_,Dp(SdaB^irS;'<>1VUN/k_mb4Q_8b@c-J
%6Br1m'%IC:ntBhOACh)nTL[l3j(!hZ_^ID7@bSO)qYje)!\e^2k@LH6[U>D&,u/GCjbWmt,"@:n!Ubmm"PQOm@Em97(!1G>F6&mX
%hX86mC?99)W]"#i*+,`rY-EFILr(Mb*8LhX6FRpCqs!l1cn]HTY%E6MWM9<;+(3Ts'):b\.GFqd)`VKhr7[_toLf?Za5js:M45Ea
%KZNZYA1b0le-J_K`"uP3_<k_<h\jGda"NfV]<XMKnaU*K&)qI`::[B`U6RmG13rb2)`DsDe1GE7"]$!Jg^aeS_Jc:s]XudV3O%"W
%Z^JGmj",S[b5R4b6Ih<f68QDAi4S09PJ8I#jAZ[98t]1rjik6f5=WjWUq<j+rK:*)aGJ<0mB(?M@C9N(Nj$:tM;R1$k/-kjTt($j
%,Y.+uotbrsn2#>SL46T&M>Wa@T:1`O)No-]o.n].2?\DQIetHVqRYC;]:DaZf3I+cq*]\UorXj1H$+r)/Z8+50ju>GZEY5?-MQ?g
%G`qsT]7%q:jlI3U$.mFjRUkMM)2W\gf)0DpK<O$Mm@JlAi]Q=M\Etk*QU\":8\!V\`El9*3)+EAmO,H$;<=)<HFuG-!.9`/qQjg=
%pjO1'(-g%02>E]:N>R%-m'#5uehaa]M1$A)B<dHlr7IU3=#54nM/VDllC_1nCV%!B'='!HleJ(b]AKO]kkA?kbj`DsqmS8FX4t>j
%>^2n(/Uj)O]W@=fe4.%sl2"M/SkuiLSu;VY/@H^o+5<!#gAp9J0:qA$lPT(4\Y&AW=-cf4i^,BS]&sUpa-.K(Wm6(h"F`dg[.?)=
%2_XeHJ?ALM6\'TR=VJHb*BK0/(Cu^bRAK3R@X:u3W[-I8KQ.D.CpcS79kO)a1*`<^\["Nk`/;4(iB+<BJEqYfVO"HtL"bl49]kTF
%]Ato_!(kG8W5$LpF!R36^#/qcpgd-KqP=MBo2,+>H;XPD-4ode6;DV_7Ei'sma%4KLp(iI*nsD<]1`5V0%@-R3M>BlD,)N"D8s7g
%W:N>(=W't>f&@;$g)\+9HU,>f$PIf?aANTCe>mL=,R1u41*N8cqPSI[^F9`snSc5\_=bAq1#U?GHL@qRRI^PV[B/B!33>Yd#uNe1
%&]2f@*-r0_:DaGJl]E-KSj>c_Be;/^s/k\hBZiO[("k:.%[c$"I&<D[b)5i>l;e?Gj;HYDPS4Tbb0,bY1"?#1f$MQ,OU1>K+mO16
%_a3:*Ymd650;U.D'/JKSfd>BPEk[b1W3Lp7n9YJfX(DYR\IcQ;6UB^]O9^r`&%^L$',n?%QD.S$NYH_6fO:I+,ElZ2DIj+^Ed[ej
%cX;05O0MA=qc0!saoW_;8UG@2Et]?"^X^SM+D_T^N8]+j=pO/@aG*=V%+Nki^HaY@'"79TZlEbn%\;Y]c_[e7+uhZ?Y+^4^A]nY0
%f9rt:JGiX8!mN:C2U&W5kI;Q!Lj`q"N+ktHS7'TS1M`9'js['^V]fAn9\^LPh8p8Mn*Q*+4&%tAOO9?;^"H!+4D]D9T"WX1`uoj6
%lLg:26Y+=*5Ffu;/`9d(1\lrqE7kLo=?p5Yo/I^<lr5e`9i:]bag(^m7/fCOE!uR7hnL??VfSt:h90S;3ho#>J6Z:goNDJ3bfNf=
%Ye244BreIuES8NQcnpjI@]L!g#^bQ,jh(;^)cT"+"@DZS#S7^-VkG<&)B0h-E>ZR@gY@]n]<26(d3:BV:skoCC+.Hm9P=JqW3@;P
%l3<uJE;mJ2=0_$F=?RE<0k<CgREuoNS3,FaNm>?R:Mn(2DR23!QDhsQeO.+pUl&Z$<YpU&Z/3-0!J`W1=X!.r]?Qe@HpV`QjPOQ*
%U7tO<N.SYIN?IR1r+--;#tcGlh+sjc=p&g+%+j=\B!IR_5UYlE$'57>q4QohV]PaHJ:$7f#29gd6nrNdFWJ%TL_,Z#k33A$_X<Rd
%Kj*#s<M9fH:"ld1/h@^-&jRVI$QC<?>q1uE>Kug'1g&rMkTpU-!mIB3f7Mp=%9(%D6phcRlEZPm=4cl,_FL`83RG#bIM4I3c%@+4
%rIo1t==Wu$PFNSX3HPpGZf(@.6!^Wh?6pJ:E#1rHM%U4V(gKl9AE9;HX5*cmZV2YQ4n+qJ6V5m.%W^&Ff[U2sL%IQ\bO^`Oj<'%K
%1LbZZ-QA/*,/`+&jPj!-PZM6mE'&kf#8a[(0SBX3%3_<$f(-D/V:;1rMa\F`569E=mY0kN"tXDmPTnJ]8YO@"&]5!8Mjb)=QtB!n
%*d];g$:89%&j.k0[@9_2U$-Ja7>Cnn,sk'1f@<oPPfi,28g*:?Rgq55AadMP.S,HX*E'2^VcF>o@3>kF/OHjFYU_u<2GnrXAjmn&
%h9-RE!E>ZP;F4]rAeI_2qECSWdJgt3RM8"Z@T^MF7Ucqi;B8em\HsNcbni8l,1(BL*E36CF44j><mu$j5_Ha.)h<4'feCkVdiDsG
%<p:'=(:Ym@7CJ(ka:0$sa/J+\#1<^J`i0V<,l2<c'KD^oBVF%Xa<h$O?aCXjS=)sn+e9tg$atiWs0Wq(K"CkZ'jM6Pn*C5oo*\5F
%F%`X'bYD(Ch:>\SL[36YIkj;:Z8=Wq&4=:U$*XfCG_*ap/s@`^\!IoucRuLr(Rf&p9TkX4P/bt7r,J&J5.qBd^@18mOe;%=j=qq#
%@cXqR8s&Lbdi#@;QICMoYT8ZgZ(U"b/Y[WjKfG=T^`RJ@++Y>@K0k9co^9d)5Fr0+@qIcJh.ZJ)a';6t'.C;I:b/DYJ)*H4n\I-#
%o2J<Kcqr_^_un,K%ZoAZ1'O8>J?2fiN&:q:dIhCc9V(G`%(nSP%B(Gr7NX-lqW/Agn@X"AX_0jl%.^M$:VXo1R=$aVJ&_3S_nq4k
%fp]-uL?Qs(.i7+nDgabr1S@gX"pEeTK(MlCc/)[.RfD=\@0<,g!F\?Uai:!j8dEg"XU4ZfSOS(T<0C>gT3S3mLtVmC;9A%/f(X[`
%Nl'Vd\'r:@>/ErE8$*X^:%11j3S:/s62497hWCbjAM6=3[nJu(\-9Pc)[Sf==ha+jJ,fB@Z*&gDa,`DKrmR-hpY.S+#WJ!*NY=C-
%+dV/*2N.Af9eJ4b9*p1-2!Dm_Jq2A;MBS]6Dd.I.'_eB5:0Lr!"0KHXD:085VpI7\KXA_K_E]0S:F&Kf[1m47Tk]MLM\&W>(`J91
%/_P`!LlhKVY;DX\I)dIXcB@B*0b$#&DO)@"aR;#Mcgo,CnnjFq"rl#sE5T9\!s0e6cm;Y*(\SqhCd"6,[O"CBAcR$u9Ce\`K+q"\
%39\n'"AVnu!)+qJ:,<,=P:@+.Z(*Jureqe(ejDBu`bZ9Q)cE8D>/>1jVm_/GB:\ac%'eK&$P:.o`n7kt(oH^lH2&mD4d\eR@.7s'
%78M(Ne^Ih?hhW,;()G9)nm^VRY9"1=q\W'.%VBUUhI"C8J1-2O[QE:*:CL[TD1maRf$:>Lq5jr]ItVTFp!UBf,;N<2d6*2B9Ol91
%iAK2##^,I+'Z]]&;'/eIYT+m4W:]FbJI;K":h.t0Ps'[l%V9])DfF<!F3KGs:jE_S>a019#!-0iFJr8,Ufib&@US2uS<b^6niWh?
%NN=npC;KL^aiI\<AI(^(7%*6'W3]BV8^q#D4YZ"%oc!=m-7]9M5f2RlJInUaD_,BI1'#Z$?T)^$hC5_16uW2=!^$I8=73goqBi`/
%6Kd=d(_YN8Xo@O<>Tm:h0XBu,P&A5bKKEV\qm*n;j'-&t3q?n`j'5QTQ*u4!W4/:>/g48f4\Iqj]e>gB%WXCu53/T@+=[qSZ"X,r
%Hnbguc<rrh;Rl(&1^"4=+HT,NGkdFnZctfi),Dt]d8d>fJ\>:<GO(=`97lgt+Um+s";_/odb6?K219RUEp`p[*`T"j#rPhK=7V+u
%N4jT`*ljggFCD1j^QAUVeG]<cj929AIC$/3m;D>Z&dfd_1'^aUO#d6M5(?Vm$>7B"VjFBmp.CFT`l@:16j\Z;[ru=0W"(o)%Lp-2
%S)lC0i/5C3H$n'8:QJ7^>a%_a&TjoTrf8(3r#1.I`8+H+XrR6dd+@JfRt*iKCh"<VAp\pRr_FU<>]0\r=[iZZeeW"]]6F<GLN*>`
%bbgT*6tA#rS*ks.[Ce(66h\R@X6+p.&-cg>UjA.\\[8;i!-_XDQ#0t]_>8h*87gnh7Pa`UnG3ggFTcC5#aX'2UA^]JL;"Nh,/*-1
%F$_r\f-&SsmV6o;:`S]e4uNhcimH6_ffV@"RfD?NiU>K#Hr?mE1Pq[jMO2f[h=?=I.>q5<MjJ63?]>!=#a[/t??FnPD-JPr%QL"c
%]fn:)N7^13;YsFq3!-FfW&TKRhjube8TC-i\[I'fHm8Mh.f\^Xk"E(^5B8c6\%4]oplF>t[KOn8&Eo6&)U7j0^g*Th"5FJNCoX;9
%>6[iB9B\XXH+aN`iE8OCnR"L-bIO$6A-gZOQg<F4"`W&)l)^aC*t=nQrReo)Cg=Ua%0HGG5B"IW6TKW%C*pQu#`jfi5Ti.VeATet
%CSj7r%JHUWQ+<[0Wrgili[DlSD8?-"qu)8ljU]&i]2oiue*f3N%7Rp"F4kmQmdk0EAME<VW#p&ba2(;+5#aVMUei/:-Q[($Mda3V
%'\Fjor%Ou^5!g!W5fpZ@e[APE[3$1afQ*9E-,Dl8i6rJh4EZ`<oK<6KVPW'=g*9I%RoSo*li\2YD3W"I".S%!B$.?Paq-@._K=b9
%]9P_5G_=3dD^"X0]XH(o0k0F##7JkKResKLpOh#j_#dA(]D[b3]lm/OSmjY;m80Eq7-7WLK.Iqi#q\'!=H[EpWG?t];iS?cnVMSh
%nj`EQ\VTQN=;k?ok"*M*&E1`0Ci.?/k/6oiZ8D@=5"1:efuZ4m_75fV-4uZ@VrRQbbP:f@^;eam^P0j%#QAK1OIb8n`88t<a_O9d
%7t86"Ndh7o1j[![C"IC:SAXqA-VJA?A[g@'`'F+736il6a54@#PLH%2ir&3!,Mm:_QZI5(G=Tt+_oK0)fq2lWj6.-@>46'DH?6(u
%*E(B$0?.jX;[&!&+<i/V&8MDb:):-&9X7jI;7K:]KXhfgrnC1j's6"UAth6bpQC\^Jc"l+/PIPhk#9#5$:I9!eJ&X;%H&0/:5"3Y
%B_Z)`g<h^<8.*--phaS2+27tAK=@1'p9U=KfJcrPgRRA>][5:A((c2[JjbS<3_=D(=bhOp7*gL@7,^iG$*gdOkZaoQl-:r0r-%MF
%$CIc%!-/UDakU^3&]D'G*^[,1Gs(:FTC;+aZ8@6V6j&]O338@2mGU)&e?pmWWk^#2:VR)+Re<a"2pJB`qs!DJ(Qtf*i?R>tM!KXe
%S*M,lX\.;2L-T2apcg"&l5:M5nP4hC@p*'VZ'/#Ep.Il[<WA"9R>8)>&TAmCp)J#PR+hj24DAK@&<,FI9d85A,S.7M,**[F3GGPR
%(%S&./n;p5E`IADpaom\oINA18G7?i@@o3q++KmglY/E"bi[nBF3d:96^/)nJmV*Z1EY]#@NrN[<bg+UoN;I=r^ENTgqZ+B%Nn0M
%!^`!lWrq=>EXKX:97k-P0If<'>AuS8HHG-&%%SMe<N%3=3?iQn*YKb=XDQAWgq8(AWqYR='n.$pS66Rb;"Xk.l=qGe198ViV)3ag
%BaZ.GQP^JdDO?Rr:(9T%Yd+LJ1.cDJ]16GBA-pMk8cYV(lV?HF%$jFF!iDW6!bodn0KiRH:7D;$.>Y;FipfqoJSJW_WW4ne6LD3Y
%'B-G&kWpf]:#=$&9PPaW/YO,MAcRNn8gJ\`%[N>HY`K,)odKfL1:0qmghd`T]aYHD;eNb$X/3,<%k]&+p+6OK34b.hT\.?H5fTj9
%Ek%'XSp$"Up!ZH2B"-jMA56\EQ9@Ne[H\l@#]gB[W[/Cq4\TZ'HVo&7fU_MR7Q6YtoZC\_e4*?KIYo=N\%sD'JobBegrMUWBgER9
%To&7Fn)8ii*Th)0AmV,+EG*d2B-9[E,dZO/LauZs:>Q"<,jpoV4+O$CG<9/lR>-^K/-FH#YRiu?c>jq#3;Z]IZ[^'G-U7#a4_2F]
%+Zsnb9qKQqL[\,#g1h>QiFmOr)LDi:%=b:"AZ,cEpI^5qQZZ`OW0"2j@t;3dSRhN!PPT&db_PJ3WM4n;9"67\[tK,;>mplTK?<O(
%-d;qJ[fT_r8!e-mW8W!TOnMf#`)@-Y0J`0\ek6^n]NYs\,rkT,Q6^'/%%X2\8f9d@$u9Cr7+ohV6LP"\395l*#K3!iAr.g99=a_(
%$dli=iTnPIcuub!k2G&j+U%R1_&GilG_BG%M].51qY9oRcZm?q9SDdjN:4L`hQU"\rs$cIg;Ej#K+9h"W#AEM#C<)lC_3@F)^!])
%Sa1fq?YQ6;#E;5uCmXLSK2C`LG-?N_O4Mu-lN`I<+\!@SBP5UKH)oQ_nE!$WdgPGlPfN0hn68Xn#eS>[G^f[Wn%KjF?A!P]"/k&;
%f#,V4BS*6cXgo8P-[X2oJSpY*ls/Q7Z-T12+Fnq-S-u/8nR*D65DBQaa6_'B_YXIAEpN)>kT801dJp(#M!#b6hm,2m4V,c=2e<7,
%86IL3EG)btiu*F\8>Y\&Q,l_c!#/o^Ar?]q8_FRrZ^b=1%\2[f3lr[EUE$7e7+5n\Dm0t,gQPVM<B(1JKl"Xrnue#oIWn7`PU7hd
%YZfS;`e(ZoQTQ\*M4XpJEnI<ho_j][eLo$3(P!o;4jg3i$e6X\Et^:Z^CkW<c0:b`1kqnc]V[EAda^\a7%@`bcDrSpBZdL19]Z&@
%_t\)<,=j'.H+d>YUIYK=Pf>oOY;3njQ#qY.:#\aNlpDVd+[fs_cT<Ep3?iUP\22L^XPH>b&'S>q*$M[+Wg-oaG7UO]4dP:t*6*5[
%`fk'/)c\Vh#!'B@cG*)*q2eY%$60Z["5PrZbY8(n\24UKH8'*.$mYhNVsZ.S#Gaaf6paLfVEI;r6<9*^lU?m/@.9a>?44O^TYWIg
%SO%te3n)VCMKm*ZXLY`eX-h-_gjm'9$"jX"^<OIQm9FN7)&V3JP%:=@%5?-<;%BE\5RX?kZmtI$iZhA!^$)b_#08PL7tK-#Va-@m
%:@BAfA',k;[A?2Gf+<Uql\E''>4&(N?Bp1/ER<;!(G1:FH#(,R90On**sCI%Q6:k*OrZng*Q#u`+,aW?#E]Q9Rn8%r0JjZI8aqWZ
%MDmPI;4'#b_#T^):G\s'Bm71V\W*+LX7l_$RpT$38Wf)P8,<!b&]5WB8(Y%8)IIX_iM.8k<ORp\P+TJWmB%255RY1^:KJGPEZP6J
%XSm%N%gI-H0bTEfaqf[5Rnr[3ak$ok=69e.3^Yeu4ji1F)&c.7k)jd;A*:P?mdK2a!;=\CAln93/:^lhR!c;?LY<$6&U7tV`ujDH
%8n>fnWs.[[mlU%GiAAmF7o,*4)f`/GL[E0]>$H7'F47eH*N')g@'&5ULE>oh0NE5IV%0-HG7t2^,JnIFg_c;cZlh8GH,L""T;_V+
%.!'GESD:Z3BNXQKG$$J3.Xis&%Aq%'"e(uOU00W>#9@1hi;IeJI3_=E)QPtpP5ueRW$/)Q])rY0Y*XJd)0`VW4Q,n@oR>U4@o<aE
%dgD&b)cr7MeIfom8/&Y3XF(;?B[LBOS`1iVZLkYHT6fj68]]Ra`^[5Nr8#SV=O"9@m:MkD/DMn9>E-"aWHus""Cm^D8C2nM-Y25#
%]"rtD/r`"=.t_r+U1m0L8:`FdQb3>f_>=nG2uKr$2Ae+qHQ]Gi7Za,STjQdU//@uRI!DMK,'4[E)r%U^2FLmV_V@e?_uMfTiUtK:
%CG.^(,b@fr*",E"k?2q7'%7s''tRZt^jkANIF2WXai)s"*n8t2d6ZohRd?Me#GUuQm_k;9)UCr.mpnd7?JC>QP,2(XrltrYeEr*h
%")1eH9Z;J;f`6,gG1r*M#-4>V6Iq=o:V+3*##=7G3F!6_Q"u"&=J``N`O0:Gg'eHEer@%A\MgB,9qKn(,FLh1NbS3?)7Q6(]PR$k
%:j7g8bWVen8W]D3#2&FV,VO%i?J]"3g"-H*5p^3g0Z-V][0bTC#Wk3M-t_DC<C1XMIke>@r2RZKQkaGt'Sa.3CD)f$PO[Z7P,B3A
%6o=<JFJE!A7nSAa,NlXD1@Y6G6L(TmqpM:2Gg9REDAI;#1LZ![Lp)P@e_*+QMV!Z9pd!+DesL4D/9<DIH4KC'bM>S)N*KHQk5UUF
%(D^?lL9,hejD#sin$I8oH^I&g%r:Q4O*tU/-;6J7$%*[e/fh*J[7'd*ZnmIRA=t;Ca-&Kt3H#7Z[sDUZ6gMd1Z%*P?lfL502574-
%]JHl2h=0N8XH9V$pe8X;)-LC89^TUYZ`ahp*TBeN"JC[uR>*a+XYPe&HFIAdhmj(@)/\Q=!;[]<-A6>$%EW.H*C)VS69Q9)$sX\p
%;o<Q`EFMepF..j"0ZAKnB1u)BK.TL!Gh$G2SIT`QTA-65*tAP+GiiSW7KL6o')(^>#6PGj=usGf/X%hg4lb2^!=!DO$mNnPhlNdV
%1KQSec&pV^]!7LfZmA@k!%hW".kIQg1&\E$^,RO?ah%=>)cqt#M=n$nf7q]<IN^L6R&".e31-fijLVU3"na,V<J3PLk!eL)?@lX,
%<=s>=o+_3Zn";Q)huKPa'!1d)P:l`GC@Ir^r"J%)`9;k*g\oM3P7^g#6=@tEQQE-i(>hIo,JjoL68AoL2t"%i&+ZPZp9sT%jGmoO
%Y@Nri7ma7cYnc?EkI6fVokfEj4$e$XQC9b3k7/JNZXi*.O_RtO+G?+>Ecn(adY6.8?c_2;$"JKd0jBiYPY95N0tt()[-9m]4$*fP
%C,B@W<Yb8,bE$"'!rAI]&aI4e4AIRM(D$?K)MlBpToZ*&M`>hH!Q?)TPU'YJ'soV-.%9H4YC^S\0a![NOfohm8gX?kQEcVrI/TDY
%F.u4Ie,V7IRi+slE%P@mDD=&GKL/gF4A55AeP+IDrcu<&9ku2A&t9O((mUr6Hj7+*gWMVPp&itm^WAuJR/4`E;C1$sKOgCr4k)FL
%(>q9JRIPtIIAJG*pq9Q9i'I*(?F]PmZ^4KXQelDg9oFosL9_0oKfOfH*n.,.#IC8<594cc6Z:Z7a_$B<D]8P.LB(D"$U2nLJFeeP
%:Hd'4@T7Q<2aI7RVhF9P>>3JnMhF>>q[&MC0>M$AR?2ZqTmk2HbM^Pj&$u,eW;_;5]k`\*\T&tkI0'A'r$VuH'(;1D_#SMYJC3A8
%iK\&\1):7mS6]q)DH=6n(E*)D_^@'In3-6^bdt3n1c5L(Su:H++bO;Z(lW]kmn^]qHV02kgk/jPQ_'0m4%58ld.BZbJm3]S:rC0#
%9baTS1K'kffT6q??j'74en%M'_4.G-_?qaiFSn%rU(i\gWQ$hK<>%2%+JL3[>7)it,4?Em/m/$T9Sq(n3g$Lj`u5&jXe!/<cqgrX
%0X.]In(\0CNhr7S,Jna"(kD%Un2`s6*?/Y@!+4(16dcooE=tNl3=5Nd%&M1J!V,YrQ2P0Q.^>OU;$"Z%Fq69ZZG$eF6uF`HXffp0
%H_L*Ac<f2-?rnh#?9+fb+E1C-?+duZD-9"A[0V6mnEa4RW\/Gr?%*\2/X4'lH1`Dt:9_rD+4Sm7!oX9SQVoJ&K#"]FU5mS9p)%@/
%7`hB!9^Mit0cb?*,7(8a*A"B@->aN$>SX8/P&d3424^qd-tgj7S-r(ZW*N3XmS"?YWU8R6`=DJgl-L+M=ObGK%VRGBVDtR5:jK%6
%gk;GH*o^(cTaas`SB\8?XsR"95nna*j6Juu'Y]6I@9skCA)Ou@P(f%OqtD3ge3leP>W=cLi(0$0="#aXG$>/N%F6bF&#aG^JO2/'
%6)EKA]9<V$3H@e8blMFC3=!T^"m*Aa_o]=qiC)A*IAY7AM4KIS4pU'k&Yo-LjK4(Gp,'*2C8$6TlnR^O_&bLWlf<GJA#cc]6SpES
%L'R5b<\]BfiM:">7S6%t65ce_#+f/+D[5.nUoFc1q/V\=1CX)=i7&Bt%MqjFN_$^<T8HsIR[dIi=V8<iOf/S-JM(KdLO$7'6%UU!
%X=Mk!1/FB@cP40B(OHNBLK9-#Nl#CR<Z8W1W<f$DH.:c.c:i36M24XhFpNtcKbuL)V5a4Rd5Wt4Gq-Vif+R'4OU1(h9%CpMRA$.7
%ZZ7akaI,4&=jgRsYmC*Jb_+]n=h3-?(Eq9S"hS6rNgCW78]&?J`?Fsg1sEMl&77p/^r1Y"][0SZPm;]VL>"8(V`fJa@KllSA#SX)
%&SNE7&>il*5%F,(20I6HYCr,4eL518.7f#5[-j<pQ8)6i?k4](2B]1VNI?7<98T[R!ph[bE0_aUQXlW^,mW:4d#X0>anQ'@K:*',
%7=""H[IWFL],pOL/,\S"&F@0WY-5oqp+H>#Cc!b/5WEFJ!63(p,lmKN1r)i$A:k#2.G#ProjiN1[rGTCaYT\Cb]DQ*\Lp&:V\2^c
%)Ms&9_*&\$"QlR']0s@o!dR]&)<g(;\5Fr..\5UmImJ.-4(h)fiLrp2+/'kffDpn9FTiO$h;'=;:=;^lNPjfg!8DVGZ-LWr3ZBZW
%,mHJ%IC^S,Kj$N?e'p=[D2b(<]9<a)N%.?9kfoQNq<=`=.;jdt5_8UMEP%l'U`p_N,-F&tfSN[nhTkY7*QfY^oQkX#(BGgGKE!Ca
%Q%<_fU=CYh+$E'krIDD:#I/r/n#?`1airAl/:4BS=9kEZ:h3?627ge6iii_O"E<niEL2GbW]!M9_O1h(SeK8EnGSQq$&)eA74qh[
%_98VS(VXh#We9>mMn3Q`nt`SOQkXem1>cdPPal55NLl>7QDhlTV8D@_+sa9[ng"<J;B0eP.:W\Cb(X+][YsFQZS"bR0KDGhqf-$_
%j%c.^AX:Vl^6.C"7bOnh,(dSpS8dgdQN!+gfb,)3l9FgQ#DHBZLD`4Ba0&@(&mb;VP.&0:cnk+i?)K1BZ!!KI6<Xib8?7'*B.>M_
%GOnM(/LnJ&\Vnrc'-j/:7njV[:]bR,+q$hFGpILJ99<hD`:S<(We<68al$g"PP:%d`<jb)pC:m?;=%."FG]o2'BdD&NWB-IT_[ik
%Z1A>X5U)3L\56E]\G??<*;EV>UFO=Z!2M)N!`lR2X6]?+!+1K,8r-]_\-3_1o+3QX)eQre3a*p8!FY.\6&LA@OMQq"*90?A,lnAA
%%hZ+!/r#?$-Uc2]eE9dNI);!LS>]]C2"O%fXn\ZYEX9po33#:t0&js52[jF/0N$mS$@$$(,,>p;h1P6tG\*'Q0fDq#Lr;sf"DonV
%7:Mok3u+/)SLn,0hQc7&CeVF$@TJ-U!_OmF#)1$dekcb!/sa]Vg:GpU?$NP5Acm^h7'$;fnAo\a0V"'N?l_3)2O+8_7[1Lg\EAW8
%ZpUFKbDl4&nqccYJZuoUm3EtnE,h[@s"\StQ_L2OUhcR&/#&3O(ffbD&>V-)J^Q:JioNL!-psM%[6`Rsqkm_piT>=i-Y62ELkKBe
%OH";kohYA6KlaQNC!Cu7S;m$k:`Z!nB#ZEC&ie;G@,USbO9t=A#I,#>RRQ[MDM'W<VP7A5mqmmKA@F$8`Joe.r&qT/FLiJmX<E[D
%NWc3l"Q[$M![[FGYbVHN&h%:+&._jm`DU.ZOLrY;p)gm=KTIqJGo!Y0:Mi6WG70<JiQ837E1mPob]PQLm&Do,d@,**WWk(D0N]QD
%c/ek#_[Y"8ACl@>Ng1mo(=N&imdS]Qm2m7o%ehuO<i#$=Z@"0W6k2CbSA<&Y2sjaO1O.@6Wi]*u<'@=-lJmY'i,QL2%HBUn!i<\H
%#+9*FOW!ZYC',*p%[g7O0_l95ko4t865@\&$\r\XB:"#cW#`Zs9?eCH>8ObiQ/"@Ipou;<Cd/HqJRC,cj)eoY-ISkL;PFC1Ur1bd
%>`;4He[H]qd=d:<kA_i]Ui`Br>n0J4PpeNXpc&?mAIK`ZqMRQc)j8O7"+tPE>_`'9$qSC;AT1eX#K!RLlW(K@]YRand9P<MdHcEP
%`>asgj=9LYkRE@<#UDm\`kU6gSq1/1.O;<%8m4XihKh\m"&t*s</-[*E4%&iCC/saQ6MFnO&O^FXY`2%&MkZhb:!f6$M<\T^V;M7
%B@$/[4j:=d.+4VYX4*?!V#ZtDXDp6aLV]_Y,EkeW(tu>^[1mK@oFjE0`SQRm)d@rlP640W\/GHQrW/]g7(Z'70rK,dQ3=sb0UNTN
%_s!G)>Z\QH2dV-PB?4)h6YDpnQZH..1+e:rgbub[;P2"C4S"S<$>%lse@bnW?Y/sR@QUG(E`^()H8&qqNp#n(5+3Fopjc^jIC!&f
%#b]:[0Q3cb%K]mJ:nO'Nh3QN0mG5P(Gh,MVUc/IFf<1f<.%abC)C6E<b^4q:Q5oRn(8i91W/AaC9=YT.$B]&<7R:usDJ#F,S\\QC
%O^U3M3QA<Sfc\*F5`L?XYeEO=a6CB'm7C)F$=S8N&7250#a/p[E<`1Sr='J0Sq7KIG,5NOm9V9I"(gBbm>ZLmS`4!B\'=(e,)CTt
%QU6")f?t"rKMMf*XDUuGVVMN^0HVoI;ohkUJT.aON-odr+#bj:6.WZ\?Y[,Im+X;mJF%kOER(ON))s>d5ekLY&l]oS4LkL]mq&p]
%q[b_D%O2WfJ%?1)B+I6Z)G$N5K`"hfgN-)R=l"g@W>8gFPGJ`!0LQ82Bl$0#lOe,CKK<t+d&)i$_BnP;QS#\MWPbakNd?AMaQ3Yn
%?4DU*jB\!RAanE?/;@Q!MU\%-":&%:nS"nF-+>$BV9'(B&rC';8usX[J.N55S]BFaBK=Sb\T&WSlg[&"3e,L'G>VL%,AO8.]mc`&
%#u/Y+e24650b[j:+HR1uJa;U&MV0DTJtacaL)ArBYXQg'6#\4kn)SDRi_aAVif)7qhrsSPX@:5[QoG]@UrP9/\-dR*raf]rerEjD
%\L0<_JAqDG=H(%C+W:LenM6jt/ngK@bu#dn[NCGmCqgie_?jKb@LO4uN"jjuFPP/5CnUt_5XNBlI"1!]9t3LGU-)5HiX29Z3(,)B
%nSY/F,9#M&i?.".fnf6iJiB\b/&OZ7M1($)3Z=J-YfBsO+]=`-,O$PT!PJ26.sb-r1:gL0f2BcTU%F*bh0%.YSJeL:Yn%BPMG#$]
%FN8\(J7PWq?DRu1I""rs'"U1mVhlV<h'-O2D:9D7T\ifP>Wgp=*g51FPQB4<VP9ab3_MGW>Y<'p.8k;<UVAT"WbC3&\fNi!Qk3na
%37RLk8HT"0/(+#R7Lfc?,HSKsq94t2e(?daYW8.!HOX20WNu#5:[7Q[aFn2SL4Tb#<_niB;Do,R!\iQ(F]`8[r\!FRr%2q>6<q'c
%KA\,+BQF<M8*73Gs#;mL,,\3F7o82g%Dr6W.,VtZDV1b`'*?Xj(gM4KX!>(W57F2FEqU+8T2sSkcMdY3rm"b14IaVgc'/_8<hqZj
%HgV333cn4DB1q#,#YHRg3.\8=C+tYE,bD(),j\,q22>08%hYYUp>ZdljAUpddT#'eAgmqs8#l*7kc];Vg>b1F:1MWp'r[4mF@=IH
%Y/%;2M;&#Ch/qX%QJh;Q7MDB3I*nVdTHlb;UKk)ZYqF<K\7bof2S79ZEKF&i!:g[\PTN8aBqj5X2&VLp[omUX-CpEp/D#,%,ua9,
%3&CN];ek==@-e*K.X914'X%V+2'q74Vl7/8e?[TU74\ORlQ`oHh@?OKCL]&UAj[b\1J*pr)bI6*P8Bn9U5):oV1^!1\,KQ1;^%I/
%CN9Ot?lI/KLkA_]C:d7&P@`9N$[F?M4TG*Mjp'YZ9;u4UQYW,^'<^gQVg^5@#,`k5=cVbR7uY43I7q:.ID)G6KGRpV?!]DI,pc?r
%m51oFddE,?R5n,W,Fj\<CN0L,LMJU+<@+R[L%:hWaVVN$iDCb*G!:YX=YM9#<db6pOi`kA[RHgE*A(OX<$SOM$.p'bC,@J30Ej[^
%j]sQeC$E^F0$bded#*,92)kV><T>abn0V=pTIE,nS=[t+^7[q-U>"(`W$4</8A_=RAtR16F]s+0C7F54iH'mi3;0#4[74fGS5u)b
%X"N;q&Xnt!)n-*VM)RCE`GL@A3&qR!JKn4'YfZE)[YdJ,idqZkC9_4,ZKF:cS%crSl:hZ8:XqdN=A$jr%!lAsU,gP)3WhU5O\BbE
%UWY\U\>F4a0eTWh^Z*K+Wab6_EjCQQWV1HbQ:$iSd46q,QODp"[4qOZa?OX4:CK<YlDI*#J9_`B.e]`KaaBDKEg!qF&Z"3G=B!7(
%lf@h@dP_YjK,C1_$!4)ZSmmoqga!XW(hO[l#DhckCSBo4g.X*K,F9EU)JW'W"+b55PD'i4Amsq/.,Z2$SQfV9M1/_WrOTmfArnt:
%[A[OEC>^pf_.RVVW0f7/]gVTn1fCMt.8V=ELHb8fj7]-`,D:[W))GP)B$5GFO:*hXpI34d<dNo&L39qd9h\<@ZS(R^J3l/9FZ%^D
%PVrAf7n]AU8!<(0;W?mL6oi@(;aJ-VL&#tn38_`go'eG1QXpCj;Y@N?<(CoA"BQ8(,n$#jp9c"iY5BHfL7MT+J5]PbA\lLs/1r+:
%CLJ"L,LCOX%`R0TA&>O\3*dY$iFb10_%"VT,,Sc]XaVJN(OFKdh1:SK7=NI8`C,$0A$k1ki(^)Y7OiU:cmnX;V0/nj.kBhq+lTL?
%;<LdR^<"5eC?SW+*eDL8?19hgUSR4K%p968'=1Dq/5!UR&Z%!@]j_\G;G(=FdK4Bbm@LfrR8;'0f\1HU7;JunDnBVt7f"phO8u+a
%oJ^)$brXH1A6X8JnVKL(D8n&bhFO_OXh:6eiMVf8P]ePHjP]Rqr,\O`AZ;$\'1ZuPg]V09VAPc/4=;r2>k\>F=:UfrgP?.u2aPT"
%0qL:.5dAK8r!Rr>VgFYIEj8OI8lebT/[CT%j0R7:7Hg;R*DlFOdi/Y8I(4P@)..3Z&\&URT.g%XmSD%4<R7H$>R=">1Ld2s8$.AA
%Sgq>=@jX+'i1K8oW:V0j;tNOSo0EG:YF^r?P?'"739u,<1/W1(<g"Co;AMWT?G*%bAeF_O0.F;j\E#(<Q7rUb-Z#F2:[?Y'3iNfh
%#HMY5b-BEm*`eeVDe(X;ARQ-DUCI[<qJ\,r<]1Gf$n_*OANm#$Ur'"8hN>*NJKmQ$'uX_NHH8o`.[ttP,'u2/r[K)B"Nh)r%8KS0
%`FZtsTC-+#D?.<`rm1WdD]>=K@%O8g"9_?3&:IeojT(WNl]FBi5uauR9>[NqA#?pHa\$pj6=0-39E5Kq,rY6HQ^^'a%5J/0bhEFO
%DfGgV#6'<?7c?#W@t^%Q,U8[&lSZrYE88)1i81M&N>*Wfrg]LGjG1OHq[V"20e'V5QBnKt>bW%5(b<@dp_iR`qh[QPS0AEU>+FG;
%T[$H+GTf9inLR0.3Jk10LWjl#,giNcaGe8H&"Uo\1`QC]J@EXFHD=h[QYHEW\b!"WN=/1SGBGeU6NlO6;`UEiIj?!JH*XRU+!@_?
%]T%g0Ja=M8:^bUQ_*JcBnH/`8`'%"&md.-.\XctT[VHP(fS;6P8&EAF['`aBUaMFEouAsa3l^P^Hk,6-M!M"kO"KmlanViKk&V0r
%5J2::nMRZAIK0g4'bBu'Z?NbSeQ;M&IK/](n,MnRlYh7KiN'/P[*_a%.d(#cZZ-i^lF6fi_fq/+rHR\)q1CnZpX?TYO+6rnImKEr
%ro$(hp\ijuO15.JqmQOP3t177rkp<;Z6<%&+.lI[],OIKhW/l!CNuI9o'c0?mX=9f^&QHomiR:.T?T&-\R2m(%#FMifk@G,*LkL!
%a3K*Jm40JAeUNNfn"5)GBu.J/,I\+'kf>t/EV:kUs%]t!_#1?:JC:r,[2p.Ug*ufNn>,,V'-A@e/pL6`9OtbdTG-B*]RdVp8<\35
%%/Q[;#K-HoPRZeb6`+K0]\c47nI'((Lg[d)2,[7!=Xo``T<k24N>c--%chY`FjT9kQ?^\cCooNU+ufYO6_4B>r9;KgEB6C`r"(32
%fY@r$4ZBV4q$)n<'%I.>5DEC@:97S%C%cor;-L"&[,B6-]b-d-;c*=3)n8q(JaMaT?lcWMYpCI'$5C.f+ld5647?B</Yfs&k;]5'
%&&%8@'oPV\8b't92m5JN41F_0c>BEgDq2b;<QG/KF\F<(6EE`]*+\b+#YZQe`=MN,MSK=H5>Ese&3N_req+4R6G>Qb*%kmRI==<<
%GiZcudf,\j-\G)odk_.L%KfRuN4oGG)2\4<7LEIQ]PlQND4pN\=uNmNjme/m_!TIIKMH(U=]pqfPj%69r5G9*@Sd!Jg6:P.6Eneb
%C]?2s-Z=8G1."[Q[mk1]Q'6]<+BjD,ERNM_8!@>,`<V4GSa#`!*l/F-88KjD!3eHXAA+Q=(<8K@28"Aid-E\e#h(X7*tCY8S/S7A
%TD?VUN>/C;[JcJDUgMpDKQS,m#C$a3r6c5'M1kn4-NS2seos4_^p28@c2I?;4:0kQ3:HAb?VZ2[r(6AfZT8&=;D)k_ac7_LE`bTN
%n</t8M+Dl!s(*8T+6H[]ZZ'qo%_jo?%\[*kDD^:Fk(nSFL[6@E4d_fbC0p77j=F$:i#*N)cUru*iEiMgR%K;Rd(;?9aSe;[BW-;O
%>1(dppBAhL=8*fj5j9#kCN(<5jbW5ac*&_XSB5tr.a6i_2/s5e-`nr&0\rJ#J>+=7DP67'`GN@K*"bW)Y%$_KHI5<TrDMi-kIuOp
%#Ms)3rbMX[W$s"jYmiPU_W#`ECq'u0rg_-OG"o4<1\j6#9fRF-I4(pZnM::h</K/5Bmu>YitjG5\4HFK6*0cPpg+Rgchme_(HG([
%0kb6j[<t!M?q[/:U%Ldo!6&I9egUdk%td^V+srJ;pGIpQ2HuAgk-%oaHH%Ni>fLbD_K3f\f9U5JjL]7W4/C#)<;?o?k/7MWVOWa8
%OSY!jN\B&YgRqQH51s:0`hcAnlB[#l8Lo6%>lB&N&ZYQUb5QGt1b6JZgX<>$*4,IK,ojN&W`^;h')lu:3YXlAp^A#*8DU0-N;3gq
%*:U2,F16=1iMN0,>'XF:YZpkbRTVe?bWK\lnK7>Z>pGuCUPN^6V%bnBS9g[<Ke<a"@d&Kh?f/^p'-F^HYq,,GKmP$Or2jX6fq/UY
%%WF2-D<2PIR^l_tpdGUun*];^&0FEoK`[!>8YEnp5V@N'#tu&I%dunV<7dKp$:5(8U`4<nGsST-qlp07X$e/S"d9[K&@KqJqo77.
%(7`X$*'@%kb2*B_g<O.,fRgH_$9GatY51ul.qYcch_&_'MBk)/1:["M;3^%ugP*m13s'?<[1&uNlLEV_Bq'fi<b*,nmh^c#qJc4Q
%@G5=5NH5=8^L(C.E&NULfRgG0b"Y\2WWu)+jl@o_Ym"dH#g&CtN=)tFLo2IMD-0&Q.T+q)VZKOYWP?8g^'?FTM!TC&=[Ieepqb8?
%J-Mgu#[[>H`=`m"m!Aot,@['Up3I7_6lWho7KmQo9j5%UTa]g__7Skk.uLZbBaCmm(8mc#.^c-mc6B8a\j+lSM`gZ8*46Hk>5Y%#
%OQsXt7d`q0dNseBj)10WpNXc!M1751U^d4+Sg9iio]*8iYId%/JH"$0j0oCAdKOsRN)[$f=]#'W-1CU5Y%GN._7=@qA5e5'2i,I:
%,5>M#d4??;LkYUlRq"5Q2+]/OIK*/:Z9Nd%J%oL!i!i5WPidj^'0\ZR$s348a/M7..ch"m"l(j.fV,:f?Hs)cl%t@&d*70TD.f<s
%`%OX9077QUiXmG6>`_Ep4%s=Q9L6`8e?RfdONE[niBP#RlriMWiouu]5dCW;K9TbES@!I9d/q5_"gG8VQrtc#`lY0\p/.uplZ(K(
%P-pr\'[q[9A;d#h%c=l%q;?f0]K^dK5Ud9Uc"=(m\b?,)$()1QFP*:%=Ub2KkjXe27mK7#lRU8-?/OZ2*!]9r>0S/s..X5!6Dd/#
%f=1a>NM_9SCLhI7a.jJ,8r7+dp5^/14/qVl2Bq+;=+-aA8i>rUD?[G\lTR/66->H0La2Dn)IULJ+t)kr[\=73]:''p*>GZ6@QKHa
%pQuFX@lp\raT:Y]dlc&s;4>+O6`XY8m-J"C;=7caraIi,@W"Y)`o+6=&=&DN5CAAALb6#<75`C&Y.=T[&[&f\qF`R#Xm[KEMq26,
%!@9J;^.JT3Aut942M8BPXc4cp/mpq;Ee<O0iimchqp<tJ^YTY1LXFMoO,8iN00'/lfZdZIQhqmNOdV@nc17,"iHe`:eh"+)879d/
%LCFBaS:4^&m;rT>E>L0rW]b&>*8o*W/We.\Q`q3Z7HXhBM%MHbUun_0CdAbp6an/4Xp!@a7@?O(b0Zgpngr.`Zqt:n8MRLb,Y]%^
%oN;WmL,rLSJk4]n"X!A62>Fb49SM"qhj^G\<)P!bp&W)BS;OZL)tGO"\crA.`7JcRJ9/-KGkfp,`XQ+JHD^lQ<>WFjKShU]@VVj!
%qs<QW[sfr#("ra\[2n_4L!`,m8p_?)*/b&5%*MThQ:jrs,Fe%u_NhA?]U('^H5H)%:?]$snnNgZ&Z&TkT)0;1kJ"cf%DZsJ)Ks`F
%bCXe4A*g`EABuB%+k&otq[f*<#Gm"gY!q\\VWGW`8:g2kaI0%!IXJHgZe>&n?7GR:D:"MEDD_Pt-B]oT4[=1tC*#s%"WeR[i1R]6
%HlLCr?SpNOGblW>+!V,bM]8'b=[l<qn4T_f(IQL?[h,\;5ml`_YX1Sa'@-Nahf^;p0WeBr55r4t./i8hQ99L%1'8mfNHfUV=s8Et
%7YeE97M"3=[,C0,mC)`iXIIZl,J=9@<Y't*=`_@cThUh\qf,r+[[Jf5UH3JtFf&n:oXD$1/Y8A!<X_-**l%XjI5nUfW=mc^%oBea
%k/3^?ak0C%abakJUei%G:5+/l(jo,-(N+5#KIc$6#M>r;)S>hRA%!\mc22B')^uKip[:4HF`Q>C7&V?&<;XuP)aEGkcWHn)7)(C.
%m?V-Ki1#nCg5i4(c_4?J6bQZ\Ko/LJY"=+qda4G6O_6%YUSW=#`L#>/i)'m8R`bg(mFC?iQNq&A[s2JbTkhO2@;e5`$-J`OG^>/!
%*e2Bg:!oD(gqYXZB'dIXf:_6(@mbOa`o_pCn%bhTff*>Te1P=Y^gQTod&OOSrJ@rAXL3XhIH$W]+2\@^;o,0+i,2l[[sAKbL6TB1
%>C9bsdC!+X4.AT\*i=3IAEVoe0B7:"@`i',#e1rJ9Q-qo$qLSQ&24^aRgt-9ed'>]4Z<Od.V'=u:@\T[<#f^*89NX'52a9G>Qeq=
%*pUdh/o>6uq0GatS'^ob'@sd+nj;#Af<i%8Q.L;^]"JF\a$V,s9GQq/$rlb:"&UaP*FK'V$NRHGi?1ZhJK,!TQ%T-kmoYMUZ>L.E
%2JG?E&:<Qq67b`VP=?-ZRRiZ'WPW\mf66l&i+>nV.6';C]!P:uJs(5!'L*T!FpmY;Q]$rDUZGU(&A'i%5%;=fiPe[up[Z"V6;T5'
%.Wg"_M6n&J),@<TRVYj#E6++fa'g87c2//7OVHPZ^hl+@NgeEJ\)tZ@6!`#\")[Bg(cF/$R7p;EY:"2K.mh)+!6HSpfLoMs!r\Ms
%TO\g3-]6h^$D17tbe?Jf9;rO\ecYj3(0#WjfWkGFnU)AN`5PHM!FVl7>ktn@`PFq8&_lEod(,#qIf,ll<HntQ]&P:q1^%N^A>ZmN
%Y"J:ka@\0S>5ajk&Z`'YR8'^F,tr%m%ORVipWg0KDS]gB8]l+i:.^-S1rp+H415cX#?f8>8q^EqcH1f>U3Vr8+YNb^@8F2$kZUbE
%I,oM"!_Q#GpB_m!X5o*G&LX^sY41NQ]/!gLa:3AOno::I_-^<tb@/"I`2/eNgO00nIbI8/^n7S&<^NL"JVp5t'gKi*UkNaSgqm,S
%T54kC0c4>;A$C3`@l*N-_Ohjdm<<[h60Q<UEpt7$F58gD]e(t[dmF$qeo+:hE6'hrar$Q&7eGb6g$4A+QNmj.ek*'EK8%JLO0pcs
%=XAbbK0q@c$^#1e(?i(M+IjjEWfCQ_FBNa*HE5S'E=t2s*D@FOWTZpU%6]XPMu+d/ih8SU!m#F8>aV'W2#KLjNslTf562??5fnL'
%,'YT5rDsS[N?4^A`]=WZs4u_q2h1\__a<7ONOb;YY9RqonEp&%5CW4dGMdjd6b!5CJAuHslt[R)gHa9n_tr`;4`haK3q*]Grkuj,
%I'0+Ao],9+J$_B3-@1)hpk%/kq5qrh98C99:k-%^k4_E(L?k)iaA\<jQ$lkmTs.aKJB1I8Dj_!DN:U08nuutX&Dh^!)_U)*[YRak
%(IZ/[bnlF>"4`0@0BoUc7<ZXk")p&AhRMKT/Fp($:9a8UhR&BBNn?[(&'RSg/WdT/=odMeU)40g$@I>EW#=Hjf`H&&0D]&lH[p'g
%aF%7IL=,-O:K>,."4RHZE8X@sPo1TBq8a3n\e#f,#re\L7!FK.SeRVU"1_0S9HqJG2.\i-`'Pal[kP3s0$)j7ZSFOK'*lo.pAe9_
%W!\p&A!";S<2rd1i[oZgOSoVF^!ga!r_r@V_dPq*fF(#M\.!sp+4lFm\eaf('J.,4'F[[Jf!7KR.ST03etAY0YG@nHb6Q\$%9ZND
%S8Qus`'mp1jCr5o434oCY>&GK/,l*EA;W'a@AsHSNO_fS8<>R+2^Of$q;jjBdO8W;7@;#Z-ta5tAs\p@WCi;Mk^l"94$6j_`sRq;
%(C%q-kbTm;m5M0JKPAl2<g;/T@,hfD\9I^V&>7X/k*7ckg2240ieV"Vfk#?01\D,gO(#fRUc(+GJoWn1@[Nq@,IGXUJnrR:PI1f0
%2IZ9ijj>j8T7MBFn_gqg;GY:e]=d='-:D<"AM?q_$F<8/bqKJhe+s_:N*.3'/*U2d6pLS;bMNi4qV0ojIi1c0jn3!;I/iM>$h3n/
%rp?1n$,Z8ps5>fNE(AO6N;qr+1;M)Jrn[VFX+t[3I6TRg2\.mY0AkX1Ac(M;]DS;9s537Y]$in>(]KVlpj`0fn,?nrc1q$=mCU!f
%id^ps5Ah)ZNS3QEgilS<#))m%>;0&SeLIR&JYGP/r(]^;>5Sd-J,fE@YQ&NKs)I5Xh1*'6^],C"p\!F'1ZApT<lV]Rhf"_U>DkhC
%js'L.^R?VN89fY@WEVJEA.OP*$2;jXC4m&7l,cTG_XMqR\G9sAKd%h[h:;`5*tDRWr/pK%.#kGg'$0mfI[U"Q(,T=O?lau=FUn1?
%C??uQahCD?C&k5RjjIQYoj<*38T7c+A]Fn//ep>4gqmniJ!G]2>NpaKE\T_IcpPdb-l;LLhu<HEj#:>[F"6=YIs73:q6H-qgXi&M
%"7r(<(uFS^r-SC-HdBf\hnOM`0@)F.?T+&C2+Z_5OEcU#6G,`oP'8npRU:<bV4Ll@iHgODW=cjFIL#*5%aYmeKB-ra+_FT+8=X.#
%(!1GFaq105,CVZ2#`G-Dca7a$2sku.b)iX'Io1r-Pi:f)%*Qgn+l,dtW!_jm>khZl-9SR/]MVJPW&XuL*q7>RV[B8lrP>q5>I\D1
%ZVY_aP!qC"05Bp5RemND*!PcA>P'X?AX?c,m.)`3NaJ*XHU"j_];<OTl`m3K<;]?1HE6eqoD!(`Zd=Ks0RhE)?hE;iWXiH)4bOCF
%Qf!>b/Q;3VV?p0-aiSV[co?`Ol]TSj'maf=6i/VFrKZYW'pqcsR`4*[lMRuuC$.9KJT-'f0aYUn^s?$bL0L8lF^Y%bdX_Y_2$tm,
%&K):=eHr/\Llh%,)^3E:i*HR';>h'rMZm6bU)QZZ>em(!R5UfZo7j;k.+u-E%uA#DqJh\"Y77:c1'_P4SCjfBb6Dmg4S68a\U\=)
%q751f$/Y,\R5jMFe7IVJd+QLM[o3k2p2_2*=.]pca)X3"3cO\3913E5[a4lC_UV%XIa(7L@Jtee@p6AMG(*IR[rBgA9?EA]E/hgs
%p5nVZ93:oMJGX6)*1t2E43rR%IaF1(]3Z%*U_Z]AMT+7::qSuMRs%!WO?s5NR_VPIC4Zo(/(:qJ$SO`j/EIhnNLr,3Q(,bkq1?89
%^LTkSdJeLKk2X+F-Z?YeGl9kdQNQ[B@uY3c(@FCCmq2=(c$t#Wq-qKqQDX"#+6;rT41rIX[elnjZL1'pU'lC(k+F-5(M4gY54t;Q
%2GcaN(.CD%$#<%2*tMDUi)"EGdleG@E2r8h@)75K&tkgHb>DhoZrmqYR$=6hoYA"GY4PdEF$?dJQir2[;U45jN><f2]7qkLcAtCN
%l7g_t!skK8=U,M")]B9%gKbL%p\'-QHgg+S7u8`a:hK8IfhXcm*K.!1a9=(7>f=0'gBa(X,qC"%D5mAK+oY[kA(KL[U%gUKnMX#r
%9aQ+q,NSe%1"SB:dVR&3bsa*[Y=7\QI#r*g84Lch_h1;J*>,b%4\nu4:BuV*G/q-47L$RQ-K!]E`Aua5WP[9pS/?0W^k4bZo!JM)
%7E$>N1++h)TMmQmKU3mRVt\;O1uo_>g48\)XJ=#L+g(o9)<\NOALr)Y1AN=dMNS?@"^jM8K+U#\g8*#18D\6;#dP<4K>DEkRb]s4
%E8=@:fJHBgS+Oe\:D2cE5]pLqKZ&I=*2N36M:-3i+N0gLq5H,#Z;<,2V?]%1_L1CGS=qWi=DduTX-SIm@dIL@P`JS(=/?0)&2K$G
%jq*7gq$pO>"tE%f.2ai2P+`NL=>O?a%Dn#hAVSS\@e^t-2c'\,W7P7L>OqoI3JkrF,N0d2iumJrhk*[ioXn=S,&6>-`e4_hW*M]C
%n9gJ-UL8'g&"96L5a=2a^o=c3X;rM:Sa\81X;raJfW;0Jb(a>*O0V5o5%T%X_KO#D(@%SBD!r`;_^=`$(G84l$Tk#?&uUFf@@t[*
%.J*7CZ0&`<`%a8@U?Cm([RE!:[<n>+o5]MXbtGdf1FR:+L#T(4]@Umc.0.G':QCjC._7%>4H*QCldWiVFIAMqENFJSW<aQ.%0V0&
%CH>B]gg"lH?iDDTI)5B'2^pfKq?tnPoB+WbN=JW\MAr(P'J5=`^a-n(*QB;+9LDZZMMSL>EUo<m'HOK#R"T'&G8;A\;=$X9j[=n?
%*$(D5*(SdDB/hnSa)SXE^7T%@^\_9oU_AAjRu<C,fj&?tR1"r!\\K<4'eOJ=@[nt&bXDN8M6:N_%%JA[7I+Jdcq]<c&dD;4DNf&u
%^mD-9mlWA$gebcif3";I"@9(9c<#%+YS:Al,qOs.Z_e97kFd'6_M;^mEL9`M?\_"'ld(\Na:aHQQV,CVkHYX\@5#Y\af/*%DbS!)
%MU*/@;;T-_R/H/(+3YMH7U"CGq<5]4.<-O_Jkq&2nL6"cNZ<`V[Y?SHO\RtDM_aUZ_QogLeqP,PSIFSS$Z"t31LUlC+tSXJ@C_c.
%KS9faRBUY.3XQ7,aH`t\BSEkQ7T_#?H-sJ!*g]^UJnGH"nC[k!pf_')[.CN;H9C)E6t^PmNNSl>7K[P?dGf>#>n?!paikp#rFDH"
%5$MY(?gA-E(rpb'19e)Zl14ME>d6q6;]9W0PSUaom!9eHfE[r%Q&h4Op"0!#J8`0YoK<,l#Q2OGr5Ap=$hFCC?XE.&Njj?(bAdQ4
%^h_R39c3c<-<rNDr!`"b_`p4W(ukRS.8Bf"-N)WFKQt(QOY.(2OOWoc0RriK=,"O1CH6?Q/(>)N8>W"&)\cff-V^0RG(6X[aH4]F
%0DQBEcC(?We]ocEZdXIJmed^QqF(X<Xu_YljtBDQWjTNF&XHY#"2?C^nDla[XjHtc="$9qk"#>i^jRtAc*VO"2sku.g<P2iB)87h
%5$r.C?Zu7I7*thZbO=>-@OF^qB%Bg?=+qgR:kdT&]_!amgA*:!TaP4,i>5MhfrDoUC;P17"5]bFqLrY#G=q6"J@k:DiaLTPKn!ua
%h_-W+?W>t`"=inZldGZME]OdF*cml<XPd/-[Fjc[F1+&^PXd1*<`*$\9#.=eTQ"l2$FR2B"*3>h.`?<>"#@_H9E6$QRN:\$8Wg.Y
%MIqi>0Ap-uVtj;!"[ogU.&A7h`cHKj(*ohANW2BjK=9.>Zk-PD'ZXZ:E-Wg]M#1_El^(H`_5%ZbkuGhoK<l1-s"4peQSgf_]S]--
%&NNZG(WSl\-\.+`i]/B7oa_=BB94RI&NN,,#RP<E_lQcMmU;mr\3b$,<;dWln!kHGK,.RM;(%",oF]P1CUS2P6drjLk!0mpcK$Hd
%E\l@[,D#6IQVs?K$PC:MJ-JsWO@itl%+.Y+DRc73<'ijcgK7&]++KKM*F`'`85rL\;B-&J"MpJl*I,gT<<-foJfRW&k5?Z&!K:aj
%"'=N`TTN!4!Z8^:/QiIs_3"$$==U"ZoW.;B+>IK+H&_9O7>TA@(9:*e;a1Cf)iHar:cSmT:f0r>+e5A',k39%9Z?B&e!OrQlNGZ>
%ULm#XfXV.K=N\%qko46.j$KQdAcV^AILo3:'<N5iK+P^a=W4&lZ"\J$TahM8,GC!mQSNtt/OWRNF=l_Qb`0Jq_.6lZW[j>CUY+R/
%4qNQ1)I/dd^feE*TemMGG\\WaC.)HO)i/6sA%j6qcJWA%6Amu`8">0uGYod(K$,tDa_<:dprIM6Ggsa.DtQl@q2:@;U3A:7oAb;.
%Y]otb^lb3_9-@_O33=sl19EiA@nS@_d`56C#nf\?&]#FW;?hrM-.uh7i_R&"Vqu^GUJepp2LE^^'o-hsh80lq3-;;-rB!NK3g_9I
%AcR6HlL\EF0/B(TM).4rpgY8'V6,<[6h/`a=5?kdWKj48%t,4h!'=p`6X:r:,HW0/is<JAVF7-rj1UaB.U4:/lg*JjPMg%YGLGi6
%fP?Ji66k6^#*%\J[AE-/W71kURaq@U5mpjuSPGmj<u<\orNc_FEaHb*U7pT<TL7dIlYS^#(%3-7^CF*BAHMM2-&cUXDb"l!RZ\CD
%cZ+KL[-bZ,*_;AN9#!A0#p2[h&7@G?K^T2'j;g8J%4(?eXqYJb'229)HJE%7<"6e_CY`(Gaf>9W)aQg@K?X;<6C2eG%DNnQBG0NG
%41F_QZR"+W5kVnBOrQe>&qX5Zp7fN?Ajm4TnhO$:&D"@YM!0<IieR`LRHHrF%!6V-aTP$%j5.B*%Fn"\I,Bf:18,\@Ci'k7/<i$t
%:m-Wra+T=o%!$>%J7CN<aUb%=1QQ`.I0@dG<+j&V@T+_jTGOL`@^B#fU0+05Bp#>m6)=<*C4QkrnQl9J<&'h&J>B\)J"QQo-AR6U
%B-1a.8l4!\=3c,*W%LYL7!UrAa%i:$^7aX2oo+P[c@X-FLdA?(P>o=))-N3Z]*KR,^MlC2#@+3"2doTm(s+D%7KP8BH4#3\ZE9#e
%4;UbmUL'^c73GqG=3M\>a8"i7j5Z<^3"T;q@:^OFY-KU\9#>(T6*%SWPCi?A7f/%#3`l*9HBd*=W&pY$B\elDNW,29LW+SFZ9PUC
%E#=DG4)?4gl"O?l.']_h[L^8EWdW?<bX'D030_,L;I17f=t6["0]FUdl\m=cFBO4;R,YQ+W!2*J<lC(mU`<oqI.'>+#gPcRMV&oQ
%o"&/:L+P11J_I%3`PkEf,rathB\$7J]IRO4b-C-^U1Si+AdrkG$CpD_>dd)H"tC/O,en]o0<@1ICaGUh;UZF$(Nqeb*dG4tGqLn+
%>GIZ+@O_J392d.QRKFZ^D/D=g^m#QZKlet6ibmo?ALV&H]:g\rX7#IVdrJ#\4'n_J/p6t\PG4#!6ahggp9[Z#Ofm<cV`s0$BH4]&
%$d]l69L,oB4P*R@N)+hO71J70'%97H["3@>1)W2.&&#?/?2ZUOHoB#XCsV(IQmRj"pM#$Ko*X)86$Wc,e/J=S$pV.^*fNoHO-)(s
%pgqL@1H*=al9'i?mC7QB]*DT8d&q=!F"pl8ngUt;I;c]Ont[S#+CCJi's9b"8IhVW(pU071Z7WSr='W.Bn-)ZO)o-%4NWAa+ZG!?
%:6`]8#n44^>RPQQ=]l1QN%\'/LK,<_h'%9->T48diW:L-c=IE'R,RuD)NHb7Hb0M7*d&Au</@G,qCk"D7]52CHBm@VMZiGrl.TqV
%<P>PaD?H)j7Y?c,,V=)OiK+7L,O"<Z88cWpDC3l@mO)+9pZI5L[OK5^EMBb-77V<hC.fW28m=Z_Ft"s^)p%?if.Am9Uuc0[YAdic
%:TrNfr(Q0kY-,$2H[@7($GRR#X,1XS\+$$Qp&l;!Hr-+c,XXf).FEk<Wb]"`$b,N95Tru^q%tRj$Tp#78Zo"fE209k-$<]?Zd`--
%`KjWCAZ@efp`L%NdNYV>/pFN'Nmk/IIfK#u@iV(F:2Ki0iBm4UAQYr"R/WI>ADS,ecE;0aZGKHNrG3*9T*=o^W<%X<bXpl."8h8Z
%ZKhJ]J%kg)GCOr14XJJ4rT:"rnULP]Ik_IF^]"#@Ispo!hu3?4[m(A`?[qqBn1_f8fo0q'3$$j@c>%n4elt+1$"N+QM;sILD!&B_
%$*NMF/fKWYF48N2DRDNi<blg)>oca8Y@4$'+I[6Eeen*M/SKK=nC:gnll+Na%%aO.r8Fr:.Q_S(aeLWV%,O-pp\%C-hn8gems91r
%^\dloEUQr)\s!2Kn!!K&%Y9ea(RY,dUlASJM\bIpPeY'W%leqUcHH0h's\0E&7V;@Co?s&J.H,ENh/(c5>i$4jpH4@>)h0Pc_!9<
%bJT;o5,4H/cKf3::>LZ/f2Xp0:,hDD>mt7cp%I"Hn<Y+N<[Ef"CS7r.TanaPQ!AGK3JXk52O+\o$V/YL2<WmNI=&mo\Br=!"^3V5
%egLc0`/uhSZjN0tF-W7f&W<uq2+/KiC*>=";M965DVuPR]:'Gc[5^_2ZB+p)/^n8lJn0g4is'*,9,?SWLK_CP_q71ccPU(J<Q;W=
%$`r>*_j)bf`[Q6rZGt!kSN!8mF]X&jN@n=p#=4@Z^OL'q42_hC3Ij.*mnhI'4m&?g]ZAb,Q?p1coA%7*Om&Vp%[.[9BlP2Sm>tH`
%j!%G9S\#)b'HJ;KH@piHaO>4NOC`N]J=roYPhM_&b/rn0XRB`jJ/jP$]s*dd5`VMZUNMm\-UoAs5LXO.XTSt4gsCnM`IRGJV:aFH
%0Xq@e;9!IAf]*t+"QN)gBq:e#kPgn&pnYAY53F30Cn/FdXL5OsI7TB'6PCjC<N\6N4P=85_'"U@M_;!LF)7"AW`UoZM]"/tbu"Qs
%EuI2D=cdJEIGJ):7q$'$O*Wd)q+1f"fp1EkpooboA?u^AX<0WDn55(B2k)[tm=W@ca9Thm6ePJB;9hNZQ(9;9dLuZ)+c78t<,qPX
%c8*SKl5J9G[aMj\$@BrOUPs<Fo49COGp&\<5PV5I&;_"s%W8$u38Ofo4hcJ;LtN\Vc_fan#bQq<c3^2b\0=mTm.cq_qmb?Ri?92Y
%LE51H@.;]TOPJq/pS"/!J`YsqjFha5Tp4HWF2Y<!]n)T'-mZ?YnftocfQ7gS@):mQi-OFla^LhfE#!7TYMb&s`Pd<Ik2VE@Eq1':
%Adu7m_;MB+VV*u2CC/d"87Mco3D0IK-KM8mg;-VKYS5*UdY@-%=tkd*q#$RT_G,F.3QC\f'efI\2#ASTfq\d1kq%4)e[2p-F>Ein
%/!3VMqf2Dp\]V:b!645dXj,ZQY+F[hQGLM]r@Dkb*X&g'#\GZE!n^?k&.B'K"T#eh$\h5.(Mk0-]Kc$kEV<:sU&F4F[2OU?=X(9)
%cWSWgD8UK=[b3\%1V%@?.,4L5I:9[<]JTnOe**]#3WagAi$L[HNthhFC29.!?"mJ9*u$i[:N;\-*']Y9ejuGF)A.i*g]gsX)12q4
%2EQ],c!aarHR?5"h.m,Yqd&0u.bf_e%-!*]!q'2X<Sed96tLT_+g0"@)o0jD%O6\ZR3#HFj,d,+.8hGUq@qJ2$W.S,2@ZT*i!'r,
%]!^ON7Tiq9G#FVcajgIs3DabhG("2H[@05j_Ga3bo5O`e4[+>dV]S)RfRJfGQ3OO&OLL&2q:.]YoB(8SIViTI`s'+:f1s)hZ-U)l
%S'gmI:VY[`#(!D>`I7X<5<d]FJ,8^.pHRB'>5F9Ti<t83kI4&jq9n5?iT-W$i;DDep_k2$@^56bUU\4B5gbL5m3>fB0fUdTn/[Ko
%ddTpt$Qh=R^nFMVk?a$ngfpT$@o/ZDdl2i3:8e2R)e$#pD5fEg#Ofk8EVDiG`;JB+eB.1+"rphs"E=Q^q"SEe,SXOR73H7sD=<+/
%X;E?n/KR)F"DUmIc\?Z)iV+sEZgh&[=k)kQT`f'i,A87),^2E6n$]2l:fU.\jE*'tGD*NHH;L";AC[Dp=LcaGX4^4\*LF[]cg](:
%IWk@E,W\nEoT$&!&o-',$>50TY2LB5_QB(D,lZPoO,OHB&a,l`'t5+?,sn,_m=Bj?](@Ia=bQW+?EhH6gp^<9BY.[BeR-el)VKr]
%2Ts/=qq,Z5Qaa9=>4(/*!t8u+KjWq"E"eGS;5Kl@"&6+X42'pSK"BKQQPDYJ7VJWUA2\3hgBWA7%\%(^cq`ZkXC_E_V@31k$i-5L
%bJh8<(R"BAA+HKSK$_A2K%\o<quA<_h*)j+#;>COCX[mdE3]2nfs]GAZY^5SiF7/G5$l-qXe&)AMqN-gCh^SfYeQPWT>k]@B]&+(
%d;/iCG4(Sn@[B8R\nPQVh1E+D3Q%uP!dLgBBoJ/,JmeJs:BAWO!JiksUY.u]_F%u'+8b]QM8#ToMZp69ZJfQ,fOh$-@f'QX(5sGV
%N9pDnGDT\7AddCt.?cu-1L$M>3kt)9ZNY?tTub8hM:ef3Ad_(*HeE6U.$;:uG",mYd$cO%?Y[Y=CM*?f3W':t$ZrCYHe;LR,h#@E
%n9)8<L5HWrD.\;%2k.YAbJ5gV:/f)Q_3uqVTsD@erECJuE-Z6LK!l%&TDc1BcB4Yg@IljhJ$qfS/^[BRS5NYT\CCefi$K_-X*%j?
%ST]hRK!e`X>Hk#ep2?'0U%4SQ>0mVui3U2,ff?>O.D3:7Em7PecYJC`K8),]?>a\XO0)1NSAH9'8D0I,\miHHb9*O1*)1fe417qJ
%=T.R:T79T7:u5o2c++BP6hVe6qHFQ>`&phcemiNl$sG'_C5FEiIPktNN&!pI(aN<BNZr-B1oM!m@dfC.^gJ-\<2::+k*e(>S1c:I
%Jem^nrY9m1CDQ26?>I%]5mmXb85O><lS&UsLBQ<hZlsFKkF3TpL8Zhmp1$LJL-1q7`:].,5@+Is+5g(3FMr0SnIC5(=-ANUL?;@'
%V2-CV*'=<$*JO9UO"!#iot=M@W\P[mh?QlmpX]$J,<[c8I:Qj"e_&lH(f5H(Q@1cd<'mRtm]@g\1AXu]`]!HM'=5;q&$9E8?t;,Q
%cb!SK!`d]i@K.0?%DDPMfhdgc;m6$O^?GC>h%2E\bmY$.10qJ!V1@pf0'e"94=l2Pgd/B/as^OK8=/u2BDO^@\\.41Ohln$CWf4&
%\5%B%*'QiTNr5D*9:%YNfB5>BWR*Is].n-:FdO!J9%i=aL)+g"j0Qi.2u6]mffqq+VN8?6ajVblZs=LU'*bE-2l.WlKbh>hM1R<O
%;6o"<>n&MJnTSD;G^At"aA32c9;EsEWMoSG.*4L:&I:p*pG:/9`!7`rJDJB,VSP"PnVib.C+eb-.+NPdS7%#&lS97oZl_YVb1`?0
%%\4ig!8I[uRN,LAFI0/mNRD?JJiS/l_n'.u$L/fCr,0/2VMJm!V.ubRl\#8&j6tGPYHeqNZ]nC[A>=gaNFHFK;I,G8DEc'@$Z;:3
%p8"L%mX;k`ir&?"?)52S<id1)d2&2[TPoGRqo?cpj^kK01.O[AqK_9d=eE%$M(UU].bGH4PlUBC]<%e#EJ(AT(RIM3&_3E3jK6*'
%"a(%FA+\>r;>S8.I8o@]fL17BVsmi)5,P3WPsLlsO7j(Akf^7oV@`5>,AV@[b9!6U#T].H4mjDerX#Kd)Bg60RHZ'l5'/8j(9J,L
%`VAMBC97qRKg8ZEB6fu-rCg-pXl<^<#VeIb6\tP8<d2U1i@TFa$C`JUU_'KI:^r2@LU#$OI+.FAi`\!6-/nk!+Rb^ee0V\i?/[3?
%*2="\3A'n\FII+GP_9g*io&NIZ!nC\Q'+@YR6%fUENE98;"]oBfh;*Af?p!"NIhaigJ'4;Sa>3E4eA%0pG_KoQP<WFLf;*SEZF!C
%=CHh@'!VW\(j&iOVL)=<]/-dJY_qCQi1#>6'LYT?JM6Hn;t?f7>-Y\<g;.e$<1S(U_99"gr-3a)'3#j/:\=He-bXs!K"^%DhPh>8
%ZESUT^qs7EUMgZ&-)_=LdL`YT*Q<ol`5,d,@[icDa7c.<ebJn5;?[2&Os[<kZKf:)^j0i.Q`3;W-laLX3T+krba`Cr:*Ve'It_\8
%cY&NUInf^,.0I96%Y>^HH^HJL$=Ag47%M#V'g>j4L!O?p#7A*Pl5HV40,/Y<..BDf$G:u6gWR[q>9`3`qB?tCO*jT"*<2kAiOs;!
%)NuL%`CKU=TIad]TVY1tQ$$@,_-TC,d)!^KX*'d4+?JQJ_9PIdY,(DI]\A[*mSG3o2**iuSap..Q_fe757Y&/Q?IPCFrA]^e1r'H
%+rLOi9D3H^/%pS(!V]=@Q\BfCpbG>_#!*XD;el&.3(DA!!?YFkojdk*WU?u@=+3KT2a:_?PWlWgNLpc]\@nbNTo5NScS>fc(=l8P
%6n-FM2SOc55G@mtq$C]?ek\hb.!j-?I_scHlR/2iZWA.NO+'Fena[>kZh,k\r.J8rN1Z1mbfj)1:H4,A076e1ek`e>2L`NnXRQsA
%I5$,ee`#U;>U)&VhG"Eu:UiSHI_sY#ne5n(0Rgmh?/m;;"#Dn99a\m9\3;g"_UYaX'5i5#I_sW@j!S(61[^;u$H>lO4uRl,eZA9S
%DI"rF_UW#R-_)Ef:*;%klR+M200eE3f(o]P%lmqk$"o$qT5Y:b]#(NgXIjH[D#Aseg#XU:\mYGhi"PZ-ms[U-!TnFl'+Q_hFR:GD
%k1M"o=`-P[20(ETj!FmhOf,Lm`_?`5bo)'nh1Wk[_aSWf'4uG8)eW\kgk=hMjX+6W)E/i4?q0W:2dsQiUl[h$-j7fMeJ_<SkU;rC
%>=[Xgf")3*+0;M^G1aA5kKpZN@cUp&L$N7/.U:4:=5h^8j!n:S2U9/s1nufa3>cDfqKP".=0'>H\925j$WhP3]5S5'l:ic4j"</1
%06\Qs)rp?=gq$nKL","!n/&6YRH%e@K(0YGO-dV#M8=EF[ltXiiKAi`(p9RcA(8Z;GRW3E`acO>?p'0J+,n6Zb/(XtkKp:j@HCm&
%L?i@010i'BT:tY)obl$b>G'jog1FA'3EVoIq0;]D=0onZ8:?;P*)1j9:hG7l1RHE!C9JX_L<.2b9TLenn5["=Y$?]X^L.K,>_Z))
%J\jg6bKq;Jen)A86fTq,L?+3Aq9CV1Nt<t&:``ABDQ$;>mi!QO`%1bkj+sW]8)e)uk8%siq6UjYcjUW2Zjk,%a8(6mFr^GH"k:PY
%]q&C&cSd&QjjpJ(6MAY)^2.a7>u[ZXZ]Q3rcSZUDTW'AJLP)8(,C\>93_Vc.1m9fg)>n&5Z@:Kma;>JW_[1h5&U/(sL*a)*WNWj9
%S.)78Cq>F]nr:`j.L<,.-7abH4FIrt[+)mqfBMec4TjN`_/VP3*2HT'nT])Oqu8WYC?&-;r$Kh5OGR1Hgj=6#Pa=Gg5>9<e)3P3*
%8FV6Xap^U2\\Dn[f:::A6P2,n8e#:W4t%d"ii)&b3DSucaI"@2RdfcIgi/!",rd<i$b)a^aq]kN6C\K](a0+i;ij7RAJAa\gm(&?
%JPN',A,Q"MILZiFSj/gr`[pfL47@KfT/`8/j"HTi[YL\S2STqJ5krtkR^CEA'%\)+`R+bNda\4:*8N6P(45*M9k9M!aEpXECWu("
%'"81jR[<e':RH=>K=<(P8KJ_do)bfO,gE"(g/RQjm=oLuh'GF#@;c97B70]%V?rA86MIg%8/UG]"q:OaAK4(GP%[qL?3]%CB-/8^
%Q]mCOS.rPVD=$T.j5A9k4X?6JfH>Ik.+>LIS$M4*N_UpC9@UbP:>m=+a(+3+DR5\f0*TDn7Fjcar99e8r'%LP!sYYQl/[U'jLZAP
%??4aa*aLFf:kALnoR+,CV.bC$*EQ)M8fY<)8c3R?^937^/191FiYE-1gEj5YBP6n+M28&.K9Ik)XJ9Cp%'t98:,No+C1iD2A[^&^
%%>-m=ahW+J>amb!fkP/ef4.b*'7n9>^gtB/k,W]=6[:uan]0&(o&Ji1=su'eacW:?QC,s-fC#t[)>91J!4-ES6<&c!%k#(oblW-'
%NG(-VIE@>b9="U40'uB>i9E.:L8ln/Zg`C#KCPj;fI#$[(7rUYBon8.EJCRced1\';,jW3(1<+0e81QWiT=%>@qc^/M4L;4ZVY%U
%D,WEo=jT%@,o)4b"M]GSl\78in6sO1gpR18Hs4c]X.JcQRqb7AZXeZ+WeE2E]I3ta/[3HFi[F5o/[f"EWb#juECfc.J*^$-8!]LA
%(AQ?';snS("Zn7ohF^hVS;lW5h=;-a)W\Sdb`@Q&Kc&u7NpD,2#Dge2H%MV/Ae6&T4W?MS=\_MU;R!Xa4&ek,?\5p'ld/:$)?Lhg
%%IY$Ji-V@,,,Qs^;j'MuOXBKdb%.2/;9+1+7Z!X79TE.`7J&Y`T1J]cD]YL$L:ng<fJ/qf&&ls9Q`h6a"J2GD_:I!bVN&9nKbSLe
%a;qL"b<Dt?XGHfb12&[30p(b;K]EbZX([OZ:nBht,8\()&tKBUS.jI,:lKJ-7-5hM<.Ha9%qP#?3EM?$V%tJf4eOX8'poA^Fmp&G
%_M7YCEIm14VH>;bfdXXA&)4)O]fpjDghhq;E>U9S@O=ijk(6:BZ@cWh(fR=4CJGo1<-Ee8?A4`:h59ZFZ)\<a+S0m]+"TW<i$#<@
%V:'KX?V)pt%?G5Q_U-GJ8t"<_`]q*%pb=P_AOIusU"3pF_\?H)3k8*SQUXe!L8k0lJ$X,]6^\o@=@c+7:;ccnG7LKThZ$&/-c16h
%+lZudZZ+:?<Siah:2P8<QNOC9,*tYY[rBgAV_+/gCtD/FBCf$'YG"JaEkmI5VW);.J^efQgq_ksC/X8L(lFs%Z)_M!('h)dP2jX"
%ci!`!7fH82SXR/f5WVV)KVptoX+p^7:<lX@NEEI0TA)Wqg\hR!rX@7f]WLhkUXL!glGUW_MNBS=E3)sn!O>XVdhe`eHtWjqR-n.P
%-S1D;Yb`,OY\8bG<"D0*`q0F].."Zt3_:4"9f=*JHGM9UJ2]S:QaY2VcE!p\_``>&#uof1o(hdWRr;9UWfoQ3Yu'`PJsr.thrNA^
%r`2S&g2UuU%nd&dO"2tjrNtYY!&C#p60g`$^CRp6hTF\X'Pil0K/Kb/&S?kB&P;N,%.JKnC&+W/OO_HGqpkutS,'Aa2o;eXE>t9n
%Lb^_N21lIhp?=PBk>U#L'8Aa'Enc(.+KhoT]sAkU.B[+HcZ)S^W.5[og-<S3QM*eg6C(H6]a)iqPK`H(H.RILgRI7:!M6EA.s_./
%Y0FJ[/?4EI5*N)N\=<6Np\?!GP0eCb*+!6T#iH?\>h?l@>bU5qTiq/3,dq1J6g8n+^ba.nTO8-A*C,df,3*<^dPiV\!r9gHX8t:5
%#Gb/H[7A2kWU'B%\iOO.DrEu;>9_rJ)BLU6lG02()It@AB<CG!6T;/:US'eS\(luc@juZ;2`mm&DT(<8^PFD-$j?N'`3E)j>7hZ2
%*08910O8!Kn[lJ`lA8tL'XbB+,s1;5r'&]@#$/snEY6NpB<HH7PlVr-996[n4RpCV>mAr@.P0<XE*nsF\$2n.-G,"DFG,nZVo`ko
%JiYA]f%4^OMb:iI[\(T4PmEl0<Rg#$a$CS+\OccsEA<6da)/g6X_%q\VUD`bba/*-h&OIc:ks[:qp]o5b`S=2_?s_QA9!6j:R`[9
%)^.%;S`B4H9aE=E.B_MO,blC#A^8In#X(^a,P*L]_OITQX71VE969PgDgJZm1*?gR"N0K>XNb-`!:O$P+.JmK'[/(SPIUL1WR5Pm
%aK`(sk-8=s4)9_fm-CmWfjmO%8*Z1),L)9hQcm)/c&V\H$lH3sLiJ1?5^h$c-*WXo'cj@gHDSo]kK*-sGqE_Z;=A*WZtdKC&oO_n
%J#I?=_c61(6p9triQ@f4*S.a4Ac,u'LAb@:1F[7W:k*R;(-+HOWo$u1<q4FlKcT*_hlKr(\!nmW=g=a(=L_\TZ=:Xrh,?FH>7#P]
%A'N';OJQRB3P#W%gBVN8cMh!7G)gB33YV!jaI7%<c,k(g+0^JNJrk<I=,-),mkSG:^p_0C,6_l*Y)ePo]37)#m+)>MbHCg_>BZ"M
%jr[bU(gD03Ci%eTXKc?G4tKo]p".j%CLf=,du(tDZg2+2cE:c=3P0FMR'Wj.`gg<ZZ\bV]%*"fC+&?s$2/:@gXTuk9?/7C#ll=ZD
%N,,4s%9iAnZ=mmWetTR#YSQWmYdJ0-^p]J<,6_l1Y)eQ2]:(SmmFI%JbW/PnX2D/@71lYqQ20Dn5rNKf*Z;^`b;!s\Z/T<FcKstp
%%ueN0*Rc$TpN(FketOKb/87%Y7lRU4UYsP$2'4KXFu='Zg8tn/XBkc^B'gM)>pds8(1Z"BO0)tTS$eQam=M`^B7I$p4%EmAM\UlP
%CtH_IZ<b^-bBE3gZtrf^NFf`AAMo2WK!B1Ea2YVpbo5Vcl[^d.=)X(<]>eCrk9^=AgmX:jEP%Ys`\$kW.:'tLDQ1OcBtFR]Nt3`E
%A)*N6QZ]p9@'&*W$HBY_h)3dN)ONNQ2^p<DG("/-gXW=/DRV58lW/[HD;.(Rc&sbIYh&4<GaZ%pVD2uU**D6eqO7"ngs/c"CW]8b
%)Ro$BA)+5!agcKXWXf[P76TAmJeU9,I?t<^d&%Gs[^C?a)O!kR*]N,;Cg2lO?+(\T[mFD2%6_"7gMUQ,Fh=-.Vmb`Ok3YZJqSHH\
%nCnnZQ9i04fgJ!G_@^6s53\beCFf<p*4;$4!BoG,Wb?=/LDfH3+t$&B"WQ)OX\QtWUSDE^.dc*9.@,n@!5VfcO!:7XmB%MLHcB;:
%/KIV!;cHlTAX)/0*%qI)M+`c%b)Wh=/(JtTEb=E9=rk`.'nHJiSE^Vmi^1G+$Brr/]p>!M7PHD3cqoE>-[AKZZXol/U.()5BXXRL
%VZI<*#XGl:f\A)pj=j85:77aV_-Ql=P*Vk]%H1lGgV`A'N^HLD*#B(l;N4d%NkQEF(7$P,FnQIb42X2BVKI#;bQ<g3^r7WC:7:63
%B0,SsndaAb@;qG5j_%4c(hV7A6r_ER\V3eG<P4#\6tA?U4oPM'OP'A(]KTR;c[\QFOqPtSa/q".h#INn.4&e[NJ<s;Z`gM\a>/dE
%#r1tn!Cn2pijPBe8+\f3^e^I7fBf(C(>V7tb.T46j2`lD*"aMhM#$_qV?T$/+a_]UhEgs",bAhGZp^QCX%Yf4ib+@QWf=*0I4[*i
%7LgPB8_;gAgJ<T.>]]rFoLqdlSuDguC_j$lfNCXDTCnF#NNuGE79J)[??t*uKbD!O,D_\",U-W<W!ih30*&\TQ\OfIm01/c27?:R
%6e0`,Zk))FBT;_-_-X#H1DS355h_2]`Z[<,E9He1's)?)@l5D4f5!&C3%DGsN7\Jt!-(cdTIT%=6k.4V&c/UrD>MKP\k%R;b#ZDl
%7(q/"\-E$o[64(PaR[%)VriNm<%lB*&*+$W#llbgZ4I"4@Unj<Lb([G,:Xn/:bqH9n0FF>JRU`&)X0dDk,=Q=:lk`<G,C#qc-[>,
%pe:P>l-2T5.L$s(AL[lK1g#@b;:*5:"atu>a?CosF1N9eL2;?WQsprsCdCAomST$sNrt#\LQGkh<N$pPl9+KnYS8'Fkeaj)o9X\f
%VKNmk_ZC'<&BCK#U3VW8i3NjV-ZFb@XH=TaEPnQ8V;\Q2F7:mCDOhJpCRBjld2+AZ4,O]^EROL'S\kLVeRHA_O>^D4[MBE2=+rE\
%r$"==7Hth\mPUI$,^ku01b/6T@Q.oKq"KS4ed%TiOV&I98=X-<:OtFX?ALTrU'Jq<+]][@:Q;+.,\k<B.ib3".@?0Jb9?pn5fM`l
%Ws)g(QT`UN>Zu)\3eWVobA/ONFiPYEKbs>c\%p\40In-B4-c1Nc#spNbq!UEfd:e;1n&;8WbCe-LAYX3BtGm"V.ctm]7YYXLlg=r
%)no=P!%:!:g&^t&28c!8,E413J2>\'*U%.k&4IJ9NbV+BKkdE<QTf1*2=A85AMdc[FCW5\/N$+,"t;-;Pj8#_(eq:iV?1Xk.BWq<
%17B+h:0>\/XZ+0hBAM2*(hg.s@[A\lZBs0`G@]\D=WjqB\.L8o5gWGH$YUD]3]!c*r5D1C5mP_+iTsmEn7c2FF!.;'?]CWG3bW7G
%3Op+A3e]sR%kGd_G#(ki(>Q2G3tS:UbIEUWq)OuoC7-^I[G,u'Q8=Z&kA:fqYm>q@?fuGY<-'YEV*thl;+h[fX@-fiU>bm1W/J(q
%$^Pbtkisd*/#q7(5jcG+)'p/([a(Z+ddGn&L!$Gcc*?:<=`FB8IJ6XW']_&K1hjEt_bbUSm&m@^5^Q,;qG\XBG#$mO%_%sjcP`g=
%ig's)*6K2>l3nbI)>@*XkX2N=rP?[ga=*0Jo;5O8ni3`5/(%>4R8S62SP<[dOV5oYJ5`dqbA_NA/>/R;e2"BYLM3l$_h.K1Yq>0R
%`%B;BS>V_I=h;)&3\uk?.%4#Z'D+S&8u*`qmA!3Z"M0V*,PlP=RsCGM5.<W:F]o(+nlu=@S1r,tg)Xd>9cJf<nm%($VW"pFfBk>D
%ecK3EP1^8mXQ"utk*]i6UYrH,QHa$MjKe3tp78''[6/[1ZlH((V&>SeBlqEO8<(KSegi8FWM$,rb:7CEZXk!n]shfkUElbR9eA#p
%.cr`Ajf*`r-#YX51AQo5TD&G&G9$eW5!^d(1S[3.(-;?Dl!hKp)p-!qpD)(,96`TDmGYU#9-%q<:`M;f39a7uP*6)UjBL`]BMh[S
%51k1caRA5`;]d3[@:])r?ofdl73/55l.B\8J\.\7,Sge0*T`]&Hl00ms-<^M'gB7ParMma1bZ\)@]Zhj>'0@/UmDT'k=h4;<>8*#
%7^9oY`2GslMG!qB\HusODPGFM%@"?_-W1Z3FjR&=$=,Es!Q#@9%9%L8T/pX.9?qPaD)+H9W.jt:G.#pH[8ROs!rnao!EJ3.8F6ZG
%Ktp_/MGY2[&cm/uo$'ubrW&WZRAg7j1Fbag5R/qic2ah9rOn^h0i$j7_CqqJ>Z;aF%`Zgo+"h:F"=:%.00piI2'/YGRg@MPC@^(N
%Nb]427:e"(ZV)DY"Z@nKI>l>`#nQ-uK+"naV32uB,PiqoUS70\bKW.ZJYiTGa:+@GY"aJB0>am/K=*%j^dF761R[d+Y$nb`LlX+L
%nOKc,^J\#\It6pkJ[e'8!fIg]*K#V&Uf,D%(WiE'5W."R*.<ra;O`6Q&aI'1GBVL*9TJf57Ee\&394<W[u(d^BF6f*h&4mAqqo[t
%70V-a@Q*gMjHWa#<Fuj$m)'q$g#[eoM;m`X>&+MI@mPfWefp8s$0Ti$(G6_M]SG)OY6"G]hVXagJA]^ljct&3gc[XpU68CE<b"<L
%,e@OCJ"V\HdjX3?AHPlW!"SBCCO'cAkkGE&P;NO](.fMJ:ZF3UB@R8F;Wun>3i?BEKI0Tg.LIYidO$Se-LsPj1H#RMB;NZ+6G$&[
%l_P`g6S4);qD;_C;hkZ2*F?;nG^"NY;'c[QORq'Po[:MY,SePJ!DnRo[#2SJ$m""AA_^&$kI="!/8M@05eMb/gVCMtga(<srnrM"
%VFa=ZGLb$Na#jcF38e)QbTTWr2&U**!'<V;%EF4'GZi!'ae\u%J#R,qI&2?F&K9'UEV(]g9C2S73i<e)>J!4_=gS1-\2K;jYrCiD
%TqWiuSih%ulfqg3EC17:]+1h%@5]LIjHIAVlpL[ZH#i:`U_ePh_Kin5KmW>hBSr$lSVuEhDU$ppq@!sTe_.>R61Z!P2*S0K%<"r&
%;:"'I;6L?lMD*N,Ln6-c8d(0R>hc(%Xl=#LM^E]cVM9+8%F,SZRlUX":NK1tTas1F;Nd;XOM"f6l#R@aeI1?r;AOEZglQWd.r%14
%3ld7Be`tX8fFODJ:_*SAPq#&\F^i-9hEX5.9ETSNEHgU7n[Tr!B<uC>Lg)*+B;$414?2e@L.")oTN1fV=&(rENR6;QD.[IQp%RHq
%PSp%#!D?lss"YkD6<PXj=]Np7Tg#Y[3:.UKo3/HCpb@\rbp3jVS"2f&Q13nfSMO!EbB-jm-Zn'XfT;g/fWl`9d-`ImOr;@;!kY"U
%Dq&T6I=^QO*s<ZEdX#Pk#TKO`lsl$m/i0e<[:Rc_r2d&e0""C<N*S8N'dM>M-pG&1NK0NP2RQ1-Q*#@7jeD*ErJF_f$_C>geC2Uj
%2bKXE"_&FR1LT&`0']+i>JRgji"5Eb]Q8++3PEMd#:l<c5o>c(Vo0:^Q$\DX),-R'H,[%JfVD\P^kGX<2*`XhjqcILE:jX1:TNCt
%=2-(g1DiZB:(nG>ZBE0NWYboo!2"acQg<K**fIVn4#_:AFufQOIYEENOTQFRTb7T%>"@;+H!Y7DcB3lt;QuS&ml_"&IK^\5qD9BA
%\g"%Qk^5F9d3U$GP"ET&B@ns8P['&r7K(cMntN8"9O_kCerjBdlmr;BP"b]4!u"p:O._-bin`d;WsjSYn1jaTS&F&^7+43MOtK<6
%#YW7EQH,U4,rmQ51lt.-;*6Q^V.94>Uuj?e]Ys"VeM=<rPPg@6c%CaH'?o1:b\J'Prn.knSc];,Nk?It_obY-#jh8JbZr2qA;N[l
%>cE=mrasUaY/A&QrTJik77/i2@ss4Tmq9"f(NnUHN1mLYYjk'mV$n8-?L^PkN[TG0<`4+92#Kb^dnjurLPRN$jUiU"4p[Vf\.qqE
%-@kT$i]O:6mV+ABE$1D&)F2qABQEUE+2j\If\5\toWDZ+n^MBq!DT(]--QjfgkeUV4CqJhcS18-^^.;VYnWMp'KrF3b$83#"OH$d
%LAG^g-FH<2aT](Tkl'\)ZT\s3@M_Xr3.AK`-nd&X:>>h]$,W!Kk%Kp.2jdpGHe5i`/(&u.dV],RJ#*HUO4c@cS!EoCG?A6C*n<9H
%h;K^h!G.??3qU"H_>l,nWbIi[:+>88T:lr;h_&=<2)_gAG<g58:*qa\RAROo\Tu^i;_PsG2q*PK%`:/U<f0n#2uq%SC)%tAR>Pfn
%d\FZW:!r`]*dWglh?*)skWO?nk@&H@Rtf/LV97ai$jac2;fA[bnk<ZG`A_d"4po0q@D\FB`aJC/RX`V,^j1NO2ju^c`b6l$`DE1@
%]oc6X9hQNJI.6n;WR]%`&.t1*P\F]dNnn_C+f2F(9K1'+:duXG1GYg-Q-T8s]bKNgN()=LC^7Wa7ucutV*WF580[SDY+\/ui`).p
%<nA;&k0-/Xj[fn+i[<?bX_%:HjUe.dO8(3q(UWNV_Z@1O3ur#-27o^;kqH(p1]&gAG5B2#D!,l;ZJT0KOE@hhm6H&nWWUnYPNScY
%Wf$qI"]:ei=7Do%nfAr(Lt`s9KtZSHAT>U9QQrMhnj3sR?q<[".mb>gAMG^5en"g60Z>M+*JfkiNtDG(Hf#NX*_W[q\PT9j7K[\R
%:Hbnq-maMtF5\=g0BK[1LPQ-,[':'^'A$lGE1UUqjk77gm$Vjp"4E-RSu26;9ko"'l!&<,VEjsUVR<g"c\FQ`_DP,*!JEL<Q?cJW
%JK%??I:LtHB!Em3`%8!L`RM!,C#Gre9G[$$L<T4#Z\bos'rHi,%F;.49epV=(jg#4d>h0ZHid*bSa9[.P8:2qrGk=n#h4`BFlDuL
%;Ptp6KbSC!e';1_Af@qUi21gh7P?8Okd%)[/@LXClc!F-B=,<NUmg,h0POLijucZn[9I([W9I%k-NVOtiet0FQ0WeArQD`ChQboL
%CK:)c+TTQL+E;H8Oig9P_6:rm)@9iuWd@qo!sohZM4ZWhe]S33/IhlZb*U4c*#`hCo9i$;?'$`W.);"q>?ecoI"JsEeLOk'+pCqO
%FQ3)45pdaQLeGi0IuAUc'b&,&Y7f>>MsfatQZ"i0.Y!?Z9/T*mQWX;J1l;FGjb>bf-k5eonIDrL08H)h-k+qQ&j`=5Ea!IX_$*3a
%d"+kO"P:.Q)jLj3'e=E+BZMB04FQrZq+#1qpn*-g4D?t"`Fj0YaKtZW8s%C1R$$F%A":%;72??%OEE=H;047'7'BB/A<lpBKXr8l
%AL$'pfl#u[HQ3eOUoRA_.!EAA,@3Kfon>$42\`0a!'k()<*hio;slLg%l"RL#oK+&68W'sO+T=R.2(9Cj;gGd+Nbg(`"]<Fb/ZWW
%cJs#/*`k`bYcA9303uGikcQMH'6#p4lC7mkM,07fVM1$53iCA^o+uDI8bub2\jp0FJV#9$0Q>h>7/,h$B&%lj['e4Y7ZA0mPOQ",
%:ukXgUS&>bEZH,D)!jAYTUne^f>X91#6$;8kAMu(TphWW_jt'a%H1S,Tl*n36iLTG.+#@7Ojr_/>K9B^Y$0aN+(O5EID\-;9&"4f
%Ua2iRV9`rK1iU63N<3BIX^QK$]"tL3foUL/O;VRe0YiS:W"7nHO:C)\/U#Y]WZ52.,c/8^8n;2QE/r^VKeq#$Yf2MKQ@`kq9-g66
%g8n;qP6-]0hST?tT:+5loV&.L)kBTV+T`H$`J)gKi;cbV]!tF6h2!GDI-4/+j+tXa/V/!7*,'Eo8JhjMCh=k:A/S4_$$sY=KSG=`
%49PlcpCD:3+Ve[>O!?J2;K_]YiUS[=i33ZC"%+>m;9$hB+34\M(c%3ca-;,ON85@$cU)DD)HO\@JiBWsln!-=hQZMo$X[P3UZV&n
%_m-&L!_Pqe>u"SPPu9A0NML5('h?lK(.E%_&TW,URfNP2`>6hIbH@7K)k[_Y'JCDV_sri^jg6K<D4F,4ZO9Ck^q6\p,+SOppERA/
%L:Klio0.uD3:+:k2`nDU9)ln;hl.J#EkoUV3H[kY:6m/BWl!0QW:"9::Jt#Mnr'bablq]r<[_7SBq?d>4ga"^Xs>+MP*;pl-\tZK
%'XKnKc4lff(_>75i+I0iRH;8#,#?VuqLV)kZ]@]h!gX$aE5!F>;e#q&I'G9e@J$3/[NNBgEd2:4Tlb4DFClYA,+:74_ioF0AMaqP
%8!1LkFIgWFo]loEo/$u*D-?"$bQF0L>QW*30T0Mq*+ibV",5@t>`$q&iO(e7m50:9qHd3cfaQ?*ieHXYR3pR]i3Lgt]k7!!ZL#d>
%Sn9*8\'5@Hbsk_N;`QBJdqFkTN#Is;/QYtA;ajDRpJJRZU<f-.C_Yb^TT,8-ei)jUWE#j=r[=?_;8LG?2p-FarC4->)ZiOTc')Pl
%-o>s>:6!]D%3s1HEkGNDqG-TljP3OXr7jki&B/$VWHj@k5pq^^R4<a6+=b&9#**0b+_i8uEMOuqT'aH)'i;<LO0TYTa11iLY6J!5
%"3ll-)os:fkUVQ%)%\NCJH[5:(Cs[u8KW\L'Et9\Ka/K$FA0,'k-&pU&pWf0p\0F6OeO`CaDjnJIhke_eaW'*ZcFL.7I$E:_+TBS
%Jo_Xsg9Wu_:9An+Nn%*=OINta)5M7s@J[i1F;!3ZT`^M6S5CW;nk4rEV[W%4-<63W/;\Q$kZLIIF=n\/LZj?aDirU':Y['Gp(WLp
%^g/o8L\VY'fAN/u^\++[^F^'p+CnL@M<Za8$Ug-sprr,1D[irQ&apT!L_.n@e=tr&aFHdeT#8EJlVh5d!?r,B?0habaJu$[]6+l_
%\gU.g0KAe7*Dpd+FC%WUAu0g,:U\X3AVA/ap124/,O-7F[L;Io(h7#f.=Mk]06DC5+QaRs<U,b8_Uu0QNF'&o*0VBX#qf\M15j9Z
%=/)r/f?HRQA[[tMr4;clm<tE9N**UM(M.EBSVk(E>&Vh:UhpCRo7e>+H(i0Kb*;OCX`<+jhsNJD;ldPKEo6q)Ao?Tt/sWA6Dkakf
%:\sWJCPoF<\S.f<3fORg!S9J7'Gkp/l%OOP\:H#"Ngc('n:(8.I6[u@jd%S9_a96CD2_[Y'K:&M\/>teoD'iJA"0?7e]nUDEu4FJ
%2fHQ+:/C';5*rnYjD:M>P.V]`K+'Id1gR%JH,)('g_nnUEsl@Br4da%:OT-*%GI2UT=29.$/<`Wr:&0+c8bW6fK*Y0^#AZ4Ccf,q
%rMO)FSc3^omHoq'T@hl.KcbcT?46J/=rq<@?-YsL[;u`5IenIma]^g:i_hYG_r@3]jbS89gNIJnX.@/fgjaW%_YpAaDL]O3Esk51
%oNFB3:Rae_rUbj!T<R_<_Y9Z\MeE(SHJ7*o2a=RTEsk51FM/IV@<(^"?-YsL[;u`5Iena,#l[1!<l=[k3<lmD3!9s(0g[-0$nL.<
%S6e])mbV437.J;B%MB&[]AY3(EfpW_Ittj,.>#ImBbl@Fg8ICt(Ih:B/L.8PAhs6a,?qYMkK_*<E+=inT;,;Pr%N8a6?7t)2CfB#
%TU,cG-Fu'S".j?lGnYY!Re#rJ-,*i27oWq[!fKQ2ERMgHXPh%2qk!=1.M&?89$n+A+D,JSg.D,i4OB(GYc]l9W#]9$pVb0n9:Rf8
%eWr!U0%_4=O=sA8\)u^.0%90D&0@FC8!!.>>k+Df8,o'Z5CNLT='tponaW)5rU@i)2:0N*It$ubs8MjjDnc)5^V9^@lc1sAs2403
%Df.GnmXFd%hgP6DB,gd6X8Bs+*rc3>puVh[ZglQfhRl%$ooJ"Cq;&Mes7Y2sHdqKqAHYf\g"68U2dcU[n+n'$09osVSpbnak1_!8
%I/hO`/J;eScckd;s7fhhs67SUhu@B%lL02nqepsHI/*SW^\RDhf8osP:TqP4rq3`b51ul0d7_O[?f-8&DuZt7ri]CEooH;kJ,T(r
%)ulunrmrMms5\%4HP:*`2=X.rAJW!XHn9NT14!O>Mm#*ag0h8o`.>1$9))2hMcQU/&#%Wqdt*@\-32pLT7HN;pfk-Io5)s-[KdS>
%SR%5D;-ch&$QD&'CYXu[idC#t!aqIW`Rd!4@;JbLke_KD/Juke.'I,"mFe-(:G<QGdq\.5>;GPed+YK'2Z`_#9^V1]e;WZr!q-b/
%JsBD@T[emX=7>6]WOad)%S5uMp"7'CaD&\ddm2Qko!;jD]F%u8E`#qOiRQ67274P>E7F>kE+F%%.#1'Fr*7dNn23555SUk`qLFrd
%e9ZNOneT@9m7?05Phesj`e4LXX8A<9kG&1[a&gf*PT=S?TW&T%;i`Br5[HuCic[1[1T_cB`!A4!5m]nsW)c?i><J*=SkJ(mdo=L_
%fcWS#U^p]?GYK:on'cGsm%_4MURbq3h-.tth(ETugc9&.4./2qOjod_gq`qTY#5@>;n2>bW7$l'2j_tt;d*]IP(JH'TiLEWc75:n
%:M$'`6sOr+d#T@_]T5l".T'rf"VHrpj;eFp8fTKOp`GDnmA$<`mQlu+//Z"DnI$'+\j"C2!m>EbAA0>_(0<,DeWE9&2H"^uJp!G:
%?bDo.,[?5f]48:YOsGYjBGK1[I7b_s&bM?r9Vs&+HV,sQWa'&I^?X_4`EZ$+9mGVCM9F+kVajo,Nb\^h.Ht"1YdSH0GXg70G-#!3
%(+25%rsLI5&<h8m-$i$MNa-4o67Uh_>L7ot$ne'7@?Kr@6Vq6a<kP6U*];?/Y=]ns0Et1G;h^ML>0a<H@'@hDT%,s:>9Y3Ac)dUY
%8fg:@p28?KY;g>Q7mWcoWKL^$=pk[oKZ?nKUBKV2Mk[D'rtOu@;=]g1m$H'GdJJ$^(385FP[d/;VWNIfQ^>TnPm,mg<:upn]'!0e
%6rS6C(4];R2ZtAP(*:4nWn'ddKjHY+\1'(&P]2t3jW[L&:MR]o9E?(B%T=bR.o;AiBcJYWkD;.,n3$FbikpuN4`H*;4PE5t,\g;>
%YjUF-Ka[?oEq:"+NHpL0WCi+@/;@+lrDc8'as;RmZ7)\_@@IZnh]*%/Q.Q`l*<q2>O(*04*,e0>_Jq+f;1FrG>)0="ZKOLR+7p+X
%U&aAs#SmoE!HHM''$3p@LI0#6S3AI^m=YkLK%-hlAnjo$_?CjA=N2)B`5M(t+8[7;M<CVfW/Bjb-2V>n=L>%Fl-YE$1bO74U&i)O
%"V?],pWF-RTBprKROd__m^Qf'ia]0+?T_dF=>qF"P]^@N.k)+I!$[2nkWg=.:HQ'\UVW'aR<@E0+biD-ga(nDW/khs^hXS.pMhcq
%KM#sSGD;)GXq=W[C/'\ZMT<YsZ1$@"m9jTo-k=lc1jT^FPu'AkRDWU6+_[C1K<,'!3Vt[&MSX/HlrBVl*?BT(.Bj?ajRf$!NfD7I
%(5bN)j4PKW_W[8c?KkB\(ZHhOTkVS1!^eBt@4W27msBj2Me!E)Mr5J^6:/i2hi:ol!c3TjT6De.p\AN!_/_%/kc(iQJ,*u9VoJb)
%\.pbMr"sQp'&Pn?@sH=/ZLGYcQTNAZV`//QA0_kDVO+Cb><mD[:nRZ*7^s-FD@."0RT]^0Qq^ecGc0Mh<(2gN+Drn?pdLta\raNZ
%+Cj":%3;jFj?f(C+!mTqk^qtJ#An!N\/uj1Wh_Br'k"utnCGE;3IqQ,a@J*mQ\*4/(ZIS'`MMZK/!j]+S0Q(e=>8HUlUr0'4[;IB
%B[ML1mZ^3u[4[kCb#Jt[P*MW%WbSlf1^mYiL_4Vm)XPX9OjU7r:4VH#JTjqiRTou\g,s"3q3A51'qaI_e#;FaktXTFi7Q>d'QRi$
%VPn<(App2N-0q7uJ*5G[N$)Mb:WQ)"Oh+,AKDPG0Q=gVrND'[`LiG,@9??T)poYZI.On5PJt*^[YfGQ@k5adGkg_]=&nAJ:=eUH,
%3/@mG_#!*DgZE)CJ\snhkA^k>&h&Rl&l[8TIcdUrSZec("c8E2Y]dZuNK3Jk/X*)Gm)m8,D]%!F=lSeTf%!ngCcf"s]Ynm-;TDYX
%/Ms8"72Zu[1AI\8PJsK)%J?FHR4:u*Vo5$84SZ=]'V2u/P%_2-_O?t[H$n>lA.=Q7j$THS<he%sPn6QF,ma7<]S"0'ej52&C+8F`
%0%$d\R_(:1+Dd/f)WG).0YMLh$DY<c4=7YA:D$9kdLM<74$M^aXu_&,i5Yp^Rik130!$aVl_M#9>ZF#66^A;_@Z,J-c??1`L@"1M
%IQ?<l:SPKTO@X]'B0FBq:gPFr4/M)`"?Ejl*%r"#BKe%;[h!5/FfGsUklOC**L1);QeYhXn"CJUU1CbWbto;:;=Oo3Mo9F1L`Mg#
%.K->dh=N;D,J\\C,_W;c]Y?NCg\k(BAY4$>+qG7W`M^Ya7DW[d5&-T_*"5#N\j90+0Tm7;;^60ddRD9iFoD9Ud9Th</o1FR/_mf+
%U?20!YLU]V*S*61#aK=i\jI*\j2P";=U8t]WRnuG+9I_3glP3<nh!hQ8QbM1HV`9,oKE-;;'gs-;%<ifgHXrK9Aa0]6]o279b3Lg
%9cP>PDg*0OX!Gqrb[.@+hnj#5+)eOdpoL+R4m+9S!LF9GaK\MN*eT*c%iP:HID182DK+.2>dsb2=?b)E#A$c,/9\%0bX8C3pgqKk
%H:0W.31`fs_,SjrII51d9(U"D.X6H1GK"8TAh(pO[RS%oj`HX+YAK[!N#S?Jb"[F_=+UVQF#]%hc&NW4h86:i?KPhO"'sb4P8Vu-
%,%iNqp.Ll9KDBa=I+_olA=a\aH!b*92E0;<82L&$pZ>OqiV$o&htgd#i;Yrel[ScB-^+)H,FTJ.\jO`].CnY)kh!lXL:&[t6V8(r
%O9l*]JiIHUrZ))pW_E>rituj@b2^"c\V8d]DT^toYORB,%mRej>P3bs2V'I-2Ykm)pYUE!m@3SEnG;HhIer$(YFKna*.l%)h=8Kl
%D*Ee`rVkP9^OH+ClU(p%pODu+Vf0<ks7"qGK'pVpruLiOs/VKGjP@QDlEN$\&G,E"*$OH[lN2@@+boaf/,rq*jkb(LhY6JFhTPld
%_E1JfILX9bF)3f7B_+E5:t6,\bYsGuJ$aE:Xd1!Jq;%_DE*`ZB^nU:u4*e,-*,sOW+ZSBkJl0O?ifK:Tm)7#\:OdNOY$-2>F%2Hb
%p4*^1R;[EGlE7kO]mdLq_[cRBX]=[UX%]o!S^`K<6MpGr?AGA?,lq(k*1B0A1F!:BST'81(!QhmqK[a`IQiYTE0.0tBKLWl*I`JY
%rcqk+Lf*f5p_Rg8.]tP'Vt[b4F.&@[J(47'^(8=P)Zk*-:ptJnSKZ&H.+.$5O(TjQQ^.\52(HM"Xr__2Y=SDjq8HEB;*+Ue;p0u1
%k93Ps\TC\)+I",?:apKneH6atU@lcRP7lBVP4\LCp\.[WHnu?M`CD_LqC&-VM.J8@NhgC5aBbc+P,;4^1(;9.=-p4BObs9\mGsi=
%l%m#E/;S7P$Ck?AW,GTO'\nJim>PpnjWe>2$"4?sPZYR-TNE^;9KUS^okj3CPb<!BB8n*8$kDPHMHo1mV"]T#A=f@6\o@@oLqO*C
%SmbcC-NYN^i3T%:$4M-$%,=cgc#8%K'.J_*ehJ>/AT$[R"PbE#SQSGjY'!ti4NkC6cn#o#ep1I\4i.Z!5,cmV_9/DBDTP0i=PPoL
%r8r!]nl=!p?GgVE+*8;c?cdTZ1><.('p$k1Chd*4q>!Y]pP_&6:d'[F-H]`K`*q0RNPt?-b4Q[UrLEAY`LeUHGN$,e),Y"I1cKJQ
%ORj_4FTOI\9:_-]EU%_"DCu^6@n,%mf5NefK5Uh.\fp6ZPPT$"?I\Xt$X3W:E)9$?e1)E9fd[*C>dEkd":#%`?68(;Rh'gM@;t9=
%HoE3n$)YQuSt2"]c-T`\O7;UM8sBFUP;?Ml6^FfMeU$D1hG,IZ;2^lcpMc+p*^8r(dko1+SOf9@:SUWq-Xon.ACJFRqV=gJ=\-'4
%R@/la)J10/2+'8b>bg3$6qYnM%gcsJOnV8)J*uCWQNH`<;!sijO\NnK?1ZOAp%J3FCMWC`j638#,9BbB8To6(:%I#)[[qeuT<.$1
%(IS2i\2K`0WD\]&g/O!2Hm(-,$`CR2LGj%=.b]K>ZR0[(g4^o-Bl8C(]S;c?p.1;;-gJdVnMjpA:t#L:fq_L[&!EC9iQ:#I15)i[
%OA:)Jo=".A9Jl(1E9!eeobI\n'Jrm>h]ir[gs3Emd<ogFr+abgHqds*Ss*NH4PG?aBuph8;3?^3Ph^iYf5bEaDNMo>"u/[nG,nJP
%WeB;i6qLnY9?t#<3(PQ@8IaD<n.Sb#;HWDak^5/Dp"@M<aum2:)-N+_Gs)4-4+dQO%TFJLIVkM1AS<9VPZXbc!lC]V-;I48U?k.3
%lQDqU#o-j&RkK*s^^l.I3`Enj+WV!8=9>f^.//V@W_OET*T,L[ohArN.:%=/=c99enWGsRmVelkm,sSO;UrEQ,&qoWft\m;&e\HE
%c8TZ\`6WS>a)]_I+"aLNfif=YJfVtIqIq*'nhp*hOs?7df\7XSM_g3bJSljLP#6(]K#c<"%P/<=OnTW.m#*(5>dBu5.[4\6>T;Jt
%2akf!@LrEr0;<pZ.i]kg3D0F.=HIjqh&8?9UrsW2\<q6WfeP<(,UAn97E,9$,U!(/C#'\P37]D62U;("9h=Za3_1(0qZ5:]H0$>E
%\_=F="`i?V5!!E$fT[9D?k8cp,lKllR$)a;,8dpg:=35_$/lA"Q_tt//P=bBC.=e?-7+"!2H6I,E)b_Ro,OQV#S+@Z,"mD\bTeA4
%r/eSfPf\m?-IHn\6]!N6<>6,ZA*Qs`NUsGcE9u@J)kjK)4Q>>O8nH),2omKTeCR#@SR*Hpp1>eJ%!n(XAth+_R5bP.8g?:"$oc]^
%&c]X&Vb[O])H*\]gnpX-6PM&'`(U/PPV3d46e!"2Dke+mmU,t&\=Pm+aMRQ$Lj-grI_a9h2Wb]7%OOK96C<q6+56p,;1p/[/nOLK
%)J6Vn"sd2M[llj3oH/.Sp5@.7@fmLs2$GT?KpOU$JgM^P4PfoNKX7[XUGR3JLn)hLL3V?4Bt#/BX.MJ$I2"P])S]F%GSeli2kHO"
%l0or.gV=Ve,F,64\KZcZWI0XEH$l:VX),V&4K+Dpg#,CR_M-umYL)ds(qC5,pdWiDQC*'[#(PCk45H8CJ:Z<[9qQc9(F47s>"nWK
%F5?[+ltOs>bp'>2d$uNA)ECW]nL5tb`pO8sk?-_5D!KEdil2*kd9!orXM[uQP;e`B7HV=_kCQqdM)S/Lg/aH*_L]d<=]CF7pn.Jg
%]PmeW3tD)P6u-(&m+oB5Nk5U94<\;*TqjU\IXp1%4p'ItR!H3UId[X9^$Y]l[!a1W";/<8BDY/5#!>HFA,A_p$NaEp#1N=qf?.FZ
%Y,_uE^H@[8GKH)qGMtKAJ,S\Pp[bXpLToukIiEid)h*aT+d2\_j#q=u/k'I2k;G^Sp4jIIT?h*DEW?^bi3Sl9@KVN:@Q'fT8#B+"
%SR^NES2D,fd7+k4[lgG<)prO,<b_!!aL0CKiVVEg)?:_82i_-7<*@Q>MO<nLAUo_-V',H87r'$4q<i,RM""m/rd0"]J%3#epoVR'
%:V!Pm??e&>J%c)J/_g0!"2&(pr]K67?^h!b'"<p3coD@j'i_8+LZhduB2KA5MN]p$L_;Hfs*&-(0QK=&50Fm@AAi1XY1lA+gZt%B
%K7Y$==c[lDg^lAdADaKih&%]W#&Lm,;nJ]TNB)2mX?78q'84)9@@H8G3U62/'Bk0anabAGiqel+'uaqU7]7GRJ>t2;K%Q&3`9PFX
%<sq&=D;:(oGACf6:PH!7)Xn[rs4,:$-/;Ddg[fqGnLXT]_J:s;l/rXrqY@@E431t\N`-[,b,!Geo_2Ul$$a^2(dRFVX9'_LoZnIi
%:k#8jPK[60lW;]B_Hg$#"L`UX>@O5=%a-[F^=u"On;V,Q1bc@:r*e[MkfBUl&j1:-_:[ZY+ULS49@WeCW1M1u&1T"IV1@G8=;s*\
%S]st19T9XObnb:EO(d;cMHG.GWHN8kUSlU@:Rtb&g+p;l*2uK`ZFd4&=h(+[EIJ30MsF(IH-L+M+]3s^\K49'"+kV'RDUTG,]pj0
%Wh_17o:B86@T$pV,Qr"9[FYd*i$d>^=/j'XF@@A7:fAJ&'+068H3dF_7C.k\:8-nmJV<c+iK;8L&dK[E'Ome,nbW>p.D*H2Di'H6
%W3LF-g/iFu%]H'ac6,_$Bk]nl,L:Cl>:)foo!GqjM]W$dauT#DqYm?]*l2PlcgRfpB4NK3%qF9(9/TtlHJ:orKAA@=2Q`\T-`S)a
%<#'P-K#7uBb^0EK&[+aUa\Idk5*$j/4ZGS]>Qg0hJ8b!:K),p7PdZ)8>E/Rfj*:l]fc@,f]ci6Qf=$0f_r)Xt5G>`.>QP=YNa+J#
%IE(s,12PCOLko*Yq3@5(TgHu^eN2hf92]l?e^S/9OV73f\kTEu1_/RbPDYkfZLVL5Sk"4?]Gk3OEUbXN6i.V>F-/sm=3CK1/=^(8
%L2,&Pi`'$dCL^=ViO$Q.KX^Xu(B'5F7i><9"rn-1R3I?L-/T3>s.pGZUn#Gu_==Qs3&[Rs)2I`._/i&KZQeWPaI\mmPI"M4&6J@`
%PO3oQW,l$u6b7`/hbY/DO625<WS"eSL]qA@cXMJ:F]fg0U9hfT8I'9'Olb7-s'c-P-Psg0LM0^*TkjM:BNBB<IXNd(fZ91Oe4U-\
%Oemok"=3*N8\Iein,(5lNVQCU,(97o:c2ZrO#rJ9$?)$k&JQ-fVCq^&)hoU8WJ:B*9ao&'OEbphfd;E@Jd(Pa>gVm3onlIl>EVS_
%mg22=STqk>cD-*>flegANb^@n]&jc_X(QP9T/Sl8J_F%OZ@+&6>H#O4^4NW(!)*oqS(/4qUP![p]2&O?mr.!?Fn]VtF[:RK1(%b^
%<$fmR\Ubci"K'mX3b`C7\qW0+`j]?%^_0rA]?:W)m!a0\nsp<3\t4?1A*d@%DE$d7@.6>7h<gfb4U'\,UXZc`<Uoo@)i02?,,q4\
%0,Go[H1oUZ>']r*_5h&g'F5YNVHW&*O%R(1"tBRIPl,P;n!#FALDpEo![m)sS>tB-pfB48+<=C2\VJHg;LS5R.7S91b8#5W.@Lp'
%ba0=**rB0_MaU=Z#4r"%3'>psV11h7mO6L<Osc4fF@EGF*&GDg=bgVI>400YB[O<l,6qD2ff>d!>.ta1aF:3#2"&-`LQh(f/l$X`
%M3Ft`GMSI-g#@2<"FQ("%mV\rb1S+!@,Rs;8sc&bo.#Ruk"`JNp>d"almKL9gF#4)WFlJYp[GFrEp&Tl%b&V@Sc?!"Jk,TBJe,C2
%,k2eVmQ;=Xe%]o!2M^28Gi#srk7PH*H&n1K\"A'=K27!pZhg_pIei<akPt;MWuq:2J=jLQi\t3WKZWh8XJaB?P8WF<Qh0Y\i9fDc
%q8!Sknb.H^rteJ?0-=@.J,/]j5Q0qeT)S"HRf<!/%tFM`(k+?s:>Dlr_pa\:^L.!!gZ-##b[C/@J,%dUbs20I`;]6?_pcr(roIM)
%e#u!(s7hYIE'DIeaP^e^(&9dUP&*>R/r[_3'lpaJ7%#nGV_oQOH(%(Y"%&CU%CksF7d5.Vc7!_(V:R?A3]DlkbfB"bi!G!Zj]`lb
%mM<dtOl)DC:an&=TbP:_D.4!->p"XL9!pu^EO#"XO_fA@mViODkZ/u#\&"+LGr_j.)&G(#8.D_IiO02t$"O[iG!cOqSF@(CCSQih
%-r[sNe:Q:!N@ri)]IW4!.$XXMFLgUsD,g@^4"aGIAUg+#<!6UmYe"p-+AWARgS`'D#r/S[9L5V(ckFFWLQk8hRtcoT(YnFl_AY)U
%YcftS.JX?k6jU`ZN5fXK^qd7>k3,d7ZB*JJ4R[^$mTL/igiNgbU6@j\i4b?>[-1g1I"EbA>I7I(bt#b3F6@t)b[Nk[F'!!eZgp)u
%*/ku?/9gQ/\i/@%TuZnM/F%-N!7`\=%r5@0E,pntl)pXK3"gFJnOp>Y]S9]F:j@&hlA)kgjZQnpPcI]S*<SRCYSCa!9&Uj94!ds;
%*p]i"PZac#c";=t!7J/OPdo(W2+@WD]T,sI[.b#cqX?doT#Iu$SSD=Q!rLmb%;/DXcYnO\)#\mnQ^)*n,pqC-[U!1q;;dG9YCr(r
%EZ&A/85T4Zn<ijrTY$9u,`KI_4.ThVTOa'@P]F(a9k,SFALq+?LC&-!.S<(L@X]Z:aj@i0E"BQb0^rcB.3p%"GRo$Xc7#s&hLgoW
%me:7:j*"=^E`@1pB9^)5:LY>Z`EN'(KO]e?dP/aU*+-^*!:!0\#dLmCQkT55U3i^aR[k=hJjbLl'bT.nA!/HtnhTLR.9a:59sqe>
%5YFM5h[*%FLC%<o<Il$gEmFPpo-#!LTaUXCqOlh\g6rQ/Y8R7ta*O$FR\<%oVg%cKAoP4;prdn"GADqTO(5j3Z=m25.t^X5?3`8Q
%[qO\tlFmb=0u.,oRU&V7XdP`[>r2@>]4S8p2,@B[F7j<\7rHr&I*f"K`BZ'-CqrG*)OEnYG:21oq?[)2]#*9l?1`Vm3QP:5mc=Q@
%hhatO*`:k)'5g#<9jO!4?GcA06br9PM'@#,BAE.^:]@Eo%IQf>..I*a`m/f!%K-Ro%QF!%UacYq/ab(:OQVf$M9`3T6:G2:)$`s,
%6L7-8\j4hibuaOjPDV%#gY!e6p%KSL#RL1nn=`#NLa:aa/S/9H,@H>BIr*hR_^Qi>@7B;^I'BkiFsuetlH;-:bSqPI%n0JYLbCdR
%95s#@PO2TM'c7je)Us'Kf;3p1Ag_:=i[@IP@-aPXZf,at)LLl4eJPBRMCXm33C08!)i&<_KI\TA)!`eIPdTAM]7<TLXs&IqEPZ:U
%BnK04";VP716Q.&'MJ8nQ9=Wi",k'S&/5R'P.03)M%emSI^<T#.U[d8jk4tN$?IWAU154!i"b?o.QcM[UBp1L8Q`9c>heQ:-8<A,
%D@0]VdP0o?-Y6kN!@XmQ.'7idD0X3cD(r.@7R8qfAG>_t>6:AFi].VJ\IG"4.B$Q<PKW[GU89lmJF]#:=J.T#%K!)E\h_m9H7(1I
%rNbFag>0A8EO(/Xa:i;Mn[nn_AgeZ@Q3S(jetW(6@8jb.]n"G,0e7^"0UJ9YGW5XZ%m#QBk@lEkdmU"Wik/EA`Q5#J,Tknjqfd\F
%Iq;>pTa8K2[4n.0'_J.nf+M9&o->&8:XY3sme)?BIQ`SR&2^?meCT$<`g,HAfGo]orf4KA2iGTL0l=(=D/<2>..s1<(oWNtcC=sh
%&ZnU8q`g/?B")U&b.PtTPF<b)LIjpnN49j*YW3eO.JNUC2ck+f&HtX][Ti3@7r5KD#4#R_@?YoK[A[oH,YIY^;rmHTVa,-"m-TS]
%K(b>2\3A,mp92HL_JTMR@E)\TnCMh^>*OqZ]uqGQ(:jgr]52Ka!97QdGPNK=4Ma1H=)n*q;t5qrK@I@JX!'Z^qmgju[VmtM7N>/D
%+^;>-Q['gIjpU&718=73L!EJr>B]TjK?,7[mC!T60\K.r/GFrED+2"JZ3c#q,G!M6SBTM4T\a#$8UmG&jac*9oD1#_EgR*:p+.:s
%?#_j>+Jco,Ds6pd"HcK>)]ADBG%S_!"g)7eiMoui=91-M/]BKbco@9@BpLK_&<eTg=L0!EKI@"Y[q=<E7Y,=EV-+":FC:gs%TGS>
%QOU&7FGim"V3\E-%]ieC`:<'GYnYB4lMP67eC#nCgK_(&8Cf>EhM82m;ARa@jD6QJ9BDlj^2<%hjW>AZZ3;7S/C'.7!;!1Q:_h/s
%G?Dh)+Ji.?S/'5?c"(T#AbSa#lp.=J[^[fQd;+bFcO[e7(d\po>K&A;>BDNu@Q?]&k$/d.YoK]/=&N@7.@./tcA;c90K$;G?:iZu
%>C7r`""JL2*pPUt"ki]:Xbf3XXch<0o*DfdA2hL5\EtXfDoG7krEJ':o7AkJo$+MA.8#PB)5n8Kg"PPDm"9?9XID;kjpn'@nduCS
%aSqWhW:HYS<:-spX`iCW9,3D'O0g</3b(5SUKtlYkPp9P3p/AW<dgTa,d8hGN$o(.'&q=l"-1F53EWs7WNt)9orKlk'Jet8L`/=[
%kBGsNiE@D['&O89VPp\:iR0=\+&Qn]eLoT_QbqBPaCpq-G^&1>ik[h:>J#8KKe)8*/7C\U<`+]aeLb>?h`P]mcj1FQ]dFo[QGJRM
%-o/hsjKXMGROrg0UE,t,;b#h[j.^pu0u3'%F#cUgVmJ6;C.e4VUSaQRg[D/B.1$E@0jm/@)nOEqRL`RZji'3^q!3ai`+?X)HbiO,
%7f3YLMAb2$9at:Sllke_%*VepaY+OAQuZ@51I/EYi)5/68HuMnc/fYqMV4u_-*t@m983MBHL04G_3;F-m[).Xh(G,kU0Fs^O^'LW
%=I>PJ@/0/C4(9<2\[oZ6U0[D@IPqCJXR(lG1ka93&QRAe`SIG"W"-#kqP$ES-uA4p>H27mql,P?rXJ9d!olb_^s.8/CAE_s-W3fN
%.t+da#`Bs1L!.PT&JiL$ZL/s&8s/YGf&YmqS,rEQL(ca:jL33;KQWq"V];i`C^S^s[#duK!4E#gYqFaF_i1%_qPLM'$Nb9r/gnIR
%fF"Y"3]9mI'5S\,"BEU<p'P[@=JRFr>C?g^P`Uh[&T2L*c.]B[PbPNr0C;65>'9B/nH<!h>C6a^=G^.CP?7_")^1MF"!79f[_Y,,
%#[bhC/;TC!Z;udpg68]GZ,hPfQh-_2T&ILlmdn#Qg:D"(F'tTD,t&\+Te>sDBaDJ\6';hA6p<t&j;R&,5m'QH'"d,<";+Y.3ZXe;
%YRoWrg1gP+Nf]Fj@16)E)$1k%L_-'70[!r.dl:2'1Vd)*8`Ro-AeNZ'LraOp/9Nr-%ZlF-\s7hX9"6Nb+:H!%ef:]BBp*:@VER*,
%;%Pb?oo[<X%S=6eq'=B3d_J`oh'1)k'j@3!3,XM-dpt&n(qFZB7Q,I(Zli-rMPeWV7f'&7;k#^RlMUiHibU`"j;a#h8JZS[T&Wi*
%Rfo!0&HB/Z6[F5#qtq*:=Oj(O5Y'`Y2IPHRJDA&^OfK269iX$9'>hYf,7$VXMO0I+(:25r,6auV3?le#Z5:qIKlJg-6hYEE!3N:(
%F;AHPgsVc_oL+kt0*Y1Bp'.X8WM6qP#\tfHa#1+lGc^fMSbm\c;gfD2R$^0G_lag(q<%RX)Vg>CShas4FVI_,Z:!apbA(b,[H/n$
%KjC)K$<G<?6W)X0ZocAN5lt$o;@Xl6C.t=s6I#;Yd:blc&7a(5nIA(b&\:OV7ZBk2f_l'm@f7,hY@?6pWh$?Kh;A2/XV?]>%Cq[b
%6njEc+qUBgpBF6:<'$MI>9;@X079NuqIFZYNs!MrN`4s]-3rt)mtX8AG9.ur"7BUWI9kc$-AA#TQ4foIBIG.a)c>Y[J9PM-j@p+h
%P.6#m3a;us!D,uH=i4M\osmHVQ/99-hp-K,>EUj.9e:(@EE)6D@r%h83\Qb`G4<c&noRWg'q/`b$EDZf?7j,R#,md<;.!)Gb!gJG
%P>k$o77aY4V`63#idP/:-a4SK4^^X])nUXHV_9NK-Ed1(]j)9+\rZ6Q6$^;<@t)fFDAEK<l;>"d"5GLIl%5XG5@(ZVGr-"(YmXu0
%kZ//Zb2HEcoMQk-l!2O(q4t1A3S@E=^N6G6\Vt\+euAbP1/(t22g2NBp5=+EY"!HBC+)Q9*3nCHf[2alpZ`B8CNeV4=d1LQmbG0^
%'hE@8'_q'K].Y=sq=,rKhR&(af6LYK`*f0Vf+/i`YPL2fV[.D-(V#lO6G?Vp%<k6r1T:ksFkOH=XEY"[0&\BI=i_i3]t0%]c[17<
%$n`Kp!rrMe$(mG\QQMqu.!V7%3,e:5muYGLP(8QhMjC>2@$)C[?p'%Tah+"Y-FDVf.O`;/VRBTGi]Ec4,Gf<"Jdlk;^jfrI:A5Y[
%r,ArVU:cBHbYef.Bj^:n),"-F2W>UW`Qd2B30?P8Q_5O^.;2==8qu^f:O@^!Og_J:+YFfh5d0Y.?U1Lf&4[VmpjfJL[T,\<$B4;$
%6mGbZ*"!,Mc[58bM1OS+ZEc0KH(?cHW)$5*HPrd'*$W[34]?<U<qSjGe=03G!eU)=o")n++j`>_Mao$t`M"F".>W`fqZ[,jB*PSC
%6n6?a?OsN]PU?3\O=iEA![Un6Yc'/*pDAfsJ<7.@+^!:T3n%)bU)#oWJofPu0aYiuK&jX*3,.-t#L)[`"HL_DDPA+dZRd^Ah(H,>
%'bVW)gN=+pNG'>T\>JZKm7C=t)hPmLW`NB*PXM[gg+mmK4ZNJ>6i5%o2Urrdi!&";B:&00c[d&B8%ub`ePgY(`D&0KB$E7E;407&
%Vg]8aG3$9ej'qZ3gP7U[Z3t7TAEJ1cg,RZIdN^O>P![P,2S,ILqgP]8JQ,#dka;J4a<nBPe)6@MTI#k0<`TjY+d)@h\0oR6RNLLS
%"[G;`Ll5P3[)930=;%GrkfGCiC%+r*K.IaA!1oiu+o0&e&#HWAD]W!I<'hJ!["t>G9nKb1C_1.M9'$ak-VBTZm<6/CDEesFc<DG@
%Hg)r=$mtO)g%fu"p$Wit<G$#2]mQQ.[32j#U(_Q,K&<3!drjosi;<ofq#"MHQTGg;1lnI,i4LJ<Ce6TjXPX\?46-$B,%+%K\$cOk
%p2^!fM"pr-pC*&6iqA9F8a0,u$$X#8bifXVqKY@Ugu^65Ei<C\PP5c1&S7G<VA/!bl8JV+S5JF!N/_OZ):pFED5$'+Vr&l39DO;V
%]O>ck#c<YODYl-jY(>89Mb.lLQ#00,Ysuo^>`m#0Xl3H@<V<Xj9X=jn>=rZZ*'cq<2Ej>;,S5`+2X)t6,gUW0E*%p_+H_5&MSSj_
%YBeX:[[6U0NKe&\Co+eFM-M'r<Xsu:of'M%h+H3G+f16>]6UUV5<[M5EqiX7Qc=^+i*J:,?jdW;UVp,)d3PuZE,\a!ba:(&$>cXj
%D`+\-CR<S)@6n\GE4D>j)Q\-Oe:q_T^_iA8bEst;2s$Zu$"I:#Rk<5^_Lbf]mr1-mT\FU&`@aGe#\%Q$-4J+LA,/es\;eHW?*XV9
%7Hq,C&WHsh<=RCH((A+jP/F.O@":(,afRH-)HU,Mb'f\b[P\0!0t)O6#E#]5$X1sqHl4Wbm38\O0^KR["q2]9?4gqf!-L8U`u$KM
%BFG^n(BXk1%uTdu))*ar_BcVa$]MN2@gCaA&Ar0<#Ah.gn?$V%$+K7;=/Y5/^]kjYE[P3gH;38)GknB4/jB,$AjS2CDAXU*[6k&:
%CtgBEG.H%eHj0"9nek;Vn63JPKl/n?B?<k[!*d1S:t_1[\"gT@fumHa^ZaUbI"ds*AVi87<MLh!`QM>"8j#Tm?G<^T1@eH2)BWME
%c7/!,>4NDZHG);4+A#>uneJ`!;Xs=C>o+_mg#8C.@r"k?^&kuI4(IBQX"ADH<Cfubb"-=%!PXqE2=2BF1YQPE*MKV^E8,."[01h\
%NGTG9VB$%*$<hg?rQ(t+gifqIf_Z#.9j8Q1%H3k^jWs9`M?8g+5\7@+MUl@n!?@06]O]bWW5e^4F0W9q&]iUJNee.VA8Q$#e(.=Z
%Xo[0Dpp%7Ji'Xm0CHpNjQat+uaOk\&J6-6B=O#dI[W=`h/(4tPo<prE,d2D5f'E7r@5(01-nrV8G"(SB6[D<rqkb,O!GVK$d]=Lf
%aB?2eZ0dZQc[e+[MFB;123t!"H!^>?\=8AliM+/"+]DZnCG.EDi2WTWqdH)Z1sV*&Ye=$a]ZglKk$i9gk5.S-?NYE]e>haDEhW$u
%m=\\5&_R^q/c>abeFZ;VWe]*(kq2?"5s`brrXE`_>,6gW08[ZmI'&k:M@O8s[4W1S]uZ)tS'+Q<"@\+#+b9GO[c)4F^h;O'%3$9[
%K4dVRLYFIKB:\XbaD,]b4>Wa&pralIFkWlls5EQ&hYuN8c[YPY8:'sJmlpcD[niWGq'Ar1^\tA3:JY>Fp%EUEs6Wm+T76P'^\n6G
%r+Q&ednbJipOE(^&,m[M:8Yu~>
%AI9_PrivateDataEnd
